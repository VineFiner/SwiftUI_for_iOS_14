- SWIFTUI 2 为iOS 14构建SwiftUI应用程序

- [孟] 嗨 我叫孟 来自Design+Code 欢迎来到我的iOS14 SwiftUI课程 有史以来第一次 我们将为iOS iPadOS 和macOS构建多平台应用程序 只使用SwiftUI 使用同样的技术 和最小的代码更改 你就能 使你的代码跨平台工作 从iOS开始 我们将采用侧边栏导航 这意味着这很好地转化到Mac应用程序中 对于iPhone 我们将使用标签栏 这对于导航和自适应布局非常有用 因此你可以轻松地在横向模式 和纵向模式之间切换 而且你的布局看起来仍然很棒 侧边栏让你有很多导航项目 而且你还可以在开和关之间切换 因为我们使用了新的惰性网格 我们就能调整我们的布局了 所以屏幕越大 我们就能有更多的列 我们还将使用新的匹配几何效果 它允许你在视图之间进行转换 对于新视图 你可以滚动 和更多的导航 如modal 所有这些动画都可以在所有平台上工作 比如iPad 在这种情况下 我们可以把它放在侧边栏上 但如果不是 我们也可以有不同类型的动画 存在于它自己的容器中 多亏了懒惰网格 我们就可以 在这样的模式之间切换 并在滚动时应用一些3D动画 同时 转换仍将工作 并且你将拥有滚动功能 以及模态行为 这些动画也将完美地适应设备 所以对于iPhone 我们将会有单独的专栏 卡片会叠得更紧 然后我们要学习更多的动画 所以在这种情况下 我们要像这样叠卡片 你可以翻转卡片 每个卡片都有动画 同样 它也适用于iPhone 我们要让它适应 屏幕尺寸的过渡 使用强调颜色和预设颜色 你的应用程序会自动适应黑暗模式 代码也没有改变 同样 对于Mac 你也可以切换到灯光模式 如果菜单是半透明的 并突出了颜色 它看起来还是很棒的 由于我们使用的是动态类型 文本将根据平台完美翻译 例如 在Mac上 它会稍微小一点 模态是这样的 它也可以更大 我们可以有多个站点导航 网格布局和填充 而圆角会适应平台 所以在这门课中 我们将研究不同类型的导航 例如默认导航 可以深入到很深的地方 能跨平台工作 我们可以有多级菜单 或者根据内容 我们可以采用模式路线 你想怎么深入就怎么深入 我们还将制作自定义动画原型 并能够使用静态数据 因此你可以搜索 并且易于过滤 我们还将一起构建一个小部件 这样就可以在主屏幕上显示关键内容 最后 我们将学习如何在文件 文件夹和资产方面 构建我们的应用程序 所以我希望你可以期待 构建你的第一个iOS14应用程序 为了完成本课程 你将要用到 Xcode12 所以请登录www.developer.apple.com 然后你可以找到Xcode12 在页面的底部 你将找到下载Xcode12 你将在此使用Apple ID登录 不一定是在Beta下载页面中的 付费会员 你要进入应用程序中 并下载Xcode12Beta2 在过去的10个月里 SwiftUI一直很稳定 因此 即使你在新的测试版上 它应该工作得很好 但我会为每个测试版提供源文件 所以当你下载这个之后 我强烈建议你下载macOS Big Sur 如果你想测试Mac应用程序 并为macOS开发 你将需要Big Sur 但如果你只想关注iOS和iPad 所提供的经验教训和代码应该运行良好 然而 可能存在一些不一致之处 但我想指出 从我的经验来看 以及从我读到的评论来看 Big Sur很稳定 但是 当你安装它时 你绝对应该备份 分区 或者简单地安装在非工作计算机上 源文件可在第二节 或在www.designcode.io的下载部分中提供 在这里 你可以找到最终应用程序的源文件 我已经给你们看过了这门课的每一部分 这样你就可以将你的代码与我的代码进行比较 此外 请确保重新下载文件 每当你有更新的测试版时 我会尽我所能更新代码 如果有任何破坏性的变化 我还提供了设计模板 所以你肯定可以了解我是如何组织 iOS和iPad 以及图标的设计 这也是可用于你的应用程序的伟大模板 因此你可以将应用程序图标放在组件中 它会自动更新所有这些图标 这样你就可以使用正确的名称和分辨率 进行导出 在为Apple平台设计时 你应该下载适用于iOS iPadOS和tvOS的 SF Pro字体 适用于watchOS的SF Compact字体是可选的 但很适合代码高亮显示 而New York New York则是衬线字体 最后 对于图标 你应该从苹果下载SF Symbols应用程序 这里你要点击SF符号 查找SF符号2的测试版 新的SF符号2有超过2400个 不同笔划宽度的图标 而且 现在有多种颜色选择了 要在SwiftUI中使用这些图标 你不需要导入任何内容 你只需将图标的名称 放进SwiftUI代码就可以了 好吧 我们开始吧 现在我们要打开Xcode 这里我们将创建一个新的Xcode项目 这里 我们要去多平台 点击App 点击Next 我们将把它命名为设计代码课程 然后单击Next 让我们将其保存到下载中 并启用在Mac上 创建Git存储库 然后单击Create 现在你面前有一个新的Xcode项目 你可以双击选项卡栏 使其最大化 现在我们在左侧有带有共享的导航器 这既适用于iOS代码 也适用于macOS代码 而且你还可以为iOS和macOS编写特定于平台的代码 稍后我将对此进行解释 但现在 我们将把重点放在共享上 我们将确保我们的代码能够正常工作 在所有平台上 所以在过去的SwiftUI项目中 我们有App delegate.swift文件 但现在它已经被DesignCodeCourse App取代了 它引用了内容视图 内容视图是你的第一个屏幕 我们将在下一节课中再讨论这个问题 但现在我们要在Xcode12中 建立资产 我们现在有了强调颜色 这是一种单一的颜色 它将为你的应用程序文本按钮 以及导航所选的状态着色 现在建议有外观 无论是光明还是黑暗 所以在灯光模式下 会稍微暗一些 使对比度更好 同样地 对于暗模式 为了更好的对比度 颜色将变浅 对于应用程序图标 跟以前一模一样 但现在我们有一个Mac专区 此部分是可选的 因为我已经为你准备好了资产 如果你想创建一个自定义图标 我在FIGMA中准备了这个模板 你只需更新组件 然后可以导出文件 所以我们要把它放到下载中 然后你需要做的就是选择 所有的iPhone资产 然后拖拽到 你看到的所有蓝色方块的地方 因为这可能有点耗时 以确保所有的分辨率正确无误 和所有的颜色都是正确的 无论是明暗模式 我为你准备了这个部分 所以我们只需要删除两个应用程序图标和强调颜色 来替换它 我们要去资产文件夹找资产 在所有这些文件夹中 我们直接拖拽到这个空间 正如我前面提到的 我们有光模式和暗模式的强调颜色 然后是iPhone iPad和Mac的应用图标 以及应用商店 然后我设置了一堆我们可以用于应用程序的颜色 所以在这里 你可以像这样导航它 也可以转到文件夹 你可以找到不同的颜色 所以背景 光模式和暗模式 都有一到五个主次 然后我们有一堆图像 可以是SVG格式的 所以以前 我们只能使用PDF 也只能使用PNG 但是现在我们也可以使用SVG 用于图标和矢量插图 SVG是很棒的 对于混合了矢量和位图的图像 以及复杂的渐变或掩蔽 我推荐PDF格式 如果你想要像素的完美 但以较大的文件大小为代价 你绝对可以使用PNG 如果它没有透明度 然后你可以使用JPEG 否则 不要太担心这些 因为这些资产已经为你准备好了 我们将会边讲解边学 现在我们将进入内容视图 我们终于可以开始用SwiftUI编码了 在下一节课 再见吧