WEBVTT

1
00:00:06.351 --> 00:00:11.168
SWIFTUI 2 为iOS 14构建SwiftUI应用程序

2
00:00:12.610 --> 00:00:13.760
<v 孟>嗨 我叫孟</v>

3
00:00:13.760 --> 00:00:15.390
来自Design+Code

4
00:00:15.390 --> 00:00:19.620
欢迎来到我的iOS14 SwiftUI课程

5
00:00:19.620 --> 00:00:21.250
有史以来第一次

6
00:00:21.250 --> 00:00:26.250
我们将为iOS iPadOS 和macOS构建多平台应用程序

7
00:00:26.680 --> 00:00:29.300
只使用SwiftUI

8
00:00:29.300 --> 00:00:30.640
使用同样的技术

9
00:00:30.640 --> 00:00:32.410
和最小的代码更改

10
00:00:32.410 --> 00:00:33.243
你就能

11
00:00:33.243 --> 00:00:36.420
使你的代码跨平台工作

12
00:00:36.420 --> 00:00:37.660
从iOS开始

13
00:00:37.660 --> 00:00:40.600
我们将采用侧边栏导航

14
00:00:40.600 --> 00:00:44.160
这意味着这很好地转化到Mac应用程序中

15
00:00:44.160 --> 00:00:47.380
对于iPhone 我们将使用标签栏

16
00:00:47.380 --> 00:00:51.240
这对于导航和自适应布局非常有用

17
00:00:51.240 --> 00:00:54.270
因此你可以轻松地在横向模式

18
00:00:54.270 --> 00:00:58.020
和纵向模式之间切换 而且你的布局看起来仍然很棒

19
00:00:58.020 --> 00:01:01.480
侧边栏让你有很多导航项目

20
00:01:01.480 --> 00:01:04.750
而且你还可以在开和关之间切换

21
00:01:04.750 --> 00:01:07.830
因为我们使用了新的惰性网格

22
00:01:07.830 --> 00:01:10.700
我们就能调整我们的布局了

23
00:01:10.700 --> 00:01:12.040
所以屏幕越大

24
00:01:12.040 --> 00:01:14.290
我们就能有更多的列

25
00:01:14.290 --> 00:01:16.930
我们还将使用新的匹配几何效果

26
00:01:16.930 --> 00:01:19.870
它允许你在视图之间进行转换

27
00:01:19.870 --> 00:01:21.770
对于新视图

28
00:01:21.770 --> 00:01:23.430
你可以滚动

29
00:01:23.430 --> 00:01:25.830
和更多的导航 如modal

30
00:01:25.830 --> 00:01:29.210
所有这些动画都可以在所有平台上工作

31
00:01:29.210 --> 00:01:31.300
比如iPad 在这种情况下

32
00:01:31.300 --> 00:01:34.480
我们可以把它放在侧边栏上

33
00:01:34.480 --> 00:01:38.340
但如果不是 我们也可以有不同类型的动画

34
00:01:38.340 --> 00:01:40.760
存在于它自己的容器中

35
00:01:40.760 --> 00:01:42.310
多亏了懒惰网格

36
00:01:42.310 --> 00:01:43.380
我们就可以

37
00:01:43.380 --> 00:01:45.440
在这样的模式之间切换

38
00:01:45.440 --> 00:01:49.320
并在滚动时应用一些3D动画

39
00:01:49.320 --> 00:01:50.360
同时

40
00:01:50.360 --> 00:01:54.440
转换仍将工作 并且你将拥有滚动功能

41
00:01:54.440 --> 00:01:56.900
以及模态行为

42
00:01:56.900 --> 00:02:00.080
这些动画也将完美地适应设备

43
00:02:00.080 --> 00:02:02.290
所以对于iPhone 我们将会有单独的专栏

44
00:02:02.290 --> 00:02:04.683
卡片会叠得更紧

45
00:02:06.670 --> 00:02:08.430
然后我们要学习更多的动画

46
00:02:08.430 --> 00:02:11.610
所以在这种情况下 我们要像这样叠卡片

47
00:02:11.610 --> 00:02:14.222
你可以翻转卡片

48
00:02:14.222 --> 00:02:17.033
每个卡片都有动画

49
00:02:18.170 --> 00:02:20.640
同样 它也适用于iPhone

50
00:02:20.640 --> 00:02:22.870
我们要让它适应

51
00:02:22.870 --> 00:02:25.350
屏幕尺寸的过渡

52
00:02:25.350 --> 00:02:27.940
使用强调颜色和预设颜色

53
00:02:27.940 --> 00:02:30.770
你的应用程序会自动适应黑暗模式

54
00:02:30.770 --> 00:02:32.920
代码也没有改变

55
00:02:32.920 --> 00:02:35.720
同样 对于Mac 你也可以切换到灯光模式

56
00:02:35.720 --> 00:02:38.940
如果菜单是半透明的 并突出了颜色

57
00:02:38.940 --> 00:02:40.830
它看起来还是很棒的

58
00:02:40.830 --> 00:02:42.646
由于我们使用的是动态类型

59
00:02:42.646 --> 00:02:46.150
文本将根据平台完美翻译

60
00:02:46.150 --> 00:02:47.730
例如 在Mac上

61
00:02:47.730 --> 00:02:49.810
它会稍微小一点

62
00:02:49.810 --> 00:02:52.450
模态是这样的

63
00:02:52.450 --> 00:02:54.370
它也可以更大

64
00:02:54.370 --> 00:02:57.670
我们可以有多个站点导航

65
00:02:57.670 --> 00:02:59.890
网格布局和填充

66
00:02:59.890 --> 00:03:02.880
而圆角会适应平台

67
00:03:02.880 --> 00:03:03.713
所以在这门课中

68
00:03:03.713 --> 00:03:05.070
我们将研究不同类型的导航

69
00:03:05.070 --> 00:03:07.470
例如默认导航

70
00:03:07.470 --> 00:03:09.090
可以深入到很深的地方

71
00:03:09.090 --> 00:03:11.740
能跨平台工作

72
00:03:11.740 --> 00:03:14.710
我们可以有多级菜单

73
00:03:14.710 --> 00:03:16.120
或者根据内容

74
00:03:16.120 --> 00:03:18.000
我们可以采用模式路线

75
00:03:18.000 --> 00:03:20.790
你想怎么深入就怎么深入

76
00:03:20.790 --> 00:03:24.250
我们还将制作自定义动画原型

77
00:03:24.250 --> 00:03:28.180
并能够使用静态数据 因此你可以搜索

78
00:03:28.180 --> 00:03:30.100
并且易于过滤

79
00:03:30.100 --> 00:03:32.370
我们还将一起构建一个小部件

80
00:03:32.370 --> 00:03:35.950
这样就可以在主屏幕上显示关键内容

81
00:03:35.950 --> 00:03:38.390
最后 我们将学习如何在文件 文件夹和资产方面

82
00:03:38.390 --> 00:03:41.260
构建我们的应用程序

83
00:03:41.260 --> 00:03:43.030
所以我希望你可以期待

84
00:03:43.030 --> 00:03:45.280
构建你的第一个iOS14应用程序

85
00:03:45.280 --> 00:03:47.050
为了完成本课程 你将要用到

86
00:03:47.050 --> 00:03:49.120
Xcode12

87
00:03:49.120 --> 00:03:52.430
所以请登录www.developer.apple.com

88
00:03:52.430 --> 00:03:54.420
然后你可以找到Xcode12

89
00:03:54.420 --> 00:03:56.300
在页面的底部

90
00:03:56.300 --> 00:03:58.270
你将找到下载Xcode12

91
00:03:58.270 --> 00:04:00.860
你将在此使用Apple ID登录

92
00:04:00.860 --> 00:04:03.320
不一定是在Beta下载页面中的

93
00:04:03.320 --> 00:04:05.270
付费会员

94
00:04:05.270 --> 00:04:07.120
你要进入应用程序中

95
00:04:07.120 --> 00:04:10.490
并下载Xcode12Beta2

96
00:04:10.490 --> 00:04:14.490
在过去的10个月里 SwiftUI一直很稳定

97
00:04:14.490 --> 00:04:17.930
因此 即使你在新的测试版上 它应该工作得很好

98
00:04:17.930 --> 00:04:21.560
但我会为每个测试版提供源文件

99
00:04:21.560 --> 00:04:22.980
所以当你下载这个之后

100
00:04:22.980 --> 00:04:26.150
我强烈建议你下载macOS Big Sur

101
00:04:26.150 --> 00:04:28.510
如果你想测试Mac应用程序

102
00:04:28.510 --> 00:04:31.830
并为macOS开发 你将需要Big Sur

103
00:04:31.830 --> 00:04:35.870
但如果你只想关注iOS和iPad

104
00:04:35.870 --> 00:04:39.480
所提供的经验教训和代码应该运行良好

105
00:04:39.480 --> 00:04:42.700
然而 可能存在一些不一致之处

106
00:04:42.700 --> 00:04:45.060
但我想指出 从我的经验来看

107
00:04:45.060 --> 00:04:46.970
以及从我读到的评论来看

108
00:04:46.970 --> 00:04:48.830
Big Sur很稳定

109
00:04:48.830 --> 00:04:50.480
但是 当你安装它时

110
00:04:50.480 --> 00:04:52.940
你绝对应该备份 分区

111
00:04:52.940 --> 00:04:56.200
或者简单地安装在非工作计算机上

112
00:04:56.200 --> 00:04:59.580
源文件可在第二节

113
00:04:59.580 --> 00:05:03.090
或在www.designcode.io的下载部分中提供

114
00:05:03.090 --> 00:05:06.890
在这里 你可以找到最终应用程序的源文件

115
00:05:06.890 --> 00:05:10.550
我已经给你们看过了这门课的每一部分

116
00:05:10.550 --> 00:05:13.580
这样你就可以将你的代码与我的代码进行比较

117
00:05:13.580 --> 00:05:16.180
此外 请确保重新下载文件

118
00:05:16.180 --> 00:05:18.390
每当你有更新的测试版时

119
00:05:18.390 --> 00:05:20.290
我会尽我所能更新代码

120
00:05:20.290 --> 00:05:22.590
如果有任何破坏性的变化

121
00:05:22.590 --> 00:05:24.540
我还提供了设计模板

122
00:05:24.540 --> 00:05:28.190
所以你肯定可以了解我是如何组织

123
00:05:28.190 --> 00:05:33.190
iOS和iPad 以及图标的设计

124
00:05:33.480 --> 00:05:36.490
这也是可用于你的应用程序的伟大模板

125
00:05:36.490 --> 00:05:39.990
因此你可以将应用程序图标放在组件中

126
00:05:39.990 --> 00:05:43.030
它会自动更新所有这些图标

127
00:05:43.030 --> 00:05:45.560
这样你就可以使用正确的名称和分辨率

128
00:05:45.560 --> 00:05:46.890
进行导出

129
00:05:46.890 --> 00:05:49.280
在为Apple平台设计时

130
00:05:49.280 --> 00:05:52.600
你应该下载适用于iOS iPadOS和tvOS的

131
00:05:52.600 --> 00:05:54.870
SF Pro字体

132
00:05:54.870 --> 00:05:59.350
适用于watchOS的SF Compact字体是可选的

133
00:05:59.350 --> 00:06:01.460
但很适合代码高亮显示

134
00:06:01.460 --> 00:06:04.020
而New York New York则是衬线字体

135
00:06:04.020 --> 00:06:05.710
最后 对于图标

136
00:06:05.710 --> 00:06:09.310
你应该从苹果下载SF Symbols应用程序

137
00:06:09.310 --> 00:06:11.570
这里你要点击SF符号

138
00:06:11.570 --> 00:06:15.500
查找SF符号2的测试版

139
00:06:15.500 --> 00:06:20.480
新的SF符号2有超过2400个

140
00:06:20.480 --> 00:06:22.560
不同笔划宽度的图标

141
00:06:22.560 --> 00:06:25.743
而且 现在有多种颜色选择了

142
00:06:26.770 --> 00:06:28.870
要在SwiftUI中使用这些图标

143
00:06:28.870 --> 00:06:31.010
你不需要导入任何内容

144
00:06:31.010 --> 00:06:33.530
你只需将图标的名称

145
00:06:33.530 --> 00:06:35.280
放进SwiftUI代码就可以了

146
00:06:35.280 --> 00:06:37.300
好吧 我们开始吧

147
00:06:37.300 --> 00:06:38.840
现在我们要打开Xcode

148
00:06:38.840 --> 00:06:41.870
这里我们将创建一个新的Xcode项目

149
00:06:41.870 --> 00:06:44.810
这里 我们要去多平台

150
00:06:44.810 --> 00:06:48.290
点击App 点击Next

151
00:06:48.290 --> 00:06:51.840
我们将把它命名为设计代码课程

152
00:06:51.840 --> 00:06:54.030
然后单击Next

153
00:06:54.030 --> 00:06:58.320
让我们将其保存到下载中 并启用在Mac上

154
00:06:58.320 --> 00:06:59.910
创建Git存储库

155
00:06:59.910 --> 00:07:01.430
然后单击Create

156
00:07:01.430 --> 00:07:05.220
现在你面前有一个新的Xcode项目

157
00:07:05.220 --> 00:07:06.840
你可以双击选项卡栏

158
00:07:06.840 --> 00:07:08.300
使其最大化

159
00:07:08.300 --> 00:07:12.030
现在我们在左侧有带有共享的导航器

160
00:07:12.030 --> 00:07:14.900
这既适用于iOS代码 也适用于macOS代码

161
00:07:14.900 --> 00:07:19.010
而且你还可以为iOS和macOS编写特定于平台的代码

162
00:07:19.010 --> 00:07:21.600
稍后我将对此进行解释

163
00:07:21.600 --> 00:07:24.240
但现在 我们将把重点放在共享上

164
00:07:24.240 --> 00:07:27.018
我们将确保我们的代码能够正常工作

165
00:07:27.018 --> 00:07:28.870
在所有平台上

166
00:07:28.870 --> 00:07:31.320
所以在过去的SwiftUI项目中

167
00:07:31.320 --> 00:07:33.710
我们有App delegate.swift文件

168
00:07:33.710 --> 00:07:37.860
但现在它已经被DesignCodeCourse App取代了

169
00:07:37.860 --> 00:07:40.410
它引用了内容视图

170
00:07:40.410 --> 00:07:43.110
内容视图是你的第一个屏幕

171
00:07:43.110 --> 00:07:45.440
我们将在下一节课中再讨论这个问题

172
00:07:45.440 --> 00:07:48.260
但现在我们要在Xcode12中

173
00:07:48.260 --> 00:07:51.130
建立资产 我们现在有了强调颜色

174
00:07:51.130 --> 00:07:55.260
这是一种单一的颜色 它将为你的应用程序文本按钮

175
00:07:55.260 --> 00:07:58.390
以及导航所选的状态着色

176
00:07:58.390 --> 00:08:01.670
现在建议有外观

177
00:08:01.670 --> 00:08:03.840
无论是光明还是黑暗

178
00:08:03.840 --> 00:08:04.900
所以在灯光模式下

179
00:08:04.900 --> 00:08:07.010
会稍微暗一些

180
00:08:07.010 --> 00:08:09.250
使对比度更好

181
00:08:09.250 --> 00:08:11.310
同样地 对于暗模式

182
00:08:11.310 --> 00:08:14.180
为了更好的对比度 颜色将变浅

183
00:08:14.180 --> 00:08:15.640
对于应用程序图标

184
00:08:15.640 --> 00:08:17.330
跟以前一模一样

185
00:08:17.330 --> 00:08:20.570
但现在我们有一个Mac专区

186
00:08:20.570 --> 00:08:21.740
此部分是可选的

187
00:08:21.740 --> 00:08:24.400
因为我已经为你准备好了资产

188
00:08:24.400 --> 00:08:26.110
如果你想创建一个自定义图标

189
00:08:26.110 --> 00:08:27.950
我在FIGMA中准备了这个模板

190
00:08:27.950 --> 00:08:31.070
你只需更新组件

191
00:08:31.070 --> 00:08:33.330
然后可以导出文件

192
00:08:33.330 --> 00:08:35.360
所以我们要把它放到下载中

193
00:08:35.360 --> 00:08:37.890
然后你需要做的就是选择

194
00:08:37.890 --> 00:08:42.370
所有的iPhone资产 然后拖拽到

195
00:08:42.370 --> 00:08:44.750
你看到的所有蓝色方块的地方

196
00:08:44.750 --> 00:08:46.730
因为这可能有点耗时

197
00:08:46.730 --> 00:08:48.780
以确保所有的分辨率正确无误

198
00:08:48.780 --> 00:08:51.000
和所有的颜色都是正确的

199
00:08:51.000 --> 00:08:51.950
无论是明暗模式

200
00:08:51.950 --> 00:08:53.900
我为你准备了这个部分

201
00:08:53.900 --> 00:08:58.440
所以我们只需要删除两个应用程序图标和强调颜色

202
00:08:58.440 --> 00:09:00.360
来替换它

203
00:09:00.360 --> 00:09:05.070
我们要去资产文件夹找资产

204
00:09:05.070 --> 00:09:08.000
在所有这些文件夹中

205
00:09:08.000 --> 00:09:12.583
我们直接拖拽到这个空间

206
00:09:13.790 --> 00:09:15.000
正如我前面提到的

207
00:09:15.000 --> 00:09:19.610
我们有光模式和暗模式的强调颜色

208
00:09:19.610 --> 00:09:24.530
然后是iPhone iPad和Mac的应用图标

209
00:09:24.530 --> 00:09:26.380
以及应用商店

210
00:09:26.380 --> 00:09:30.380
然后我设置了一堆我们可以用于应用程序的颜色

211
00:09:30.380 --> 00:09:32.870
所以在这里 你可以像这样导航它

212
00:09:32.870 --> 00:09:34.580
也可以转到文件夹

213
00:09:34.580 --> 00:09:36.610
你可以找到不同的颜色

214
00:09:36.610 --> 00:09:39.800
所以背景 光模式和暗模式

215
00:09:39.800 --> 00:09:42.031
都有一到五个主次

216
00:09:42.031 --> 00:09:44.214
然后我们有一堆图像

217
00:09:44.214 --> 00:09:47.080
可以是SVG格式的

218
00:09:47.080 --> 00:09:51.610
所以以前 我们只能使用PDF 也只能使用PNG

219
00:09:51.610 --> 00:09:54.280
但是现在我们也可以使用SVG

220
00:09:54.280 --> 00:09:58.930
用于图标和矢量插图 SVG是很棒的

221
00:09:58.930 --> 00:10:02.960
对于混合了矢量和位图的图像

222
00:10:02.960 --> 00:10:06.650
以及复杂的渐变或掩蔽

223
00:10:06.650 --> 00:10:08.320
我推荐PDF格式

224
00:10:08.320 --> 00:10:09.950
如果你想要像素的完美

225
00:10:09.950 --> 00:10:12.630
但以较大的文件大小为代价

226
00:10:12.630 --> 00:10:14.470
你绝对可以使用PNG

227
00:10:14.470 --> 00:10:16.920
如果它没有透明度

228
00:10:16.920 --> 00:10:18.293
然后你可以使用JPEG

229
00:10:19.300 --> 00:10:21.300
否则 不要太担心这些

230
00:10:21.300 --> 00:10:24.100
因为这些资产已经为你准备好了

231
00:10:24.100 --> 00:10:26.160
我们将会边讲解边学

232
00:10:26.160 --> 00:10:27.930
现在我们将进入内容视图

233
00:10:27.930 --> 00:10:30.840
我们终于可以开始用SwiftUI编码了

234
00:10:30.840 --> 00:10:31.673
在下一节课

235
00:10:31.673 --> 00:10:32.733
再见吧

