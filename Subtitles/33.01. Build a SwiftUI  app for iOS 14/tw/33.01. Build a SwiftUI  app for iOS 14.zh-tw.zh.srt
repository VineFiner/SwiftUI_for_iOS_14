1
00:00:06,351 --> 00:00:11,168
SWIFTUI 2 為iOS 14構建SwiftUI應用程式

2
00:00:12,610 --> 00:00:13,760
- [孟] 嗨 我叫孟

3
00:00:13,760 --> 00:00:15,390
來自Design+Code

4
00:00:15,390 --> 00:00:19,620
歡迎來到我的iOS14 SwiftUI課程

5
00:00:19,620 --> 00:00:21,250
有史以來第一次

6
00:00:21,250 --> 00:00:26,250
我們將為iOS iPadOS 和macOS構建多平臺應用程式

7
00:00:26,680 --> 00:00:29,300
只使用SwiftUI

8
00:00:29,300 --> 00:00:30,640
使用同樣的技術

9
00:00:30,640 --> 00:00:32,410
和最小的代碼更改

10
00:00:32,410 --> 00:00:33,243
你就能

11
00:00:33,243 --> 00:00:36,420
使你的代碼跨平臺工作

12
00:00:36,420 --> 00:00:37,660
從iOS開始

13
00:00:37,660 --> 00:00:40,600
我們將採用側邊欄導航

14
00:00:40,600 --> 00:00:44,160
這意味著這很好地轉化到Mac應用程式中

15
00:00:44,160 --> 00:00:47,380
對於iPhone 我們將使用標簽欄

16
00:00:47,380 --> 00:00:51,240
這對於導航和自適應佈局非常有用

17
00:00:51,240 --> 00:00:54,270
因此你可以輕松地在橫向模式

18
00:00:54,270 --> 00:00:58,020
和縱向模式之間切換 而且你的佈局看起來仍然很棒

19
00:00:58,020 --> 00:01:01,480
側邊欄讓你有很多導航項目

20
00:01:01,480 --> 00:01:04,750
而且你還可以在開和關之間切換

21
00:01:04,750 --> 00:01:07,830
因為我們使用了新的惰性網格

22
00:01:07,830 --> 00:01:10,700
我們就能調整我們的佈局了

23
00:01:10,700 --> 00:01:12,040
所以屏幕越大

24
00:01:12,040 --> 00:01:14,290
我們就能有更多的列

25
00:01:14,290 --> 00:01:16,930
我們還將使用新的匹配幾何效果

26
00:01:16,930 --> 00:01:19,870
它允許你在視圖之間進行轉換

27
00:01:19,870 --> 00:01:21,770
對於新視圖

28
00:01:21,770 --> 00:01:23,430
你可以滾動

29
00:01:23,430 --> 00:01:25,830
和更多的導航 如modal

30
00:01:25,830 --> 00:01:29,210
所有這些動畫都可以在所有平臺上工作

31
00:01:29,210 --> 00:01:31,300
比如iPad 在這種情況下

32
00:01:31,300 --> 00:01:34,480
我們可以把它放在側邊欄上

33
00:01:34,480 --> 00:01:38,340
但如果不是 我們也可以有不同類型的動畫

34
00:01:38,340 --> 00:01:40,760
存在於它自己的容器中

35
00:01:40,760 --> 00:01:42,310
多虧了懶惰網格

36
00:01:42,310 --> 00:01:43,380
我們就可以

37
00:01:43,380 --> 00:01:45,440
在這樣的模式之間切換

38
00:01:45,440 --> 00:01:49,320
並在滾動時應用一些3D動畫

39
00:01:49,320 --> 00:01:50,360
同時

40
00:01:50,360 --> 00:01:54,440
轉換仍將工作 並且你將擁有滾動功能

41
00:01:54,440 --> 00:01:56,900
以及模態行為

42
00:01:56,900 --> 00:02:00,080
這些動畫也將完美地適應設備

43
00:02:00,080 --> 00:02:02,290
所以對於iPhone 我們將會有單獨的專欄

44
00:02:02,290 --> 00:02:04,683
卡片會疊得更緊

45
00:02:06,670 --> 00:02:08,430
然後我們要學習更多的動畫

46
00:02:08,430 --> 00:02:11,610
所以在這種情況下 我們要像這樣疊卡片

47
00:02:11,610 --> 00:02:14,222
你可以翻轉卡片

48
00:02:14,222 --> 00:02:17,033
每個卡片都有動畫

49
00:02:18,170 --> 00:02:20,640
同樣 它也適用於iPhone

50
00:02:20,640 --> 00:02:22,870
我們要讓它適應

51
00:02:22,870 --> 00:02:25,350
屏幕尺寸的過渡

52
00:02:25,350 --> 00:02:27,940
使用強調顏色和預設顏色

53
00:02:27,940 --> 00:02:30,770
你的應用程式會自動適應黑暗模式

54
00:02:30,770 --> 00:02:32,920
代碼也沒有改變

55
00:02:32,920 --> 00:02:35,720
同樣 對於Mac 你也可以切換到燈光模式

56
00:02:35,720 --> 00:02:38,940
如果菜單是半透明的 並突出了顏色

57
00:02:38,940 --> 00:02:40,830
它看起來還是很棒的

58
00:02:40,830 --> 00:02:42,646
由於我們使用的是動態類型

59
00:02:42,646 --> 00:02:46,150
文本將根據平臺完美翻譯

60
00:02:46,150 --> 00:02:47,730
例如 在Mac上

61
00:02:47,730 --> 00:02:49,810
它會稍微小一點

62
00:02:49,810 --> 00:02:52,450
模態是這樣的

63
00:02:52,450 --> 00:02:54,370
它也可以更大

64
00:02:54,370 --> 00:02:57,670
我們可以有多個站點導航

65
00:02:57,670 --> 00:02:59,890
網格佈局和填充

66
00:02:59,890 --> 00:03:02,880
而圓角會適應平臺

67
00:03:02,880 --> 00:03:03,713
所以在這門課中

68
00:03:03,713 --> 00:03:05,070
我們將研究不同類型的導航

69
00:03:05,070 --> 00:03:07,470
例如默認導航

70
00:03:07,470 --> 00:03:09,090
可以深入到很深的地方

71
00:03:09,090 --> 00:03:11,740
能跨平臺工作

72
00:03:11,740 --> 00:03:14,710
我們可以有多級菜單

73
00:03:14,710 --> 00:03:16,120
或者根據內容

74
00:03:16,120 --> 00:03:18,000
我們可以採用模式路線

75
00:03:18,000 --> 00:03:20,790
你想怎麼深入就怎麼深入

76
00:03:20,790 --> 00:03:24,250
我們還將製作自定義動畫原型

77
00:03:24,250 --> 00:03:28,180
並能夠使用靜態數據 因此你可以搜索

78
00:03:28,180 --> 00:03:30,100
並且易於過濾

79
00:03:30,100 --> 00:03:32,370
我們還將一起構建一個小部件

80
00:03:32,370 --> 00:03:35,950
這樣就可以在主屏幕上顯示關鍵內容

81
00:03:35,950 --> 00:03:38,390
最後 我們將學習如何在文件 文件夾和資產方面

82
00:03:38,390 --> 00:03:41,260
構建我們的應用程式

83
00:03:41,260 --> 00:03:43,030
所以我希望你可以期待

84
00:03:43,030 --> 00:03:45,280
構建你的第一個iOS14應用程式

85
00:03:45,280 --> 00:03:47,050
為了完成本課程 你將要用到

86
00:03:47,050 --> 00:03:49,120
Xcode12

87
00:03:49,120 --> 00:03:52,430
所以請登錄www.developer.apple.com

88
00:03:52,430 --> 00:03:54,420
然後你可以找到Xcode12

89
00:03:54,420 --> 00:03:56,300
在頁面的底部

90
00:03:56,300 --> 00:03:58,270
你將找到下載Xcode12

91
00:03:58,270 --> 00:04:00,860
你將在此使用Apple ID登錄

92
00:04:00,860 --> 00:04:03,320
不一定是在Beta下載頁面中的

93
00:04:03,320 --> 00:04:05,270
付費會員

94
00:04:05,270 --> 00:04:07,120
你要進入應用程式中

95
00:04:07,120 --> 00:04:10,490
並下載Xcode12Beta2

96
00:04:10,490 --> 00:04:14,490
在過去的10個月里 SwiftUI一直很穩定

97
00:04:14,490 --> 00:04:17,930
因此 即使你在新的測試版上 它應該工作得很好

98
00:04:17,930 --> 00:04:21,560
但我會為每個測試版提供源文件

99
00:04:21,560 --> 00:04:22,980
所以當你下載這個之後

100
00:04:22,980 --> 00:04:26,150
我強烈建議你下載macOS Big Sur

101
00:04:26,150 --> 00:04:28,510
如果你想測試Mac應用程式

102
00:04:28,510 --> 00:04:31,830
並為macOS開發 你將需要Big Sur

103
00:04:31,830 --> 00:04:35,870
但如果你只想關註iOS和iPad

104
00:04:35,870 --> 00:04:39,480
所提供的經驗教訓和代碼應該運行良好

105
00:04:39,480 --> 00:04:42,700
然而 可能存在一些不一致之處

106
00:04:42,700 --> 00:04:45,060
但我想指出 從我的經驗來看

107
00:04:45,060 --> 00:04:46,970
以及從我讀到的評論來看

108
00:04:46,970 --> 00:04:48,830
Big Sur很穩定

109
00:04:48,830 --> 00:04:50,480
但是 當你安裝它時

110
00:04:50,480 --> 00:04:52,940
你絕對應該備份 分區

111
00:04:52,940 --> 00:04:56,200
或者簡單地安裝在非工作計算機上

112
00:04:56,200 --> 00:04:59,580
源文件可在第二節

113
00:04:59,580 --> 00:05:03,090
或在www.designcode.io的下載部分中提供

114
00:05:03,090 --> 00:05:06,890
在這里 你可以找到最終應用程式的源文件

115
00:05:06,890 --> 00:05:10,550
我已經給你們看過了這門課的每一部分

116
00:05:10,550 --> 00:05:13,580
這樣你就可以將你的代碼與我的代碼進行比較

117
00:05:13,580 --> 00:05:16,180
此外 請確保重新下載文件

118
00:05:16,180 --> 00:05:18,390
每當你有更新的測試版時

119
00:05:18,390 --> 00:05:20,290
我會盡我所能更新代碼

120
00:05:20,290 --> 00:05:22,590
如果有任何破壞性的變化

121
00:05:22,590 --> 00:05:24,540
我還提供了設計模板

122
00:05:24,540 --> 00:05:28,190
所以你肯定可以瞭解我是如何組織

123
00:05:28,190 --> 00:05:33,190
iOS和iPad 以及圖標的設計

124
00:05:33,480 --> 00:05:36,490
這也是可用於你的應用程式的偉大模板

125
00:05:36,490 --> 00:05:39,990
因此你可以將應用程式圖標放在組件中

126
00:05:39,990 --> 00:05:43,030
它會自動更新所有這些圖標

127
00:05:43,030 --> 00:05:45,560
這樣你就可以使用正確的名稱和解析度

128
00:05:45,560 --> 00:05:46,890
進行導出

129
00:05:46,890 --> 00:05:49,280
在為Apple平臺設計時

130
00:05:49,280 --> 00:05:52,600
你應該下載適用於iOS iPadOS和tvOS的

131
00:05:52,600 --> 00:05:54,870
SF Pro字體

132
00:05:54,870 --> 00:05:59,350
適用於watchOS的SF Compact字體是可選的

133
00:05:59,350 --> 00:06:01,460
但很適合代碼高亮顯示

134
00:06:01,460 --> 00:06:04,020
而New York New York則是襯線字體

135
00:06:04,020 --> 00:06:05,710
最後 對於圖標

136
00:06:05,710 --> 00:06:09,310
你應該從蘋果下載SF Symbols應用程式

137
00:06:09,310 --> 00:06:11,570
這里你要點擊SF符號

138
00:06:11,570 --> 00:06:15,500
查找SF符號2的測試版

139
00:06:15,500 --> 00:06:20,480
新的SF符號2有超過2400個

140
00:06:20,480 --> 00:06:22,560
不同筆劃寬度的圖標

141
00:06:22,560 --> 00:06:25,743
而且 現在有多種顏色選擇了

142
00:06:26,770 --> 00:06:28,870
要在SwiftUI中使用這些圖標

143
00:06:28,870 --> 00:06:31,010
你不需要導入任何內容

144
00:06:31,010 --> 00:06:33,530
你只需將圖標的名稱

145
00:06:33,530 --> 00:06:35,280
放進SwiftUI代碼就可以了

146
00:06:35,280 --> 00:06:37,300
好吧 我們開始吧

147
00:06:37,300 --> 00:06:38,840
現在我們要打開Xcode

148
00:06:38,840 --> 00:06:41,870
這里我們將創建一個新的Xcode項目

149
00:06:41,870 --> 00:06:44,810
這里 我們要去多平臺

150
00:06:44,810 --> 00:06:48,290
點擊App 點擊Next

151
00:06:48,290 --> 00:06:51,840
我們將把它命名為設計代碼課程

152
00:06:51,840 --> 00:06:54,030
然後單擊Next

153
00:06:54,030 --> 00:06:58,320
讓我們將其保存到下載中 並啟用在Mac上

154
00:06:58,320 --> 00:06:59,910
創建Git存儲庫

155
00:06:59,910 --> 00:07:01,430
然後單擊Create

156
00:07:01,430 --> 00:07:05,220
現在你面前有一個新的Xcode項目

157
00:07:05,220 --> 00:07:06,840
你可以雙擊選項卡欄

158
00:07:06,840 --> 00:07:08,300
使其最大化

159
00:07:08,300 --> 00:07:12,030
現在我們在左側有帶有共用的導航器

160
00:07:12,030 --> 00:07:14,900
這既適用於iOS代碼 也適用於macOS代碼

161
00:07:14,900 --> 00:07:19,010
而且你還可以為iOS和macOS編寫特定於平臺的代碼

162
00:07:19,010 --> 00:07:21,600
稍後我將對此進行解釋

163
00:07:21,600 --> 00:07:24,240
但現在 我們將把重點放在共用上

164
00:07:24,240 --> 00:07:27,018
我們將確保我們的代碼能夠正常工作

165
00:07:27,018 --> 00:07:28,870
在所有平臺上

166
00:07:28,870 --> 00:07:31,320
所以在過去的SwiftUI項目中

167
00:07:31,320 --> 00:07:33,710
我們有App delegate.swift文件

168
00:07:33,710 --> 00:07:37,860
但現在它已經被DesignCodeCourse App取代了

169
00:07:37,860 --> 00:07:40,410
它引用了內容視圖

170
00:07:40,410 --> 00:07:43,110
內容視圖是你的第一個屏幕

171
00:07:43,110 --> 00:07:45,440
我們將在下一節課中再討論這個問題

172
00:07:45,440 --> 00:07:48,260
但現在我們要在Xcode12中

173
00:07:48,260 --> 00:07:51,130
建立資產 我們現在有了強調顏色

174
00:07:51,130 --> 00:07:55,260
這是一種單一的顏色 它將為你的應用程式文本按鈕

175
00:07:55,260 --> 00:07:58,390
以及導航所選的狀態著色

176
00:07:58,390 --> 00:08:01,670
現在建議有外觀

177
00:08:01,670 --> 00:08:03,840
無論是光明還是黑暗

178
00:08:03,840 --> 00:08:04,900
所以在燈光模式下

179
00:08:04,900 --> 00:08:07,010
會稍微暗一些

180
00:08:07,010 --> 00:08:09,250
使對比度更好

181
00:08:09,250 --> 00:08:11,310
同樣地 對於暗模式

182
00:08:11,310 --> 00:08:14,180
為了更好的對比度 顏色將變淺

183
00:08:14,180 --> 00:08:15,640
對於應用程式圖標

184
00:08:15,640 --> 00:08:17,330
跟以前一模一樣

185
00:08:17,330 --> 00:08:20,570
但現在我們有一個Mac專區

186
00:08:20,570 --> 00:08:21,740
此部分是可選的

187
00:08:21,740 --> 00:08:24,400
因為我已經為你準備好了資產

188
00:08:24,400 --> 00:08:26,110
如果你想創建一個自定義圖標

189
00:08:26,110 --> 00:08:27,950
我在FIGMA中準備了這個模板

190
00:08:27,950 --> 00:08:31,070
你只需更新組件

191
00:08:31,070 --> 00:08:33,330
然後可以導出文件

192
00:08:33,330 --> 00:08:35,360
所以我們要把它放到下載中

193
00:08:35,360 --> 00:08:37,890
然後你需要做的就是選擇

194
00:08:37,890 --> 00:08:42,370
所有的iPhone資產 然後拖拽到

195
00:08:42,370 --> 00:08:44,750
你看到的所有藍色方塊的地方

196
00:08:44,750 --> 00:08:46,730
因為這可能有點耗時

197
00:08:46,730 --> 00:08:48,780
以確保所有的解析度正確無誤

198
00:08:48,780 --> 00:08:51,000
和所有的顏色都是正確的

199
00:08:51,000 --> 00:08:51,950
無論是明暗模式

200
00:08:51,950 --> 00:08:53,900
我為你準備了這個部分

201
00:08:53,900 --> 00:08:58,440
所以我們只需要刪除兩個應用程式圖標和強調顏色

202
00:08:58,440 --> 00:09:00,360
來替換它

203
00:09:00,360 --> 00:09:05,070
我們要去資產文件夾找資產

204
00:09:05,070 --> 00:09:08,000
在所有這些文件夾中

205
00:09:08,000 --> 00:09:12,583
我們直接拖拽到這個空間

206
00:09:13,790 --> 00:09:15,000
正如我前面提到的

207
00:09:15,000 --> 00:09:19,610
我們有光模式和暗模式的強調顏色

208
00:09:19,610 --> 00:09:24,530
然後是iPhone iPad和Mac的應用圖標

209
00:09:24,530 --> 00:09:26,380
以及應用商店

210
00:09:26,380 --> 00:09:30,380
然後我設置了一堆我們可以用於應用程式的顏色

211
00:09:30,380 --> 00:09:32,870
所以在這里 你可以像這樣導航它

212
00:09:32,870 --> 00:09:34,580
也可以轉到文件夾

213
00:09:34,580 --> 00:09:36,610
你可以找到不同的顏色

214
00:09:36,610 --> 00:09:39,800
所以背景 光模式和暗模式

215
00:09:39,800 --> 00:09:42,031
都有一到五個主次

216
00:09:42,031 --> 00:09:44,214
然後我們有一堆圖像

217
00:09:44,214 --> 00:09:47,080
可以是SVG格式的

218
00:09:47,080 --> 00:09:51,610
所以以前 我們只能使用PDF 也只能使用PNG

219
00:09:51,610 --> 00:09:54,280
但是現在我們也可以使用SVG

220
00:09:54,280 --> 00:09:58,930
用於圖標和矢量插圖 SVG是很棒的

221
00:09:58,930 --> 00:10:02,960
對於混合了矢量和位圖的圖像

222
00:10:02,960 --> 00:10:06,650
以及復雜的漸變或掩蔽

223
00:10:06,650 --> 00:10:08,320
我推薦PDF格式

224
00:10:08,320 --> 00:10:09,950
如果你想要像素的完美

225
00:10:09,950 --> 00:10:12,630
但以較大的文件大小為代價

226
00:10:12,630 --> 00:10:14,470
你絕對可以使用PNG

227
00:10:14,470 --> 00:10:16,920
如果它沒有透明度

228
00:10:16,920 --> 00:10:18,293
然後你可以使用JPEG

229
00:10:19,300 --> 00:10:21,300
否則 不要太擔心這些

230
00:10:21,300 --> 00:10:24,100
因為這些資產已經為你準備好了

231
00:10:24,100 --> 00:10:26,160
我們將會邊講解邊學

232
00:10:26,160 --> 00:10:27,930
現在我們將進入內容視圖

233
00:10:27,930 --> 00:10:30,840
我們終於可以開始用SwiftUI編碼了

234
00:10:30,840 --> 00:10:31,673
在下一節課

235
00:10:31,673 --> 00:10:32,733
再見吧

