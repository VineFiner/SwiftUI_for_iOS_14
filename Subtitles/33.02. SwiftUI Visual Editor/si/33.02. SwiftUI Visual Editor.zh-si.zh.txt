- SwiftUI 2 SwiftUI 视觉编辑器 了解Xcode 12的新视觉编辑和检查器工具

- [明] 大家好，欢迎参加我的SwiftUI课程 第二章 在这个章节中 我们将学习如何使用SwiftUI 新的可视化编辑工具创建非常基本的购物车设计。 现在我们要做的第一件事 是恢复我们的预览。 这可能需要几分钟 如果您是第一次这样做。 在加载后， 这是您的代码的直观表示。 设备本身 是可以通过转到此处的设备列表进行更改。 我们可以针对iOS 11 Pro进行更改。 今天，我们甚至根本不打算修改代码。 我们只是要点击元素 然后去检查员 这是您可以自定义的地方 您的元素外观。 现在检查员有很多标签， 因此，请确保您在第四个提示您的位置上， 属性检查器。 这样您可以选择 可以更改元素的样式 您也可以双击元素 直接编辑文本。 因此，我们将其更改为SwiftUI。 请注意，当我们在此处更改文字时， 或这里的文字， 或这里的文字， 一切都完美地同步了， 所以我甚至可以在这里编辑，所以是对iOS 14 然后按输入。 现在，让我们更改字体。 当我们点击菜单时 我们可以访问动态类型。 如果您不熟悉iOS设计指南， 我强烈建议您进入在排版中 的视觉设计部分。 在这里，如果您向下滚动一点， 您将找到所有动态类型的大小 标题1，2，3，大标题，正文等。 有趣的是，如果您使用此功能， 它会自动适应 到不同的辅助功能选项。 不仅如此，它将适应平台， 因此，Mac上的标题会稍小 而不是iOS中的标题。 所以你绝对应该使用动态类型 因为它将节省您的时间， 这将使其跨平台具有适应性。 所以在这里，我们将其设置为主体， 但主体也是默认设置的。 您也可以选择继承。 对于字体粗细， 我们将其设置为粗体， 然后我们将创建第二个文本。 因此，您可以选择此选项，然后选择Command D 复制它将自动复制第一层 进入第二个。 不只是这天 但是它将创建一个名为V堆栈的容器， 这是一个垂直堆栈， 可以对齐并堆叠其内部元素 使用一致的间距。 就像设计工具一样 您可以从视觉上选择一种元素， 或者如果元素重叠， 您可以直接转到代码， 然后选择V堆栈。 现在我要双击第二个文本 并将其更改为20部分。 在这里，请注意，默认情况下元素居中。 所以，如果您想改变它， 我们要选择一个容器，它是一个V堆栈， 然后我们可以向左对齐。 在填充方面， 我们可以选择元素。 我们要去填充区域， 您可以在此处看到默认情况下我们有一些值。 您可以单击此将其删除。 因此，现在不再有任何填充。 我们将对第二个文本执行相同的操作并将其删除。 让我们将字体更改为脚注， 然后我们将删除粗体， 并点击此处的蓝色按钮。 您可以在此处看到这两个元素之间 我们希望进行一些填充， 但我们不一定要进行手动填充， 这不是最理想的方式。 相反，我们应该去集装箱， 就是V堆栈， 并设置间距。 所以我们要去间距值 并将其设置为4，然后按输入。 与围绕元素的填充不同， 间距是堆栈中元素之间的间隙。 好吧，让我们谈谈颜色。 就像动态类型一样 您应该避免使用自定义颜色， 除非您有自定义背景 在明暗模式之间将以相同的方式存在。 由于我尚未为标题设置颜色， 它将自己设置为主色， 在明亮模式下将变为黑色， 然后在黑暗模式下为白色。 现在，您可以访问一堆预设颜色。 例如，我将在字幕上进行选择。 我可以单击颜色。 在这里您将找到一堆预设颜色 自动适应。 例如， 红色在明暗模式之间是不同的。 而且您还有我们之前设定的 自定义资产目录颜色 . 如果您想要自定义颜色， 确保已在您的资产目录中设置了它。 如果您要使用Apple预设的颜色之一， 您可以转到iOS准则， 然后向下滚动一点 你会发现不同的颜色 用于明暗模式。 回到我们的应用 我们要选择容器， 然后我们添加背景色。 但是在这里你可以看到 检查器中没有背景色。 实际上，有数百个失踪。 这些属性中的每一个都称为修饰符， 您可以通过转到底部的该字段 添加自定义 不幸的是，在此版本的Beta中， 从这里是不可用， 但您绝对可以转到加号。 这就是我们所说的"插入"菜单。 因此，您具有按钮的控件， 日期选择器，表格等。 然后有修饰符， 样式的属性。 因此，我们将搜索背景。 在这里，我们找到背景， 我们将直接拖放到检查器 像这样。 确保您正在申请正确的元素。 在这种情况下，我选择了垂直堆栈。 并注意，一旦我这样做， 我有一个新属性，可以更改颜色。 由于某种原因，我们添加了背景色之后， 修改器现在正在工作。 所以我们要寻找角落 并选择拐角半径。 让我们将数字更改为20。 让我们添加一些填充。 所以我要去填充并单击 右边的圆圈 并且这将在所有面上默认使用16点。 让我们添加另一个修饰符。 这次将被称为阴影。 很好。现在，我们想在文本顶部添加一个图像。 因此，我们将再次转到插入。 我们将要转到图像。 这来自我的资产目录 我要选择第一个。 因此，图一。 直接拖放到预览， 在这里，我可以针对我想要的任何部分。 位于文本的顶部，底部或甚至左侧。 在这种情况下，我将在标题的顶部进行操作， 它看起来会像这样。 如果您看一下代码的结构， 我们有V堆栈， 然后我们在V堆栈中包含三个元素。 现在您可以看到图像太大了。 那是因为SwiftUI 始终采用图像的原始尺寸。 因此，解决该问题需要添加一个修饰符。 选择图片后， 我要输入相当大的然后选择。 这将确保调整图像大小 并使用所有可用空间。 在这种情况下，图像的比例不合适。 所以还有另一个修饰符。 我们要输入比例并选择宽高比。 现在，它尝试使用填充来适应边界。 您可以改为适合自己， 像这样。 所以这个技术很棒 因为这意味着图像将始终调整大小， 是根据卡片的最大宽度或高度。 因此，如果我要单击V堆栈， 并将高度设置为200， 您将看到内部元素 会尝试调整大小。 这真的很好， 会使你的布局适应设备。 今天总结是， 您要创建此组件 去适应任意数量的列和行。 这就是为什么我们实际上不想设置固定框架的原因。 所以我们要去掉那200个高度。 Xcode 12中的另一个新功能 是您可以复制预览。 对于每个预览， 您可以在选项中选择 更改设备，布局，配色方案， 以及辅助功能选项， 例如， 额外的超大文本。 在这种情况下，我们将选择暗模式。 现在您可以缩小，并且可以在此处看到我的文字 正在根据明暗模式更改颜色。 因为我没有设置颜色， 默认情况下设置为黑色， 对于暗模式，将其设置为白色。 正如我之前提到的 您实际上并不想设置自定义颜色， 除非您有自定义背景， 总的来说，对于明暗模式来说都是蓝色， 在这种情况下， 您可以随时将其设为白色。 我要选择第一个文本并将其设置为白色。 让我们对第二个文本也是如此。 因此，现在两张卡都是一致的。 我想指出的另一件事是 检查员在这里可用， 但也可以直接在预览中使用。 因此，您可以使用Command单击元素 显示SwiftUI检查器， 这些选项将与这些完全相同。 有一个快捷方式，而且无需单击两次。 您可以执行"控制"选项并选择。 它会直接交给检查员。 预览也一样。 因此，如果我选择预览本身， 它会告诉我这里的选项 而不是这里。 现在，让我更改预览。 我去布局并更改为固定。 这是我要设置的位置， 假设是宽度200乘高度200。 现在，我可以看到它的外观， 如果我的布局或设备是这种尺寸。 我也注意到这里有些差距， 也许我想将我的卡设置为全屏显示 垂直也是如此。 为此，我需要设置一个垫片。 间隔符不是修饰符。 这是推动容器的元素 占用全部空间。 因此，让我单击加号。 我将转到控件并搜索spacer。 在这里，我要拖放。 再一次，任何我想要的地方。 在这种情况下，就是我们图片的顶部。 当我这样做时 您可以看到它推动了整个购物车 占用我在这里放置的可用空间。 现在，您在这里看到了一些缝隙， 那是安全的地方 这与您的购物车无关。 这取决于设备， 我们稍后可以解决。 所以要照顾这个差距， 我们可以做的是同一件事。 我们将单击加号，搜索间隔符， 像这样将其拖放到图像的左侧。 现在，因为我们在推动， 图像不再居中 我们在右侧也需要另一个垫片。 还有插入的快捷方式， 这是Shift Command和L 再一次，寻找间隔， 拖放到图像的右侧。 查看图像， 您可以看到它现在位于水平堆栈中， 它在左右两侧都有一个空间。 它在推手推车 占据屏幕的整个宽度。 现在我刚创建了一个购物车 完全适合所有屏幕尺寸， 我甚至可以重复一遍 假设是在网格布局或列表布局中 在我们完成之前， 我只想说， 即使这很棒 使用检查员， 并通过预览进行拖放操作， 但请记住，您会错过一些选择 而且您将无法像在代码中那样拥有更多的控制权。 而且，您不应该将这些值设置为蓝色。 因此，我们将双击它们。 现在，背景变为空白。 在括号内， 我们将输入颜色点 蓝色。 让我们对这里的两个数字执行相同的操作。 好的！今天我想向您展示用于SwiftUI的可视化编辑工具的 所有新选项。 这对初学者 对于设计师，对于原型制作 来说特别好。 因此，如果您有从未接触过SwiftUI的同事 这是对Xcode和SwiftUI的出色介绍。 在下一个章节中 我们将学习SF符号 以及如何使用列表样式。 我将在下一章节再与您相见