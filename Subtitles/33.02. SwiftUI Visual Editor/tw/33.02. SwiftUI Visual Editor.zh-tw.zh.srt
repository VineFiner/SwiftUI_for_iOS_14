1
00:00:06,242 --> 00:00:10,725
SwiftUI 2 SwiftUI 視覺編輯器
瞭解Xcode 12的新視覺編輯和檢查器工具

2
00:00:12,640 --> 00:00:14,530
- [明] 大家好，歡迎參加我的SwiftUI課程

3
00:00:14,530 --> 00:00:16,180
第二章

4
00:00:16,180 --> 00:00:17,013
在這個章節中

5
00:00:17,013 --> 00:00:19,940
我們將學習如何使用SwiftUI

6
00:00:19,940 --> 00:00:23,740
新的可視化編輯工具創建非常基本的購物車設計。

7
00:00:23,740 --> 00:00:25,540
現在我們要做的第一件事

8
00:00:25,540 --> 00:00:28,150
是恢復我們的預覽。

9
00:00:28,150 --> 00:00:30,050
這可能需要幾分鐘

10
00:00:30,050 --> 00:00:32,600
如果您是第一次這樣做。

11
00:00:32,600 --> 00:00:33,840
在加載後，

12
00:00:33,840 --> 00:00:37,290
這是您的代碼的直觀表示。

13
00:00:37,290 --> 00:00:38,700
設備本身

14
00:00:38,700 --> 00:00:41,790
是可以通過轉到此處的設備列表進行更改。

15
00:00:41,790 --> 00:00:45,980
我們可以針對iOS 11 Pro進行更改。

16
00:00:45,980 --> 00:00:48,710
今天，我們甚至根本不打算修改代碼。

17
00:00:48,710 --> 00:00:51,670
我們只是要點擊元素

18
00:00:51,670 --> 00:00:53,520
然後去檢查員

19
00:00:53,520 --> 00:00:55,820
這是您可以自定義的地方

20
00:00:55,820 --> 00:00:57,310
您的元素外觀。

21
00:00:57,310 --> 00:00:59,350
現在檢查員有很多標簽，

22
00:00:59,350 --> 00:01:02,800
因此，請確保您在第四個提示您的位置上，

23
00:01:02,800 --> 00:01:04,670
屬性檢查器。

24
00:01:04,670 --> 00:01:07,660
這樣您可以選擇

25
00:01:07,660 --> 00:01:09,300
可以更改元素的樣式

26
00:01:09,300 --> 00:01:11,690
您也可以雙擊元素

27
00:01:11,690 --> 00:01:14,490
直接編輯文本。

28
00:01:14,490 --> 00:01:17,020
因此，我們將其更改為SwiftUI。

29
00:01:17,020 --> 00:01:20,230
請註意，當我們在此處更改文字時，

30
00:01:20,230 --> 00:01:21,680
或這里的文字，

31
00:01:21,680 --> 00:01:23,100
或這里的文字，

32
00:01:23,100 --> 00:01:25,900
一切都完美地同步了，

33
00:01:25,900 --> 00:01:30,340
所以我甚至可以在這里編輯，所以是對iOS 14

34
00:01:30,340 --> 00:01:31,510
然後按輸入。

35
00:01:31,510 --> 00:01:33,200
現在，讓我們更改字體。

36
00:01:33,200 --> 00:01:35,500
當我們點擊菜單時

37
00:01:35,500 --> 00:01:37,550
我們可以訪問動態類型。

38
00:01:37,550 --> 00:01:39,810
如果您不熟悉iOS設計指南，

39
00:01:39,810 --> 00:01:43,340
我強烈建議您進入在排版中

40
00:01:43,340 --> 00:01:45,100
的視覺設計部分。

41
00:01:45,100 --> 00:01:46,680
在這里，如果您向下滾動一點，

42
00:01:46,680 --> 00:01:50,080
您將找到所有動態類型的大小

43
00:01:50,080 --> 00:01:54,370
標題1，2，3，大標題，正文等。

44
00:01:54,370 --> 00:01:57,570
有趣的是，如果您使用此功能，

45
00:01:57,570 --> 00:01:59,970
它會自動適應

46
00:01:59,970 --> 00:02:02,690
到不同的輔助功能選項。

47
00:02:02,690 --> 00:02:05,270
不僅如此，它將適應平臺，

48
00:02:05,270 --> 00:02:09,070
因此，Mac上的標題會稍小

49
00:02:09,070 --> 00:02:10,970
而不是iOS中的標題。

50
00:02:10,970 --> 00:02:13,530
所以你絕對應該使用動態類型

51
00:02:13,530 --> 00:02:15,360
因為它將節省您的時間，

52
00:02:15,360 --> 00:02:19,500
這將使其跨平臺具有適應性。

53
00:02:19,500 --> 00:02:22,680
所以在這里，我們將其設置為主體，

54
00:02:22,680 --> 00:02:25,140
但主體也是默認設置的。

55
00:02:25,140 --> 00:02:28,360
您也可以選擇繼承。

56
00:02:28,360 --> 00:02:29,320
對於字體粗細，

57
00:02:29,320 --> 00:02:31,070
我們將其設置為粗體，

58
00:02:31,070 --> 00:02:33,090
然後我們將創建第二個文本。

59
00:02:33,090 --> 00:02:36,910
因此，您可以選擇此選項，然後選擇Command D

60
00:02:36,910 --> 00:02:40,450
復制它將自動復制第一層

61
00:02:40,450 --> 00:02:42,010
進入第二個。

62
00:02:42,010 --> 00:02:43,050
不只是這天

63
00:02:43,050 --> 00:02:45,890
但是它將創建一個名為V堆棧的容器，

64
00:02:45,890 --> 00:02:47,440
這是一個垂直堆棧，

65
00:02:47,440 --> 00:02:50,820
可以對齊並堆疊其內部元素

66
00:02:50,820 --> 00:02:53,420
使用一致的間距。

67
00:02:53,420 --> 00:02:54,760
就像設計工具一樣

68
00:02:54,760 --> 00:02:58,170
您可以從視覺上選擇一種元素，

69
00:02:58,170 --> 00:03:00,400
或者如果元素重疊，

70
00:03:00,400 --> 00:03:02,830
您可以直接轉到代碼，

71
00:03:02,830 --> 00:03:05,350
然後選擇V堆棧。

72
00:03:05,350 --> 00:03:07,520
現在我要雙擊第二個文本

73
00:03:07,520 --> 00:03:10,630
並將其更改為20部分。

74
00:03:10,630 --> 00:03:14,520
在這里，請註意，默認情況下元素居中。

75
00:03:14,520 --> 00:03:16,021
所以，如果您想改變它，

76
00:03:16,021 --> 00:03:18,380
我們要選擇一個容器，它是一個V堆棧，

77
00:03:18,380 --> 00:03:21,970
然後我們可以向左對齊。

78
00:03:21,970 --> 00:03:23,290
在填充方面，

79
00:03:23,290 --> 00:03:25,290
我們可以選擇元素。

80
00:03:25,290 --> 00:03:28,270
我們要去填充區域，

81
00:03:28,270 --> 00:03:32,840
您可以在此處看到默認情況下我們有一些值。

82
00:03:32,840 --> 00:03:35,603
您可以單擊此將其刪除。

83
00:03:36,460 --> 00:03:39,390
因此，現在不再有任何填充。

84
00:03:39,390 --> 00:03:42,423
我們將對第二個文本執行相同的操作並將其刪除。

85
00:03:43,520 --> 00:03:46,523
讓我們將字體更改為腳註，

86
00:03:47,530 --> 00:03:49,400
然後我們將刪除粗體，

87
00:03:49,400 --> 00:03:52,600
並點擊此處的藍色按鈕。

88
00:03:52,600 --> 00:03:55,520
您可以在此處看到這兩個元素之間

89
00:03:55,520 --> 00:03:56,930
我們希望進行一些填充，

90
00:03:56,930 --> 00:04:00,670
但我們不一定要進行手動填充，

91
00:04:00,670 --> 00:04:03,380
這不是最理想的方式。

92
00:04:03,380 --> 00:04:06,410
相反，我們應該去集裝箱，

93
00:04:06,410 --> 00:04:07,890
就是V堆棧，

94
00:04:07,890 --> 00:04:10,810
並設置間距。

95
00:04:10,810 --> 00:04:13,590
所以我們要去間距值

96
00:04:13,590 --> 00:04:16,450
並將其設置為4，然後按輸入。

97
00:04:16,450 --> 00:04:19,840
與圍繞元素的填充不同，

98
00:04:19,840 --> 00:04:24,410
間距是堆棧中元素之間的間隙。

99
00:04:24,410 --> 00:04:26,400
好吧，讓我們談談顏色。

100
00:04:26,400 --> 00:04:27,900
就像動態類型一樣

101
00:04:27,900 --> 00:04:30,700
您應該避免使用自定義顏色，

102
00:04:30,700 --> 00:04:33,520
除非您有自定義背景

103
00:04:33,520 --> 00:04:38,260
在明暗模式之間將以相同的方式存在。

104
00:04:38,260 --> 00:04:41,490
由於我尚未為標題設置顏色，

105
00:04:41,490 --> 00:04:43,830
它將自己設置為主色，

106
00:04:43,830 --> 00:04:46,890
在明亮模式下將變為黑色，

107
00:04:46,890 --> 00:04:49,430
然後在黑暗模式下為白色。

108
00:04:49,430 --> 00:04:52,390
現在，您可以訪問一堆預設顏色。

109
00:04:52,390 --> 00:04:56,320
例如，我將在字幕上進行選擇。

110
00:04:56,320 --> 00:04:58,380
我可以單擊顏色。

111
00:04:58,380 --> 00:05:01,340
在這里您將找到一堆預設顏色

112
00:05:01,340 --> 00:05:02,920
自動適應。

113
00:05:02,920 --> 00:05:04,110
例如，

114
00:05:04,110 --> 00:05:07,760
紅色在明暗模式之間是不同的。

115
00:05:07,760 --> 00:05:11,010
而且您還有我們之前設定的

116
00:05:11,010 --> 00:05:12,560
自定義資產目錄顏色 .

117
00:05:12,560 --> 00:05:14,600
如果您想要自定義顏色，

118
00:05:14,600 --> 00:05:17,600
確保已在您的資產目錄中設置了它。

119
00:05:17,600 --> 00:05:20,800
如果您要使用Apple預設的顏色之一，

120
00:05:20,800 --> 00:05:23,530
您可以轉到iOS準則，

121
00:05:23,530 --> 00:05:25,170
然後向下滾動一點

122
00:05:25,170 --> 00:05:27,130
你會發現不同的顏色

123
00:05:27,130 --> 00:05:28,520
用於明暗模式。

124
00:05:28,520 --> 00:05:29,710
回到我們的應用

125
00:05:29,710 --> 00:05:31,650
我們要選擇容器，

126
00:05:31,650 --> 00:05:34,740
然後我們添加背景色。

127
00:05:34,740 --> 00:05:36,280
但是在這里你可以看到

128
00:05:36,280 --> 00:05:39,120
檢查器中沒有背景色。

129
00:05:39,120 --> 00:05:41,500
實際上，有數百個失蹤。

130
00:05:41,500 --> 00:05:44,520
這些屬性中的每一個都稱為修飾符，

131
00:05:44,520 --> 00:05:46,510
您可以通過轉到底部的該欄位

132
00:05:46,510 --> 00:05:48,650
添加自定義

133
00:05:48,650 --> 00:05:51,030
不幸的是，在此版本的Beta中，

134
00:05:51,030 --> 00:05:53,710
從這里是不可用，

135
00:05:53,710 --> 00:05:56,320
但您絕對可以轉到加號。

136
00:05:56,320 --> 00:05:59,190
這就是我們所說的"插入"菜單。

137
00:05:59,190 --> 00:06:02,870
因此，您具有按鈕的控制項，

138
00:06:02,870 --> 00:06:05,350
日期選擇器，表格等。

139
00:06:05,350 --> 00:06:06,830
然後有修飾符，

140
00:06:06,830 --> 00:06:09,010
樣式的屬性。

141
00:06:09,010 --> 00:06:12,090
因此，我們將搜索背景。

142
00:06:12,090 --> 00:06:14,720
在這里，我們找到背景，

143
00:06:14,720 --> 00:06:18,620
我們將直接拖放到檢查器

144
00:06:18,620 --> 00:06:20,010
像這樣。

145
00:06:20,010 --> 00:06:22,330
確保您正在申請正確的元素。

146
00:06:22,330 --> 00:06:25,720
在這種情況下，我選擇了垂直堆棧。

147
00:06:25,720 --> 00:06:28,060
並註意，一旦我這樣做，

148
00:06:28,060 --> 00:06:32,270
我有一個新屬性，可以更改顏色。

149
00:06:32,270 --> 00:06:35,730
由於某種原因，我們添加了背景色之後，

150
00:06:35,730 --> 00:06:37,650
修改器現在正在工作。

151
00:06:37,650 --> 00:06:39,450
所以我們要尋找角落

152
00:06:40,460 --> 00:06:42,460
並選擇拐角半徑。

153
00:06:42,460 --> 00:06:44,303
讓我們將數字更改為20。

154
00:06:45,340 --> 00:06:47,720
讓我們添加一些填充。

155
00:06:47,720 --> 00:06:51,180
所以我要去填充並單擊

156
00:06:51,180 --> 00:06:52,970
右邊的圓圈

157
00:06:52,970 --> 00:06:57,950
並且這將在所有面上默認使用16點。

158
00:06:57,950 --> 00:06:59,650
讓我們添加另一個修飾符。

159
00:06:59,650 --> 00:07:01,713
這次將被稱為陰影。

160
00:07:02,790 --> 00:07:07,330
很好。現在，我們想在文本頂部添加一個圖像。

161
00:07:07,330 --> 00:07:10,150
因此，我們將再次轉到插入。

162
00:07:10,150 --> 00:07:12,590
我們將要轉到圖像。

163
00:07:12,590 --> 00:07:15,120
這來自我的資產目錄

164
00:07:15,120 --> 00:07:16,840
我要選擇第一個。

165
00:07:16,840 --> 00:07:18,510
因此，圖一。

166
00:07:18,510 --> 00:07:21,400
直接拖放到預覽，

167
00:07:21,400 --> 00:07:24,940
在這里，我可以針對我想要的任何部分。

168
00:07:24,940 --> 00:07:29,940
位於文本的頂部，底部或甚至左側。

169
00:07:30,580 --> 00:07:34,763
在這種情況下，我將在標題的頂部進行操作，

170
00:07:35,730 --> 00:07:37,730
它看起來會像這樣。

171
00:07:37,730 --> 00:07:39,330
如果您看一下代碼的結構，

172
00:07:39,330 --> 00:07:40,520
我們有V堆棧，

173
00:07:40,520 --> 00:07:43,710
然後我們在V堆棧中包含三個元素。

174
00:07:43,710 --> 00:07:46,930
現在您可以看到圖像太大了。

175
00:07:46,930 --> 00:07:48,700
那是因為SwiftUI

176
00:07:48,700 --> 00:07:52,080
始終採用圖像的原始尺寸。

177
00:07:52,080 --> 00:07:56,870
因此，解決該問題需要添加一個修飾符。

178
00:07:56,870 --> 00:07:59,000
選擇圖片後，

179
00:07:59,000 --> 00:08:04,000
我要輸入相當大的然後選擇。

180
00:08:04,710 --> 00:08:07,670
這將確保調整圖像大小

181
00:08:07,670 --> 00:08:10,680
並使用所有可用空間。

182
00:08:10,680 --> 00:08:14,290
在這種情況下，圖像的比例不合適。

183
00:08:14,290 --> 00:08:15,650
所以還有另一個修飾符。

184
00:08:15,650 --> 00:08:20,650
我們要輸入比例並選擇寬高比。

185
00:08:21,120 --> 00:08:25,230
現在，它嘗試使用填充來適應邊界。

186
00:08:25,230 --> 00:08:27,743
您可以改為適合自己，

187
00:08:28,660 --> 00:08:29,760
像這樣。

188
00:08:29,760 --> 00:08:31,950
所以這個技術很棒

189
00:08:31,950 --> 00:08:35,610
因為這意味著圖像將始終調整大小，

190
00:08:35,610 --> 00:08:39,570
是根據卡片的最大寬度或高度。

191
00:08:39,570 --> 00:08:42,420
因此，如果我要單擊V堆棧，

192
00:08:42,420 --> 00:08:46,010
並將高度設置為200，

193
00:08:46,010 --> 00:08:48,660
您將看到內部元素

194
00:08:48,660 --> 00:08:51,270
會嘗試調整大小。

195
00:08:51,270 --> 00:08:52,920
這真的很好，

196
00:08:52,920 --> 00:08:57,220
會使你的佈局適應設備。

197
00:08:57,220 --> 00:08:58,580
今天總結是，

198
00:08:58,580 --> 00:09:01,030
您要創建此組件

199
00:09:01,030 --> 00:09:04,140
去適應任意數量的列和行。

200
00:09:04,140 --> 00:09:07,960
這就是為什麼我們實際上不想設置固定框架的原因。

201
00:09:07,960 --> 00:09:10,830
所以我們要去掉那200個高度。

202
00:09:10,830 --> 00:09:13,710
Xcode 12中的另一個新功能

203
00:09:13,710 --> 00:09:16,460
是您可以復制預覽。

204
00:09:16,460 --> 00:09:18,070
對於每個預覽，

205
00:09:18,070 --> 00:09:20,420
您可以在選項中選擇

206
00:09:20,420 --> 00:09:25,290
更改設備，佈局，配色方案，

207
00:09:25,290 --> 00:09:28,050
以及輔助功能選項，

208
00:09:28,050 --> 00:09:30,600
例如， 額外的超大文本。

209
00:09:30,600 --> 00:09:33,253
在這種情況下，我們將選擇暗模式。

210
00:09:35,420 --> 00:09:40,420
現在您可以縮小，並且可以在此處看到我的文字

211
00:09:42,180 --> 00:09:45,350
正在根據明暗模式更改顏色。

212
00:09:45,350 --> 00:09:48,180
因為我沒有設置顏色，

213
00:09:48,180 --> 00:09:50,680
默認情況下設置為黑色，

214
00:09:50,680 --> 00:09:53,000
對於暗模式，將其設置為白色。

215
00:09:53,000 --> 00:09:54,310
正如我之前提到的

216
00:09:54,310 --> 00:09:56,440
您實際上並不想設置自定義顏色，

217
00:09:56,440 --> 00:09:58,810
除非您有自定義背景，

218
00:09:58,810 --> 00:10:02,680
總的來說，對於明暗模式來說都是藍色，

219
00:10:02,680 --> 00:10:03,750
在這種情況下，

220
00:10:03,750 --> 00:10:06,950
您可以隨時將其設為白色。

221
00:10:06,950 --> 00:10:11,363
我要選擇第一個文本並將其設置為白色。

222
00:10:13,400 --> 00:10:16,533
讓我們對第二個文本也是如此。

223
00:10:17,910 --> 00:10:20,910
因此，現在兩張卡都是一致的。

224
00:10:20,910 --> 00:10:22,600
我想指出的另一件事是

225
00:10:22,600 --> 00:10:25,010
檢查員在這里可用，

226
00:10:25,010 --> 00:10:28,560
但也可以直接在預覽中使用。

227
00:10:28,560 --> 00:10:31,550
因此，您可以使用Command單擊元素

228
00:10:31,550 --> 00:10:35,650
顯示SwiftUI檢查器，

229
00:10:35,650 --> 00:10:39,710
這些選項將與這些完全相同。

230
00:10:39,710 --> 00:10:42,500
有一個快捷方式，而且無需單擊兩次。

231
00:10:42,500 --> 00:10:46,570
您可以執行"控制"選項並選擇。

232
00:10:46,570 --> 00:10:49,600
它會直接交給檢查員。

233
00:10:49,600 --> 00:10:51,290
預覽也一樣。

234
00:10:51,290 --> 00:10:54,940
因此，如果我選擇預覽本身，

235
00:10:54,940 --> 00:10:56,900
它會告訴我這里的選項

236
00:10:56,900 --> 00:10:59,830
而不是這里。

237
00:10:59,830 --> 00:11:02,200
現在，讓我更改預覽。

238
00:11:02,200 --> 00:11:06,340
我去佈局並更改為固定。

239
00:11:06,340 --> 00:11:07,830
這是我要設置的位置，

240
00:11:07,830 --> 00:11:12,830
假設是寬度200乘高度200。

241
00:11:12,960 --> 00:11:16,130
現在，我可以看到它的外觀，

242
00:11:16,130 --> 00:11:19,130
如果我的佈局或設備是這種尺寸。

243
00:11:19,130 --> 00:11:22,090
我也註意到這里有些差距，

244
00:11:22,090 --> 00:11:25,220
也許我想將我的卡設置為全屏顯示

245
00:11:25,220 --> 00:11:26,810
垂直也是如此。

246
00:11:26,810 --> 00:11:29,720
為此，我需要設置一個墊片。

247
00:11:29,720 --> 00:11:32,100
間隔符不是修飾符。

248
00:11:32,100 --> 00:11:34,770
這是推動容器的元素

249
00:11:34,770 --> 00:11:36,820
占用全部空間。

250
00:11:36,820 --> 00:11:39,410
因此，讓我單擊加號。

251
00:11:39,410 --> 00:11:43,313
我將轉到控制項並搜索spacer。

252
00:11:44,610 --> 00:11:47,260
在這里，我要拖放。

253
00:11:47,260 --> 00:11:49,510
再一次，任何我想要的地方。

254
00:11:49,510 --> 00:11:53,620
在這種情況下，就是我們圖片的頂部。

255
00:11:53,620 --> 00:11:54,940
當我這樣做時

256
00:11:54,940 --> 00:11:58,640
您可以看到它推動了整個購物車

257
00:11:58,640 --> 00:12:03,640
占用我在這里放置的可用空間。

258
00:12:03,760 --> 00:12:05,760
現在，您在這里看到了一些縫隙，

259
00:12:05,760 --> 00:12:07,460
那是安全的地方

260
00:12:07,460 --> 00:12:09,660
這與您的購物車無關。

261
00:12:09,660 --> 00:12:11,280
這取決於設備，

262
00:12:11,280 --> 00:12:13,010
我們稍後可以解決。

263
00:12:13,010 --> 00:12:14,500
所以要照顧這個差距，

264
00:12:14,500 --> 00:12:16,570
我們可以做的是同一件事。

265
00:12:16,570 --> 00:12:20,270
我們將單擊加號，搜索間隔符，

266
00:12:20,270 --> 00:12:25,270
像這樣將其拖放到圖像的左側。

267
00:12:25,700 --> 00:12:28,660
現在，因為我們在推動，

268
00:12:28,660 --> 00:12:30,250
圖像不再居中

269
00:12:30,250 --> 00:12:33,180
我們在右側也需要另一個墊片。

270
00:12:33,180 --> 00:12:34,950
還有插入的快捷方式，

271
00:12:34,950 --> 00:12:37,790
這是Shift Command和L

272
00:12:37,790 --> 00:12:39,680
再一次，尋找間隔，

273
00:12:39,680 --> 00:12:42,450
拖放到圖像的右側。

274
00:12:42,450 --> 00:12:43,380
查看圖像，

275
00:12:43,380 --> 00:12:47,730
您可以看到它現在位於水平堆棧中，

276
00:12:47,730 --> 00:12:51,400
它在左右兩側都有一個空間。

277
00:12:51,400 --> 00:12:53,720
它在推手推車

278
00:12:53,720 --> 00:12:55,630
占據屏幕的整個寬度。

279
00:12:55,630 --> 00:12:57,810
現在我剛創建了一個購物車

280
00:12:57,810 --> 00:13:00,710
完全適合所有屏幕尺寸，

281
00:13:00,710 --> 00:13:02,710
我甚至可以重復一遍

282
00:13:02,710 --> 00:13:06,430
假設是在網格佈局或列表佈局中

283
00:13:06,430 --> 00:13:07,400
在我們完成之前，

284
00:13:07,400 --> 00:13:11,170
我只想說，

285
00:13:11,170 --> 00:13:12,800
即使這很棒 使用檢查員，

286
00:13:12,800 --> 00:13:16,060
並通過預覽進行拖放操作，

287
00:13:16,060 --> 00:13:19,080
但請記住，您會錯過一些選擇

288
00:13:19,080 --> 00:13:23,360
而且您將無法像在代碼中那樣擁有更多的控制權。

289
00:13:23,360 --> 00:13:25,900
而且，您不應該將這些值設置為藍色。

290
00:13:25,900 --> 00:13:27,800
因此，我們將雙擊它們。

291
00:13:30,350 --> 00:13:33,860
現在，背景變為空白。

292
00:13:33,860 --> 00:13:35,990
在括號內，

293
00:13:35,990 --> 00:13:39,833
我們將輸入顏色點 藍色。

294
00:13:40,690 --> 00:13:45,130
讓我們對這里的兩個數字執行相同的操作。

295
00:13:45,130 --> 00:13:49,060
好的！今天我想向您展示用於SwiftUI的可視化編輯工具的

296
00:13:49,060 --> 00:13:51,860
所有新選項。

297
00:13:51,860 --> 00:13:54,140
這對初學者 對於設計師，對於原型製作

298
00:13:54,140 --> 00:13:56,500
來說特別好。

299
00:13:56,500 --> 00:13:59,730
因此，如果您有從未接觸過SwiftUI的同事

300
00:13:59,730 --> 00:14:04,130
這是對Xcode和SwiftUI的出色介紹。

301
00:14:04,130 --> 00:14:05,040
在下一個章節中

302
00:14:05,040 --> 00:14:07,620
我們將學習SF符號

303
00:14:07,620 --> 00:14:09,690
以及如何使用列表樣式。

304
00:14:09,690 --> 00:14:11,490
我將在下一章節再與您相見

