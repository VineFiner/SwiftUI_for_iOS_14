- SwiftUI 2 - SF 符号和列表格式 使用SF Symbols 2和iOS14中的新列表格式 [Meng] 嗨，大家好 欢迎来到我们的第三节 SwiftUI 课程 今天我们要学习如何使用SF符号 创建这些列表布局 你可以在iOS的各处看到它 在每节内容中 我要链接到正在被讨论的资源 例如SF Symbols应用程序 你应该为此下载SF Symbols 2 并且 有很多Dub Dub DC视频 你可以找到Apple的开发人员应用程序 例如，你可以在这里搜索SF符号 在此处，可以找到SF Symbols 2 视频 同样，这些资源将与文本内容链接在一起 就新的SF符号而言 现在我们可以使用多色符号 我还将向你展示如何在SwiftUI中使用它们 以及如何创建列表样式 回到Xcode 我们将创建一个新文件 我们使用 Command + N 这将创建一个新的SwiftUI视图 我们要选择这一个 接下来 我们将其命名为CourseRow 你可以使用命名约定行 用于列表中的任何可重复元素 首先，我们要恢复预览 然后我们要替换文本 依次点击图像、括号、系统名称 这时，我们将要使用完整的代码 因为它更容易调试 更容易控制 在你习惯之后，就会做得更快 在你这样做时 要始终使用自动填充功能 因为这些名称和值可能会很长 但是编程不是宽容的 就大写字母、小写字母和符号而言 回到我们的代码 在这里需要输入一个名字 在这种情况下 我们可以使用SF符号名称 如果你使用SF符号 我们要使用多色彩 让我们选择这个，它叫做paperplane 有一个复制代码的快捷方式 在"编辑"中，它就是"复制名称" 其快捷键是Shift + Command和C Shift + Command和C 回到Xcode 我们将其粘贴在双引号中 像这样 现在你将看到该图标 它几乎不可见，因为在默认情况下它很小 如果把它放大，则可以更清楚地看到它 你也可以将其放大，它有三种尺寸 我们可以使用修饰符 就在图像之后 我们将输入.imageScale 然后使用Medium 如果你按下dot，你将看到 我们在此可以使用的所有选项 你也可以使用"大号" 如果你想使用多色选项 我们必须在imageScale之前添加一个修饰符 输入. renderingMode 然后是.original 采用此技术 你可以访问所有2400个图标 而无需导入与其相关的任何资源 最重要的是 它还适用于Mac 你可以更改字体大小 以便与文本匹配，甚至匹配字体粗细 这等效于图标的笔触宽度 我要指出的是 如果你要使用字体属性 你将无法使用多色 所以renderingMode和imageScale 不是非常有用 因为字体大小会更改图标的大小 首先，让我在图标旁边添加一个文本 我要将其插入 它会保证stack的位置 我要插入文本 选择文字 拖放到图标的右侧 我可以单独更改字体大小 对于文字和图像 我也可以将修饰符放入容器中 使其同时应用于两者 我要这样做 在HStack之后 我要输入.font，然后按Enter 然后将其设置为标题 你在这里会注意到 该字体已被应用于这两个元素 而且，renderingMode将不再起作用 如果我将字体大小更改为大标题 图标和文本的大小都将得到调整 如果你要更改字体粗细 以及图标的笔触宽度 我们将使用system 来替换大标题 在这里，我们有很多选择 例如尺寸、粗细和设计 我们将选择这个 现在我们可以设置自定义字体大小 假设34，即大标题的大小 字体粗细可以是，比如粗体 对于字体，如果你输入"点" 你会发现，你可以选择的选项有 默认设置 mono空格，SF mono SF rounded选择圆滑，系列为 New York 让我们使用rounded 现在你将看到文字形状变得更圆滑 但图标不会因字体而改变 它仅随粗细和大小而变化 如果我将其设置为"light" 你会看到该图标更亮 文字也是如此 对于imageScale 我现在可以使用中号或小号 取决于我所设定的，与文字的比例 好的，这个的布局很常见 对于菜单来说 但如果我要加第二行文本，该怎么办 我们来添加一个新文本 并将其拖到第一个文本下方 它将创建一个包含两个文本的VStack 现在我要将.system 改成.subheadlines 确保只有一组括号 我不是同时应用图标和文本 而是要剪掉它，即Command + X 并把它放在第一个标题上 然后我将粘贴相同的修饰符 到第二个标题上 对于第二个标题 我将其设置为.footnote 让我们更改文本 所以，第一个SwiftUI 第二个，我们将其更改为 比方说Description 我要在第一个文本中添加一个粗体 即. Bold parentheses 接下来，我将确保在我的VStack中 我将文本向左对齐 在检查器中，单击左侧对齐 对于检查器与代码 我们将选择第二个文本 在这里的颜色中 你会看到我没有访问权限 对于系统中的某些颜色 其中之一被称为secondary 这真的很有用，因为它适用于不同设备 让我们转到.font 之后 我们将输入. foregroundColor 我们不用蓝色，而是将其设置为.secondary 此颜色不应被误认为是 资源目录中的颜色 这真的很有用，因为它适用于暗色模式 好吧，我来选择VStack 我们将间距设置为4 对于 HStack 我要将对齐方式设置为顶部对齐 我要使图标框变大 选择图片 我要转到边框，并将其设置为48 x 48 我要添加一个名为background的修饰符 然后添加另一个，名为clip shape 这使我可以遮盖任何形状 在这种情况下，默认的设置为圆形 由于我的背景和图像都是蓝色的 我应该再添加一个foregroundColor 更改图标的颜色 我将其设置为白色 它没有生效 因为renderingMode被设置为original 我需要改用模板 这使我可以根据需要为图标着色 在这种情况下，它被设置为白色 好的，我们可以在右侧添加一个间隔 以使所有空间都采用全宽度 让我们转到右侧，在VStack之后键入Spacer及括号 好，我已经有了一行，我可以创建一个新屏幕 让我们来做吧 Command + N，选择SwiftUI视图 将其命名为CoursesView 让我们重新使用它 我可以将文本 替换为CourseRow及括号 现在，你可以看到我正在引用 我刚才创建的UI元素 并创建我的列表布局 我可以按Command，同时单击CourseRow 进入上下文菜单，然后选择"嵌入列表" 太棒了，现在我有了列表用户界面 我可以重复很多次 例如20次 并且它可以上下滚动 如果你希望能够与预览互动 你需要点击播放 在这里，你可以像这样滚动内容 现在谈谈列表样式 我们将要转到列表，并添加一个修订符 名为 .List Style 此时，你还不知道 哪些列表样式是可以使用的 甚至连检查器也没有帮助 你可以做的一件事 它是超级有用的 即在任意修饰符上使用Option Click 以获取文档 你可以单击ListStyle 这将打开内置文档 然后你可以滚动 这里有很多可以使用的类型 例如，我们可以使用 InsetGroupedListStyle 然后将其粘贴在此处的括号中 就是这样 我可以拥有一个漂亮的新用户界面 根据我的自定义设计，即CourseRow 可将图标更改为2400种图标中的一个 那真的很有用 我希望你喜欢这节课内容 在下节课中 我们将探讨如何创建侧边栏 以及如何加上新标签 我们下节课见 designcode.io