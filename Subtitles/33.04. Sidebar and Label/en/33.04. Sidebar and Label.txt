- [Meng] Hi, and welcome back to our fourth session of my SwiftUI course. Today, we're going to learn about the new sidebar. So Apple has redesigned most of their iPad apps to welcome to new sidebar because it's going to be more consistent with Mac apps. From a UI perspective, we're now able to utilize all of the space available to us on the iPad. And this navigation here can be super rich, you can have multiple groups, collapsible menus, and even multi-level navigation that goes very deep. On top of that, it's collapsible and it's going to stay on the navbar. And if you're in the landscape mode, you're not gonna see it, you can just swipe from the left, or you can click on this button to enable the menu. So the top bar on the iPhone will mostly be replaced by the sidebar on the iPad, but you can use both on iPhone so you can decide to have the top bar and the sidebar as well. At the end of the day, this is simply a list with a navigation title and it's going to be super simple to implement and it's going to be very adaptive. Back to Xcode, we're going to create a new file for the sidebar, so Command + N, and then press Enter by selecting SwiftUI View. We're going to name this one Sidebar. Let's resume the preview. And we're going to replace the text by a label instead. So first of all, I'm going to delete this and Command + Shift + L to search for a label. And we're going to drag directly to the code between the curly braces. The cool thing about the label is that it's going to replace about four lines of code with a single one. And here you can customize the text as well as the SF symbol name. Let's double click on Label and change that to Courses. For the SF symbol, we're gonna change that to book.closed. Now to create a sidebar menu, all you need to do is to embed this inside a list. First of all, we're going to Command-click on label, we're gonna embed this in Vstack, then we're going to change Vstack to List. Now the magic here is just to set the list style. So .listStyle. And we're going to set it to SidebarListStyle, parentheses. So there you go, you have the styling, but what we're missing is the navigation. And in order to have a navigation, we're gonna need to put this inside a navigation view. So again, I'm going to Command-click, embed in VStack and change VStack to NavigationView. So now if I click on play, you're gonna see that I have the navbar if I scroll, which means that I can put a title here. So right after listStyle, we're gonna put .navigationTitle, and we're going to type Learn. Thanks to the navigation title, when I scroll, it's just going to switch to the navbar. Now I can definitely add more menu items. So I can just copy and paste the label. So it's going to add a divider between each. Let me just maximize this space here. And I'm gonna fill some content. So the next one is Tutorials and the icon is going to be list.bullet.rectangle. Feel free to use your own icons and to create your own menu. Let me do the next ones. Feel free to copy and paste the code that I have in the text content. Alright, so just like a tab bar, we're gonna make sure that when we click on one of the menu items, it's going to go to the screen itself. So for the first label, I'm going to Command-click it and embed in VStack. This time, I'm going to use a NavigationLink, parentheses, destination, lower case, and I'm going to link it to CoursesView, parentheses. So as soon as I did that, you see the arrow here, and I can click on it, and it goes to my view. So this is how the sidebar looks on the iPhone. Now for the iPad, we're going to switch the device and let's select iPad Pro 11-inch. We're going to need to zoom out a little bit. And you can see it's basically the same principle except that it slides from the left. Now you're noticing that by default, there is no content loaded. And honestly, I don't know if this is by design, but I found a trick to fix that, which is right after the list, we're going to insert the courses view. So CoursesView, parentheses. So now the first time that your app loads, it's going to show this screen by default. Now in the preview, it's not gonna show me the landscape mode. So in order to test that, I'm going to have to do Command + R, or click on the play button right here. And it's going to go to the iOS Simulator, and it's going to build the app. So when I build my app, you're gonna notice that it's loading my cart by default. And that's because I haven't set up my initial screen. So the first file that it's going to load is called DesignCodeCourseApp. And you can see here that it's linking to ContentView. So we can change that to Sidebar, and Command + R again, and voila, you can see that I have my sidebar on the left. You can select it, and it's also showing this content by default, and you can toggle the sidebar. That's pretty neat. So with just a few lines of code, I'm able to create a pretty dynamic UI that can welcome a lot of content. There's just one final thing, is that you can set the navigation title also for the Courses view and for any view in your menu. To do that, I'm gonna go to CoursesView, and right after listStyle, we're going to set .navigationTitle, and this time it's going to be Courses. Now let's run our app again. And voila. So you can see I have my menu on the left side, and my content with a title and with a really nice transition when I scroll. So that's what I wanted to show you today. In the next session, we're going to test this UI with a few tweaks for the Mac app. So I'll see you in the next session.