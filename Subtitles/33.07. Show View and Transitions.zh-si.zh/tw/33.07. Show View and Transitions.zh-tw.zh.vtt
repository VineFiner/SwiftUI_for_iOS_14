WEBVTT

1
00:00:12.610 --> 00:00:13.443
- [孟] 嘿，

2
00:00:13.443 --> 00:00:16.040
歡迎來到我的SwiftUI課程第七課。

3
00:00:16.040 --> 00:00:18.910
今天我們要開始很多有關

4
00:00:18.910 --> 00:00:21.000
匹配的幾何的一系列視頻。

5
00:00:21.000 --> 00:00:23.370
一路上，我們將學習很多新技術

6
00:00:23.370 --> 00:00:27.230
例如非對稱過渡，選擇狀態，

7
00:00:27.230 --> 00:00:29.250
lazyGrid等。

8
00:00:29.250 --> 00:00:33.710
首先，讓我們開始切換到iOS。

9
00:00:33.710 --> 00:00:36.870
我要選擇iPhone 11進行預覽，

10
00:00:36.870 --> 00:00:38.250
所以點擊繼續。

11
00:00:38.250 --> 00:00:39.700
不是這里的文字，

12
00:00:39.700 --> 00:00:43.010
我們將把CourseItem放在括號中。

13
00:00:43.010 --> 00:00:45.960
這就是我們先前創建的購物車設計。

14
00:00:45.960 --> 00:00:48.350
現在我們要設定一個固定的框架

15
00:00:48.350 --> 00:00:53.350
因此，點框的寬度為335，高度為250。

16
00:00:55.850 --> 00:00:59.080
現在我們要做的就是點擊此購物車

17
00:00:59.080 --> 00:01:02.000
將顯示全屏視圖。

18
00:01:02.000 --> 00:01:03.040
為了做到這一點，

19
00:01:03.040 --> 00:01:06.260
我們將不得不將此CourseItem放入其中

20
00:01:06.260 --> 00:01:11.260
首先是VStack，然後從VStack更改為ZStack。

21
00:01:11.440 --> 00:01:15.070
這將使我們可以將許多推車彼此

22
00:01:15.070 --> 00:01:16.190
三維地疊放

23
00:01:16.190 --> 00:01:19.970
而不是垂直或水平堆疊。

24
00:01:19.970 --> 00:01:23.110
現在我們要設置新的視圖

25
00:01:23.110 --> 00:01:26.460
CourseItem括號，

26
00:01:26.460 --> 00:01:28.280
那麼我們要確保這個新視圖

27
00:01:28.280 --> 00:01:30.670
默認情況下不顯示。

28
00:01:30.670 --> 00:01:32.420
因此，我們將不得不設置一個狀態。

29
00:01:33.290 --> 00:01:37.490
狀態var show等於false。

30
00:01:37.490 --> 00:01:41.500
然後，我們將為第二個課程項添加一個條件。

31
00:01:41.500 --> 00:01:44.330
讓我們先將其包裝在VStack中，

32
00:01:44.330 --> 00:01:47.543
並從VStack更改為if show。

33
00:01:48.620 --> 00:01:50.360
每當您更新變量時，

34
00:01:50.360 --> 00:01:52.660
您將不得不恢復預覽。

35
00:01:52.660 --> 00:01:54.300
當你這樣做的時候

36
00:01:54.300 --> 00:01:58.720
那麼默認情況下不會顯示全屏。

37
00:01:58.720 --> 00:02:00.360
讓我們添加一個點擊手勢

38
00:02:00.360 --> 00:02:02.570
這樣，當我們點擊此購物車時，

39
00:02:02.570 --> 00:02:05.410
它會顯示全屏。

40
00:02:05.410 --> 00:02:08.323
讓我們為ZStack放置所有東西。

41
00:02:09.240 --> 00:02:12.580
所以在ZStack點TapGesture之後，

42
00:02:12.580 --> 00:02:14.350
這是我們要輸入的內容

43
00:02:14.350 --> 00:02:17.850
顯示圓點切換括號。

44
00:02:17.850 --> 00:02:21.160
這樣可以確保我們每次點擊購物車時，

45
00:02:21.160 --> 00:02:23.980
它會在真與假之間切換。

46
00:02:23.980 --> 00:02:25.283
讓我們點擊播放。

47
00:02:26.430 --> 00:02:30.000
現在，當我們點擊購物車時，它將切換到完整模式。

48
00:02:30.000 --> 00:02:31.960
再來回。

49
00:02:31.960 --> 00:02:33.940
當然，我們需要過渡，

50
00:02:33.940 --> 00:02:36.683
所以我們可以設置點動畫

51
00:02:37.610 --> 00:02:40.980
默認情況下將設置為easeIn，

52
00:02:40.980 --> 00:02:45.560
創建一個簡單的淡入淡出動畫。

53
00:02:45.560 --> 00:02:48.470
如果您要自定義此過渡，

54
00:02:48.470 --> 00:02:51.130
您將需要放置一個修飾符

55
00:02:51.130 --> 00:02:55.530
在if show內部的第一個父容器上。

56
00:02:55.530 --> 00:02:59.920
因此，讓我們進行點過渡。

57
00:02:59.920 --> 00:03:02.380
在這里，如果您輸入點號

58
00:03:02.380 --> 00:03:03.910
你有很多選擇，

59
00:03:03.910 --> 00:03:06.700
例如不透明度 。

60
00:03:06.700 --> 00:03:08.723
但除此之外，您也可以使用幻燈片。

61
00:03:09.570 --> 00:03:12.050
在這里，它將從左側滑動，

62
00:03:12.050 --> 00:03:13.670
然後向右移動。

63
00:03:13.670 --> 00:03:15.050
現在，您在這里註意到的是

64
00:03:15.050 --> 00:03:18.160
是當您進行過渡時，

65
00:03:18.160 --> 00:03:21.430
然後突然，手推車滯後於第一個手推車，

66
00:03:21.430 --> 00:03:23.020
那不是我們想要的。

67
00:03:23.020 --> 00:03:25.600
通常，您可以使用zIndex解決此問題，

68
00:03:25.600 --> 00:03:27.920
例如點zIndex。

69
00:03:27.920 --> 00:03:29.840
插入一個值。

70
00:03:29.840 --> 00:03:31.040
但是在這個測試版中

71
00:03:31.040 --> 00:03:34.190
似乎有點問題，

72
00:03:34.190 --> 00:03:36.810
特別是當您單擊多次時。

73
00:03:36.810 --> 00:03:40.240
不用擔心，我們稍後將進一步探討zIndex。

74
00:03:40.240 --> 00:03:42.270
但是我找到了一個快速解決方案。

75
00:03:42.270 --> 00:03:44.803
因此，我將刪除zIndex，現在將其平滑。

76
00:03:45.830 --> 00:03:49.220
是將if show放在VStack中。

77
00:03:49.220 --> 00:03:53.810
因此，我們用Vstack，花括號，

78
00:03:53.810 --> 00:03:57.370
我將為if語句剪切所有內容

79
00:03:58.320 --> 00:04:00.920
並將其粘貼到VStack中。

80
00:04:00.920 --> 00:04:02.320
如果這樣做

81
00:04:02.320 --> 00:04:05.550
那麼您的新視圖將永遠處於最重要的位置。

82
00:04:05.550 --> 00:04:09.323
現在，我們可以探索其他轉換，例如縮放。

83
00:04:10.200 --> 00:04:11.863
這就是它的樣子。

84
00:04:13.060 --> 00:04:14.730
然後是一個非常有用的

85
00:04:14.730 --> 00:04:18.570
是使用邊緣之一移動。

86
00:04:18.570 --> 00:04:22.150
常見的過渡是從尾隨

87
00:04:22.150 --> 00:04:24.120
從右邊開始，

88
00:04:24.120 --> 00:04:27.110
因此，這是一個從右側轉到的屏幕

89
00:04:27.110 --> 00:04:28.860
然後隱藏起來。

90
00:04:28.860 --> 00:04:32.140
如果您不希望全屏顯示受到

91
00:04:32.140 --> 00:04:33.670
在安全區域附近的限制

92
00:04:33.670 --> 00:04:36.080
然後您可以添加一個修飾符

93
00:04:36.080 --> 00:04:40.400
點edgeIgnoringSafeArea點全部。

94
00:04:40.400 --> 00:04:43.070
所以現在您將看到漂亮的全屏模式

95
00:04:43.070 --> 00:04:45.210
從右邊滑動。

96
00:04:45.210 --> 00:04:48.850
我們可以改變它來自哪個方向。

97
00:04:48.850 --> 00:04:52.180
底部也很常見，像這樣，

98
00:04:52.180 --> 00:04:55.030
幾乎像一個模態但沒有堆放推車

99
00:04:55.030 --> 00:04:57.320
以及手勢。

100
00:04:57.320 --> 00:04:59.420
同時，與模式不同，

101
00:04:59.420 --> 00:05:03.400
這些趨勢的添加非常可定製。

102
00:05:03.400 --> 00:05:07.420
我也可以從左起先導。

103
00:05:07.420 --> 00:05:09.390
然後在動畫方面，

104
00:05:09.390 --> 00:05:12.790
我們可以更改為easyIn out。

105
00:05:12.790 --> 00:05:14.710
所以這意味著它會很慢

106
00:05:14.710 --> 00:05:17.563
在動畫的開頭和結尾。

107
00:05:18.460 --> 00:05:22.130
還有更多選項，例如持續時間，延遲，重復，

108
00:05:22.130 --> 00:05:26.020
在之前的課程中，我進行了很多探討。

109
00:05:26.020 --> 00:05:29.470
現在，讓我們專註於彈簧，這真的很整潔，

110
00:05:29.470 --> 00:05:32.460
因為它會反彈一點。

111
00:05:32.460 --> 00:05:36.360
它給我們帶來了您在iOS上看到的很多效果。

112
00:05:36.360 --> 00:05:37.660
但我確實要指出

113
00:05:37.660 --> 00:05:40.740
這是設置動畫的好方法，

114
00:05:40.740 --> 00:05:43.670
您也可以在操作期間進行操作。

115
00:05:43.670 --> 00:05:48.670
所以在這里我要輸入Animation花括號，

116
00:05:49.180 --> 00:05:53.070
我要帶上顯示點切換。

117
00:05:53.070 --> 00:05:56.580
讓我們禁用點動畫修改器

118
00:05:56.580 --> 00:05:59.660
並專註於withAnimation。

119
00:05:59.660 --> 00:06:02.640
現在我只想指出在預覽中

120
00:06:02.640 --> 00:06:05.280
它會立即出現

121
00:06:05.280 --> 00:06:07.560
然後正確消失。

122
00:06:07.560 --> 00:06:11.010
但是，運行應用程式時並非如此。

123
00:06:11.010 --> 00:06:12.260
在iOS模擬器中，

124
00:06:12.260 --> 00:06:15.290
您會看到動畫是正確的。

125
00:06:15.290 --> 00:06:17.940
所以我在這里兩個都探索的原因

126
00:06:17.940 --> 00:06:19.110
是給你選擇，

127
00:06:19.110 --> 00:06:22.520
也是因為這是正確的方法

128
00:06:22.520 --> 00:06:24.743
當您使用匹配的幾何效果時。

129
00:06:25.750 --> 00:06:27.193
讓我繼續這個。

130
00:06:28.260 --> 00:06:29.093
再說一次

131
00:06:29.093 --> 00:06:31.860
您可以看到，當我第一次單擊它時，它會立即出現，

132
00:06:31.860 --> 00:06:35.150
但是當我多次單擊時，它運行正常。

133
00:06:35.150 --> 00:06:39.320
所以這只是要正確記住withAnimation。

134
00:06:39.320 --> 00:06:41.420
如果要添加動畫時間

135
00:06:41.420 --> 00:06:44.720
在動畫之後，將成為括號

136
00:06:44.720 --> 00:06:47.830
點圓括號。

137
00:06:47.830 --> 00:06:51.210
要註意的另一件事是，當您與withAnimation一起使用時，

138
00:06:51.210 --> 00:06:53.900
時間可能會有所不同。

139
00:06:53.900 --> 00:06:55.930
所以動畫的速度

140
00:06:55.930 --> 00:06:58.710
與使用點動畫修改器相比。

141
00:06:58.710 --> 00:06:59.543
因此，

142
00:06:59.543 --> 00:07:02.110
您應該創建一個

143
00:07:02.110 --> 00:07:03.700
屏幕之間的預設動畫，

144
00:07:03.700 --> 00:07:06.040
這將跨平臺工作

145
00:07:06.040 --> 00:07:08.420
包括Mac和iPad。

146
00:07:08.420 --> 00:07:10.050
在下一次課程中

147
00:07:10.050 --> 00:07:12.130
我們將使用匹配的幾何效果。

148
00:07:12.130 --> 00:07:14.360
我們將能夠比較

149
00:07:14.360 --> 00:07:17.170
在預設過渡之間

150
00:07:17.170 --> 00:07:20.140
與過渡共用元素

151
00:07:20.140 --> 00:07:22.360
使用匹配的幾何效果的差異。

152
00:07:22.360 --> 00:07:24.253
因此，我將在下次課程上見。

