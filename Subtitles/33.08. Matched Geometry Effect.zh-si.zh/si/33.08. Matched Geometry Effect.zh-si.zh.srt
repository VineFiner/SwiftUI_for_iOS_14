1
00:00:12,640 --> 00:00:14,970
- [孟] 大家好，欢迎回到第八节

2
00:00:14,970 --> 00:00:16,850
我的SwiftUI课程

3
00:00:16,850 --> 00:00:21,810
因此，我们可以用iOS 14的大型动画工具

4
00:00:21,810 --> 00:00:23,770
称为匹配几何效果。

5
00:00:23,770 --> 00:00:26,740
这将使我们能够对共享元素进行动画处理

6
00:00:26,740 --> 00:00:29,580
在两个视图之间无缝连接。

7
00:00:29,580 --> 00:00:30,413
要做到这一点，

8
00:00:30,413 --> 00:00:31,780
您将需要设置

9
00:00:31,780 --> 00:00:34,890
匹配的几何效果修改器，

10
00:00:34,890 --> 00:00:37,250
我们将标记共享元素。

11
00:00:37,250 --> 00:00:38,520
在这种情况下，

12
00:00:38,520 --> 00:00:39,930
我们有CourseItem，

13
00:00:39,930 --> 00:00:43,340
在全屏模式下完全相同。

14
00:00:43,340 --> 00:00:45,180
对于第一个CourseItem，

15
00:00:45,180 --> 00:00:47,360
你把在框架前匹配的几何效果修改器

16
00:00:47,360 --> 00:00:50,840
放进去很重要 。

17
00:00:50,840 --> 00:00:55,300
所以点matchedGeometryEffect，回车。

18
00:00:55,300 --> 00:00:59,300
在这里，我们需要输入一个ID，然后输入一个NameSpace。

19
00:00:59,300 --> 00:01:02,570
对于ID，我们只需要放入一张卡即可。

20
00:01:02,570 --> 00:01:04,710
对于命名空间，

21
00:01:04,710 --> 00:01:09,710
我们将不得不声明Namespace var名称空间。

22
00:01:11,780 --> 00:01:14,470
因此，据我了解，命名空间是您设置

23
00:01:14,470 --> 00:01:17,110
匹配元素的集合的位置。

24
00:01:17,110 --> 00:01:21,010
因此，让我们将命名空间放在修饰符中。

25
00:01:21,010 --> 00:01:24,440
然后我们可以复制此修饰符

26
00:01:24,440 --> 00:01:28,943
并以全屏模式将其放在第二个CourseItem上。

27
00:01:29,820 --> 00:01:31,203
让我们继续。

28
00:01:32,270 --> 00:01:33,700
点击卡片。

29
00:01:33,700 --> 00:01:37,200
您会看到只有过渡工作正常。

30
00:01:37,200 --> 00:01:38,823
所以要解决这个问题

31
00:01:39,730 --> 00:01:43,113
我们将设置另一个名为isSource的属性。

32
00:01:44,000 --> 00:01:47,000
在这里，我们想知道哪张卡是原始的。

33
00:01:47,000 --> 00:01:51,300
因此，您可以通过option单击来查看文档

34
00:01:51,300 --> 00:01:53,560
而且您得到更多解释

35
00:01:53,560 --> 00:01:54,900
发生了什么。

36
00:01:54,900 --> 00:01:56,860
所以我们有isSource

37
00:01:56,860 --> 00:01:59,480
我们要在这里做什么

38
00:01:59,480 --> 00:02:01,473
是使用show状态。

39
00:02:02,500 --> 00:02:04,210
所以显示。

40
00:02:04,210 --> 00:02:06,460
然后我们希望这是真。

41
00:02:06,460 --> 00:02:11,140
因此，我们将在前面添加感叹号。

42
00:02:11,140 --> 00:02:12,530
现在，当您单击它时，

43
00:02:12,530 --> 00:02:15,090
它完成了美丽的过渡。

44
00:02:15,090 --> 00:02:19,370
我们在过渡过程中只有一个问题。

45
00:02:19,370 --> 00:02:24,370
因此，我们可以改为从移动到默认不透明度。

46
00:02:25,470 --> 00:02:29,190
瞧，现在我们有了一个完美的过渡。

47
00:02:29,190 --> 00:02:32,080
因此，据我了解，show是错误的。

48
00:02:32,080 --> 00:02:35,260
因此，我们使用感叹号来实现它。

49
00:02:35,260 --> 00:02:36,140
但是同时

50
00:02:36,140 --> 00:02:39,440
这必须是状态，因为在全屏模式下，

51
00:02:39,440 --> 00:02:42,890
该第一张卡不再是来源。

52
00:02:42,890 --> 00:02:45,440
因此，这变为错误。

53
00:02:45,440 --> 00:02:47,900
全屏显示卡成为源，

54
00:02:47,900 --> 00:02:50,930
这意味着现在我们可以来回切换，

55
00:02:50,930 --> 00:02:53,160
它过渡完美。

56
00:02:53,160 --> 00:02:56,270
因此，此动画非常可定制。

57
00:02:56,270 --> 00:02:57,103
例如

58
00:02:57,103 --> 00:02:59,740
对于全屏模式下的课程项目，

59
00:02:59,740 --> 00:03:04,470
我们要在匹配的几何效果之后设置点帧

60
00:03:04,470 --> 00:03:08,760
括号高度为300。

61
00:03:08,760 --> 00:03:09,960
当我这样做时

62
00:03:09,960 --> 00:03:12,560
它不会占据整个高度。

63
00:03:12,560 --> 00:03:13,810
有趣的是

64
00:03:13,810 --> 00:03:17,030
是我可以设置想要的任何类型的内容

65
00:03:17,030 --> 00:03:18,780
在我的全屏模式下

66
00:03:18,780 --> 00:03:22,070
匹配的几何体将负责

67
00:03:22,070 --> 00:03:24,560
在两个CourseItem视图之间过渡。

68
00:03:24,560 --> 00:03:25,700
例如

69
00:03:25,700 --> 00:03:28,260
我可以使全屏滚动。

70
00:03:28,260 --> 00:03:30,620
因此，命令单击CourseItem，

71
00:03:30,620 --> 00:03:32,650
让我们将其放入Vstack

72
00:03:32,650 --> 00:03:35,653
然后从VStack更改为滚动视图。

73
00:03:36,670 --> 00:03:37,920
所以当你这样做时

74
00:03:37,920 --> 00:03:40,000
您可以看到我正在过渡，

75
00:03:40,000 --> 00:03:42,570
现在我可以滚动内容了。

76
00:03:42,570 --> 00:03:46,670
只要确保edgeIgnoringSafeArea

77
00:03:46,670 --> 00:03:49,530
放置在滚动视图上。

78
00:03:49,530 --> 00:03:51,960
与过渡相同。

79
00:03:51,960 --> 00:03:53,890
所以过渡只会

80
00:03:53,890 --> 00:03:58,130
在if show语句内的第一个父容器上起作用。

81
00:03:58,130 --> 00:04:01,690
让我们在封面后面添加更多内容，

82
00:04:01,690 --> 00:04:03,090
所以是CourseItem。

83
00:04:03,090 --> 00:04:06,383
我们将在CourseRow括号中加上

84
00:04:07,270 --> 00:04:08,840
现在就在这里。

85
00:04:08,840 --> 00:04:11,400
您可以看到CourseRow正在使用

86
00:04:11,400 --> 00:04:13,230
不透明过渡

87
00:04:13,230 --> 00:04:16,810
而CourseItem使用匹配的几何效果。

88
00:04:16,810 --> 00:04:20,810
为了使内容可滚动，我们将设置此重复。

89
00:04:20,810 --> 00:04:23,760
因此，命令单击，单击重复。

90
00:04:23,760 --> 00:04:25,910
不是最多五个

91
00:04:25,910 --> 00:04:28,110
我们将设置为20。

92
00:04:28,110 --> 00:04:31,760
现在我们的内容是可滚动的，这真的很棒。

93
00:04:31,760 --> 00:04:33,860
以及为什么不添加一些填充。

94
00:04:33,860 --> 00:04:36,200
因此，请为每个命令单击

95
00:04:36,200 --> 00:04:38,020
将其放入VStack中

96
00:04:38,020 --> 00:04:42,030
在VStack之后，设置点填充括号，

97
00:04:42,030 --> 00:04:42,900
太棒了

98
00:04:42,900 --> 00:04:44,850
因此，它开始看起来像一个真正的UI。

99
00:04:44,850 --> 00:04:48,173
动画是可取消的，内容是可滚动的。

100
00:04:49,560 --> 00:04:54,560
现在回到动画与withAnimation的话题。

101
00:04:54,620 --> 00:04:58,260
因此，如果我通过加修饰禁用withAnimation

102
00:04:59,250 --> 00:05:02,870
然后放回动画修改器，

103
00:05:02,870 --> 00:05:06,290
您会看到动画要慢得多，

104
00:05:06,290 --> 00:05:07,200
但至少可以播放。

105
00:05:07,200 --> 00:05:10,440
它不会立即显示过渡。

106
00:05:10,440 --> 00:05:13,200
但是为什么我说withAnimation更好

107
00:05:13,200 --> 00:05:15,610
是因为有滞后。

108
00:05:15,610 --> 00:05:17,930
所以您可以看到当我滚动时

109
00:05:17,930 --> 00:05:21,670
后面的卡正试图赶上。

110
00:05:21,670 --> 00:05:23,910
因此，这并不理想。

111
00:05:23,910 --> 00:05:26,800
在使用行进几何效果时，

112
00:05:26,800 --> 00:05:28,400
我相信现在

113
00:05:28,400 --> 00:05:30,720
最好使用withAnimation。

114
00:05:30,720 --> 00:05:34,610
因此，我可以删除点动画修改器。

115
00:05:34,610 --> 00:05:36,620
我知道现在看起来真的很容易

116
00:05:36,620 --> 00:05:38,980
是的，它将变得更加有趣，

117
00:05:38,980 --> 00:05:41,650
特别是当您处理很多卡时

118
00:05:41,650 --> 00:05:44,430
必须匹配不同的元素。

119
00:05:44,430 --> 00:05:46,130
在进行下一次课程之前，

120
00:05:46,130 --> 00:05:48,100
我们可以删除这个VStack容器

121
00:05:48,100 --> 00:05:51,290
因为我们不再遇到困难。

122
00:05:51,290 --> 00:05:54,660
因此，请确保双击花括号

123
00:05:54,660 --> 00:05:57,170
而且您知道可以在哪里删除它。

124
00:05:57,170 --> 00:06:00,340
所以，我要先删除结尾

125
00:06:00,340 --> 00:06:01,883
然后开始。

126
00:06:02,730 --> 00:06:06,900
让我通过选择整个内容来修复缩进

127
00:06:06,900 --> 00:06:09,480
控制。

128
00:06:09,480 --> 00:06:10,460
在下一次课程中

129
00:06:10,460 --> 00:06:13,830
我想向您展示如何创建延迟过渡

130
00:06:13,830 --> 00:06:16,700
这样我们首先显示卡片

131
00:06:16,700 --> 00:06:18,990
然后内容显示第二。

132
00:06:18,990 --> 00:06:20,863
因此，我们下届会议将再见。

