WEBVTT

1
00:00:00.749 --> 00:00:03.332
(upbeat music)

2
00:00:12.560 --> 00:00:14.500
<v Meng>Hi and welcome back to session nine</v>

3
00:00:14.500 --> 00:00:16.050
of my Swift UI course.

4
00:00:16.050 --> 00:00:18.710
Today, we're gonna look into delayed transition

5
00:00:18.710 --> 00:00:20.710
and asymmetric transition

6
00:00:20.710 --> 00:00:23.410
so that we can open this card,

7
00:00:23.410 --> 00:00:24.870
and before even showing the content,

8
00:00:24.870 --> 00:00:27.490
which is kind of overlapping with the card,

9
00:00:27.490 --> 00:00:28.700
it's going to wait.

10
00:00:28.700 --> 00:00:30.300
So it's gonna show the card first,

11
00:00:30.300 --> 00:00:32.560
and then the content later.

12
00:00:32.560 --> 00:00:34.290
If you scroll down a little bit

13
00:00:34.290 --> 00:00:38.890
and look at the transition and replace .opacity with dot,

14
00:00:38.890 --> 00:00:42.270
you're gonna find more options such as asymmetric,

15
00:00:42.270 --> 00:00:47.130
and then you can see that the type is AnyTransition.

16
00:00:47.130 --> 00:00:48.840
Now, what is interesting here

17
00:00:48.840 --> 00:00:51.910
is that you can set the animation timing

18
00:00:51.910 --> 00:00:53.740
for your transition.

19
00:00:53.740 --> 00:00:57.210
So to do that, we're going to remove dot

20
00:00:57.210 --> 00:01:01.580
and put AnyTransition.opacity

21
00:01:02.540 --> 00:01:04.840
.animation.

22
00:01:04.840 --> 00:01:07.570
And this is where we can set the animation timing.

23
00:01:07.570 --> 00:01:09.877
In this case, we're gonna use .spring(),

24
00:01:11.650 --> 00:01:13.920
and because we're using .animation,

25
00:01:13.920 --> 00:01:17.510
we can also set multiple animation options.

26
00:01:17.510 --> 00:01:20.200
So if you set the value type

27
00:01:20.200 --> 00:01:22.520
Animation with capital A,

28
00:01:22.520 --> 00:01:23.460
you're gonna be able

29
00:01:23.460 --> 00:01:26.723
to set after .spring().delay

30
00:01:29.280 --> 00:01:31.780
and set it to 0.3, for example.

31
00:01:31.780 --> 00:01:33.870
Let me indent the code a little bit.

32
00:01:33.870 --> 00:01:37.730
So we have the transition and then for this transition,

33
00:01:37.730 --> 00:01:41.120
we have multiple options such as what kind of transition?

34
00:01:41.120 --> 00:01:42.830
In this case, it's opacity.

35
00:01:42.830 --> 00:01:47.600
And for that transition, we have the animation timing.

36
00:01:47.600 --> 00:01:49.530
Then for the animation timing,

37
00:01:49.530 --> 00:01:51.890
we have the spring behavior,

38
00:01:51.890 --> 00:01:56.080
but also we added a delay of 0.3 seconds.

39
00:01:56.080 --> 00:01:58.860
And I can just put this on the next line.

40
00:01:58.860 --> 00:02:03.120
So this is my entire transition with all of these options.

41
00:02:03.120 --> 00:02:06.550
To make it more readable lemme just maximize this

42
00:02:06.550 --> 00:02:07.720
and let's test this.

43
00:02:07.720 --> 00:02:10.290
So I click here and you can see

44
00:02:10.290 --> 00:02:15.100
that the content is waiting 0.3 seconds before showing up.

45
00:02:15.100 --> 00:02:18.490
But the problem is, this goes both ways,

46
00:02:18.490 --> 00:02:21.420
both transition in and transition out.

47
00:02:21.420 --> 00:02:25.300
So when I go back, it's also waiting 0.3 seconds.

48
00:02:25.300 --> 00:02:28.220
As a result, you can see that both transition in

49
00:02:28.220 --> 00:02:30.100
and out are symmetrical.

50
00:02:30.100 --> 00:02:31.540
So to solve this,

51
00:02:31.540 --> 00:02:34.830
we're gonna use asymmetrical transition.

52
00:02:34.830 --> 00:02:39.760
So right before AnyTransition, I'm going to do, dot,

53
00:02:39.760 --> 00:02:42.660
and then here we can see asymmetric.

54
00:02:42.660 --> 00:02:44.290
So we're gonna select this,

55
00:02:44.290 --> 00:02:45.470
double click it,

56
00:02:45.470 --> 00:02:48.360
and you can see that it is expecting AnyTransition

57
00:02:48.360 --> 00:02:51.810
for both insertion and removal.

58
00:02:51.810 --> 00:02:56.810
So let me cut the whole AnyTransition with these modifiers.

59
00:02:56.950 --> 00:03:01.923
So command + X, and I'm going to replace insertion.

60
00:03:02.990 --> 00:03:06.930
Let's put insertion in its own line,

61
00:03:06.930 --> 00:03:09.320
as well as removal.

62
00:03:09.320 --> 00:03:12.270
And now we can also paste

63
00:03:12.270 --> 00:03:14.690
for the other AnyTransition.

64
00:03:14.690 --> 00:03:17.640
But for the second one, which is the removal,

65
00:03:17.640 --> 00:03:21.070
this is where we can remove .delay.

66
00:03:21.070 --> 00:03:25.080
So remove .delay, including the parentheses as well.

67
00:03:25.080 --> 00:03:27.240
And since we only have a single option,

68
00:03:27.240 --> 00:03:29.730
we don't need the value type anymore.

69
00:03:29.730 --> 00:03:33.180
So now we have opacity and the animation timing.

70
00:03:33.180 --> 00:03:34.190
That's pretty cool.

71
00:03:34.190 --> 00:03:36.250
So now when I transition in,

72
00:03:36.250 --> 00:03:38.340
you can see that the content is waiting.

73
00:03:38.340 --> 00:03:41.770
When I transition out, it disappears instantly.

74
00:03:41.770 --> 00:03:44.010
Using this technique, you're going to be able

75
00:03:44.010 --> 00:03:46.020
to have different animation timings

76
00:03:46.020 --> 00:03:48.170
between transition in and out.

77
00:03:48.170 --> 00:03:51.610
So let me just fix the indentation here

78
00:03:51.610 --> 00:03:54.340
and then remove this extra space.

79
00:03:54.340 --> 00:03:57.650
This is where we can start having multiple cards

80
00:03:57.650 --> 00:03:59.780
and see what kind of complexity

81
00:03:59.780 --> 00:04:01.410
that we're gonna run into.

82
00:04:01.410 --> 00:04:04.080
First of all, let's create a V stack,

83
00:04:04.080 --> 00:04:06.200
so that we can have a second card.

84
00:04:06.200 --> 00:04:08.900
So clicking on a first course item,

85
00:04:08.900 --> 00:04:10.830
embed that in a V stack.

86
00:04:10.830 --> 00:04:13.663
And then right after the first course item,

87
00:04:14.690 --> 00:04:17.970
create another course item, parentheses.

88
00:04:17.970 --> 00:04:19.290
Let's use the same size.

89
00:04:19.290 --> 00:04:22.260
So let's copy .frame modifier

90
00:04:22.260 --> 00:04:24.730
and apply that to the second card.

91
00:04:24.730 --> 00:04:26.150
Let's add a bit of spacing.

92
00:04:26.150 --> 00:04:30.317
So parentheses for the V stack, spacing 220.

93
00:04:32.330 --> 00:04:34.760
So when we click on the card,

94
00:04:34.760 --> 00:04:36.230
it's gonna show the full screen,

95
00:04:36.230 --> 00:04:39.520
but only between the first course item

96
00:04:39.520 --> 00:04:41.660
and the full screen course item.

97
00:04:41.660 --> 00:04:43.330
And that's because they're a match.

98
00:04:43.330 --> 00:04:47.050
So the first course item has an ID card

99
00:04:47.050 --> 00:04:50.710
and this full view course item has the same ID.

100
00:04:50.710 --> 00:04:54.390
You can imagine that if we have, let's say 20 cards,

101
00:04:54.390 --> 00:04:58.180
each of those cards will have to have a unique ID

102
00:04:58.180 --> 00:05:02.410
and that unique ID has to match the full screen ID.

103
00:05:02.410 --> 00:05:04.870
So that's where having multiple cards

104
00:05:04.870 --> 00:05:07.270
using matched symmetry can get pretty complex

105
00:05:07.270 --> 00:05:09.220
and it's not matched symmetry's fault.

106
00:05:09.220 --> 00:05:12.190
It's just the way we wanna set up the animations

107
00:05:12.190 --> 00:05:16.110
and the transitions that requires a lot of setup.

108
00:05:16.110 --> 00:05:16.943
But don't worry,

109
00:05:16.943 --> 00:05:19.270
we're going to try the simplest route possible

110
00:05:19.270 --> 00:05:22.380
while keeping all the powerful features.

111
00:05:22.380 --> 00:05:23.880
Before we move to the next session,

112
00:05:23.880 --> 00:05:25.840
let's fix the background color

113
00:05:25.840 --> 00:05:29.470
so that it doesn't seem overlapping like this.

114
00:05:29.470 --> 00:05:31.280
We're gonna go to the scroll view,

115
00:05:31.280 --> 00:05:33.670
and at the end of it, before the transition,

116
00:05:33.670 --> 00:05:35.760
we're gonna set .background.

117
00:05:35.760 --> 00:05:38.210
We're gonna use one of our color assets.

118
00:05:38.210 --> 00:05:42.840
So color, parentheses, it's going to be Background 1.

119
00:05:42.840 --> 00:05:46.160
We set up Background 1 to be white for light mode

120
00:05:46.160 --> 00:05:48.380
and black for dark mode.

121
00:05:48.380 --> 00:05:50.030
So now when we go to full screen,

122
00:05:50.030 --> 00:05:52.300
you can see that the content is scrollable

123
00:05:52.300 --> 00:05:54.270
and it's not overlapping anymore.

124
00:05:54.270 --> 00:05:57.310
Next, we're gonna make this main screen of cards

125
00:05:57.310 --> 00:05:59.180
to be scrollable as well.

126
00:05:59.180 --> 00:06:02.040
So let's command click on V stack

127
00:06:02.040 --> 00:06:04.220
and embed in V stack

128
00:06:04.220 --> 00:06:07.133
and replace by a scroll view.

129
00:06:09.080 --> 00:06:10.620
Now the content is scrollable,

130
00:06:10.620 --> 00:06:13.630
but you're gonna notice that since the scroll view

131
00:06:13.630 --> 00:06:15.510
is clipping the content,

132
00:06:15.510 --> 00:06:19.400
we have to make sure that the content inside the scroll view

133
00:06:19.400 --> 00:06:20.950
takes the full width.

134
00:06:20.950 --> 00:06:23.770
And to solve that, we're going to add a modifier

135
00:06:23.770 --> 00:06:25.053
for V stack,

136
00:06:26.006 --> 00:06:28.940
.frame, parentheses

137
00:06:28.940 --> 00:06:29.773
MaxWidth:

138
00:06:31.289 --> 00:06:33.180
.infinity

139
00:06:33.180 --> 00:06:34.013
Awesome.

140
00:06:34.013 --> 00:06:37.500
Now we can see that both of our screens are scrollable

141
00:06:37.500 --> 00:06:40.360
and transitioning perfectly.

142
00:06:40.360 --> 00:06:41.930
In the next session we're going to play

143
00:06:41.930 --> 00:06:45.470
with an array of cards, using a data model.

144
00:06:45.470 --> 00:06:47.620
We're going to pass the data to each card

145
00:06:47.620 --> 00:06:49.680
so that the content is unique.

146
00:06:49.680 --> 00:06:51.490
And then we're going to match the cards

147
00:06:51.490 --> 00:06:53.720
using matched symmetry effect.

148
00:06:53.720 --> 00:06:56.209
So I'll see you in the next session.

149
00:06:56.209 --> 00:06:57.978
(outro beat)

