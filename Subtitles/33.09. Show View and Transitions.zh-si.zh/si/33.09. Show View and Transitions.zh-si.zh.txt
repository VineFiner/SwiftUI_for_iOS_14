- 大家好，欢迎回到我的Swift UI课程第九节课。 今天，我们将来谈谈延时过渡和非对称过渡 这样我们在打开这个卡片时， 在显示内容前， 该内容与卡片有某种程度的重叠， 需要等一会儿。 它会首先显示这张卡片， 其后才会显示内容。 如果你向下拉一点 并且看着过场动画，同时将.opacity用dot 代替， 你将会发现像非对称等更多的选项， 而那时你会看到该类型是AnyTransition。 现在，在这里有趣的是 你可以为你过场动画 设置动画时间。 那么要这么做，我们要先移去点 并且置入AnyTransition.opacity .animation。 这里就是我们能够设置动画时间的地方。 在这个案例里，我们将会使用.spring ， 而因为我们正在使用.animation， 我们也可以设置多种动画选项。 那么如果你设置值类型 Animation为大写的A， 你将会可以 在.spring .delay后设置 将它设置为0.3，举例来说。 让我把这段代码稍向后缩一点。 那么我们有了过场动画而对于这个过场动画， 我们有多种选项，如哪种类型的过场动画？ 在这个案例里，是透明度。 对于那个过场动画，我们有动画时间。 对于该动画时间， 我们有弹性表现， 但我们也加入了一个0.3秒的延迟。 而我可以把这个放到下一行中。 那么这是我的整个过场动画及其所有这些选项。 要让它更容易阅读让我把这个最大化 让我们测试这个。 那么我点击这里而你就会看到 该内容在显示前等待了0.3秒。 但是问题是，这个是双向的， 在入场动画和离场动画里都有。 那么当我往回看，它也要等待0.3秒。 作为结果，你可以看到这两个入场和离场 动画是对称的。 那么要解决这个问题， 我们将要使用非对称过场动画。 就在AnyTransition前面，我将要做，点， 那么这里我们可以看到非对称。 那么我将要选择这个， 双击它， 你可以看到对于AnyTransition预期的是 插入和移除两者都适用。 那么让我用这些修改器来切割整个AnyTransition， 用Command键+X，我将会替换插入。 让我们将插入放到它自己的行里， 对于移除也是。 而现在我们也可以对于 其它的AnyTransition进行粘贴。 但是对于第二个，也就是移除， 在这里我们可以去掉.delay。 那么移去.delay，包括括号在内。 而由于我们只有一个单独的选项， 我们将不再需要值的类型了。 那么我们现在有了透明和动画时间。 这相当棒。 那么现在当我进行入场动画时， 你可以看到该内容在等待。 而当我进行离场动画时，它立即就消失了。 使用这个技术，你就能够 在入场和离场动画上面 有着不同的动画时间。 那么让我修正这里的缩进 再移去多余的空格。 这里就是我们可以开始有多张卡片 并且看到我们将要运行 哪种程度的复杂度。 首先，让我们创建一个V堆栈， 这样我们可以有了第二张卡片。 那么点击第一段的条目， 将其嵌入到V堆栈中。 然后紧跟着第一段的条目， 创建另一个节的条目，括号。 让我们使用相同的尺寸。 那么让我们复制.frame修改器 并且应用其到第二张卡片。 让我么加一点空格。 对于V堆栈的括号，间距220。 那么当我们点击这张卡片时， 它将会显示全屏， 但仅在第一节的条目 和全屏的条目之间。 因为它们之间是匹配的。 对于第一节的条目有一个标识卡 而对于这个全屏查看的条目有着相同的标识。 你可以想象如果我们有，比方说20张卡片， 而这些卡片的每张必须有一个唯一的标识 而该唯一的标识必须与全屏标识相匹配。 那么当有着多张卡片 使用匹配的对称会带来相当的复杂度 而这与对称的缺陷不匹配。 这只是我们想要设置动画的方式 而过场动画要求许多的设置。 但是别担心， 我们将要尝试可能的最简单的途径 而同时保持所有这些强大的功能。 在我们进入下一节课程前， 让我们修正背景色 以便让它不会像这样重叠。 我们将要卷动视图， 在其尾部，在过场动画前， 我们将要设置.background。 我们将要使用我们其中一个色彩集。 那么颜色，括号，那将会是Background 1。 我们设置Background 1在光照模式时为白色 而在黑暗模式为黑色。 那么现在当我们全屏时， 你可以看到内容是可以滚动查看的 而其它不再重叠了。 下一步，我们将要让这些卡片的主屏幕 也成为可以滚动阅读的。 那么让我们按住命令键点击V堆栈 并嵌入到v堆栈里 并用一个滚动浏览视图来替换。 现在内容是可以滚动浏览的， 但是你将会注意到由于滚动浏览视图 剪短了内容， 我们必须确保在滚动浏览视图里的内容 占用了全部的宽度。 那么要解决该问题，我们准备为V堆栈 增加一个修改器， .frame，括号 MaxWidth: .infinity 太棒了。 现在我们可以看到我们的两个屏幕都是可以滚动阅读的 并且过场动画完美。 在下一节课中我们准备要玩 一个卡片矩阵，使用一个数据模型。 我们将会把数据传递给每一张卡片 这样其内容都是独有的。 然后我们准备匹配这些卡片 使用匹配的对称效果。 希望下一节课再次与你会面。 designcode.io