WEBVTT

1
00:00:12.560 --> 00:00:16.050
- 大家好，歡迎回到我的Swift UI課程第九節課。

2
00:00:16.050 --> 00:00:20.710
今天，我們將來談談延時過渡和非對稱過渡

3
00:00:20.710 --> 00:00:23.410
這樣我們在打開這個卡片時，

4
00:00:23.410 --> 00:00:24.870
在顯示內容前，

5
00:00:24.870 --> 00:00:27.490
該內容與卡片有某種程度的重疊，

6
00:00:27.490 --> 00:00:28.700
需要等一會兒。

7
00:00:28.700 --> 00:00:30.300
它會首先顯示這張卡片，

8
00:00:30.300 --> 00:00:32.560
其後才會顯示內容。

9
00:00:32.560 --> 00:00:34.290
如果你向下拉一點

10
00:00:34.290 --> 00:00:38.890
並且看著過場動畫，同時將.opacity用dot 代替，

11
00:00:38.890 --> 00:00:42.270
你將會發現像非對稱等更多的選項，

12
00:00:42.270 --> 00:00:47.130
而那時你會看到該類型是AnyTransition。

13
00:00:47.130 --> 00:00:48.840
現在，在這里有趣的是

14
00:00:48.840 --> 00:00:51.910
你可以為你過場動畫

15
00:00:51.910 --> 00:00:53.740
設置動畫時間。

16
00:00:53.740 --> 00:00:57.210
那麼要這麼做，我們要先移去點

17
00:00:57.210 --> 00:01:01.580
並且置入AnyTransition.opacity

18
00:01:02.540 --> 00:01:04.840
.animation。

19
00:01:04.840 --> 00:01:07.570
這里就是我們能夠設置動畫時間的地方。

20
00:01:07.570 --> 00:01:09.877
在這個案例里，我們將會使用.spring ，

21
00:01:11.650 --> 00:01:13.920
而因為我們正在使用.animation，

22
00:01:13.920 --> 00:01:17.510
我們也可以設置多種動畫選項。

23
00:01:17.510 --> 00:01:20.200
那麼如果你設置值類型

24
00:01:20.200 --> 00:01:22.520
Animation為大寫的A，

25
00:01:22.520 --> 00:01:23.460
你將會可以

26
00:01:23.460 --> 00:01:26.723
在.spring .delay後設置

27
00:01:29.280 --> 00:01:31.780
將它設置為0.3，舉例來說。

28
00:01:31.780 --> 00:01:33.870
讓我把這段代碼稍向後縮一點。

29
00:01:33.870 --> 00:01:37.730
那麼我們有了過場動畫而對於這個過場動畫，

30
00:01:37.730 --> 00:01:41.120
我們有多種選項，如哪種類型的過場動畫？

31
00:01:41.120 --> 00:01:42.830
在這個案例里，是透明度。

32
00:01:42.830 --> 00:01:47.600
對於那個過場動畫，我們有動畫時間。

33
00:01:47.600 --> 00:01:49.530
對於該動畫時間，

34
00:01:49.530 --> 00:01:51.890
我們有彈性表現，

35
00:01:51.890 --> 00:01:56.080
但我們也加入了一個0.3秒的延遲。

36
00:01:56.080 --> 00:01:58.860
而我可以把這個放到下一行中。

37
00:01:58.860 --> 00:02:03.120
那麼這是我的整個過場動畫及其所有這些選項。

38
00:02:03.120 --> 00:02:06.550
要讓它更容易閱讀讓我把這個最大化

39
00:02:06.550 --> 00:02:07.720
讓我們測試這個。

40
00:02:07.720 --> 00:02:10.290
那麼我點擊這里而你就會看到

41
00:02:10.290 --> 00:02:15.100
該內容在顯示前等待了0.3秒。

42
00:02:15.100 --> 00:02:18.490
但是問題是，這個是雙向的，

43
00:02:18.490 --> 00:02:21.420
在入場動畫和離場動畫里都有。

44
00:02:21.420 --> 00:02:25.300
那麼當我往回看，它也要等待0.3秒。

45
00:02:25.300 --> 00:02:28.220
作為結果，你可以看到這兩個入場和離場

46
00:02:28.220 --> 00:02:30.100
動畫是對稱的。

47
00:02:30.100 --> 00:02:31.540
那麼要解決這個問題，

48
00:02:31.540 --> 00:02:34.830
我們將要使用非對稱過場動畫。

49
00:02:34.830 --> 00:02:39.760
就在AnyTransition前面，我將要做，點，

50
00:02:39.760 --> 00:02:42.660
那麼這里我們可以看到非對稱。

51
00:02:42.660 --> 00:02:44.290
那麼我將要選擇這個，

52
00:02:44.290 --> 00:02:45.470
雙擊它，

53
00:02:45.470 --> 00:02:48.360
你可以看到對於AnyTransition預期的是

54
00:02:48.360 --> 00:02:51.810
插入和移除兩者都適用。

55
00:02:51.810 --> 00:02:56.810
那麼讓我用這些修改器來切割整個AnyTransition，

56
00:02:56.950 --> 00:03:01.923
用Command鍵+X，我將會替換插入。

57
00:03:02.990 --> 00:03:06.930
讓我們將插入放到它自己的行里，

58
00:03:06.930 --> 00:03:09.320
對於移除也是。

59
00:03:09.320 --> 00:03:12.270
而現在我們也可以對於

60
00:03:12.270 --> 00:03:14.690
其它的AnyTransition進行粘貼。

61
00:03:14.690 --> 00:03:17.640
但是對於第二個，也就是移除，

62
00:03:17.640 --> 00:03:21.070
在這里我們可以去掉.delay。

63
00:03:21.070 --> 00:03:25.080
那麼移去.delay，包括括號在內。

64
00:03:25.080 --> 00:03:27.240
而由於我們只有一個單獨的選項，

65
00:03:27.240 --> 00:03:29.730
我們將不再需要值的類型了。

66
00:03:29.730 --> 00:03:33.180
那麼我們現在有了透明和動畫時間。

67
00:03:33.180 --> 00:03:34.190
這相當棒。

68
00:03:34.190 --> 00:03:36.250
那麼現在當我進行入場動畫時，

69
00:03:36.250 --> 00:03:38.340
你可以看到該內容在等待。

70
00:03:38.340 --> 00:03:41.770
而當我進行離場動畫時，它立即就消失了。

71
00:03:41.770 --> 00:03:44.010
使用這個技術，你就能夠

72
00:03:44.010 --> 00:03:46.020
在入場和離場動畫上面

73
00:03:46.020 --> 00:03:48.170
有著不同的動畫時間。

74
00:03:48.170 --> 00:03:51.610
那麼讓我修正這里的縮進

75
00:03:51.610 --> 00:03:54.340
再移去多餘的空格。

76
00:03:54.340 --> 00:03:57.650
這里就是我們可以開始有多張卡片

77
00:03:57.650 --> 00:03:59.780
並且看到我們將要運行

78
00:03:59.780 --> 00:04:01.410
哪種程度的復雜度。

79
00:04:01.410 --> 00:04:04.080
首先，讓我們創建一個V堆棧，

80
00:04:04.080 --> 00:04:06.200
這樣我們可以有了第二張卡片。

81
00:04:06.200 --> 00:04:08.900
那麼點擊第一段的條目，

82
00:04:08.900 --> 00:04:10.830
將其嵌入到V堆棧中。

83
00:04:10.830 --> 00:04:13.663
然後緊跟著第一段的條目，

84
00:04:14.690 --> 00:04:17.970
創建另一個節的條目，括號。

85
00:04:17.970 --> 00:04:19.290
讓我們使用相同的尺寸。

86
00:04:19.290 --> 00:04:22.260
那麼讓我們復制.frame修改器

87
00:04:22.260 --> 00:04:24.730
並且應用其到第二張卡片。

88
00:04:24.730 --> 00:04:26.150
讓我麼加一點空格。

89
00:04:26.150 --> 00:04:30.317
對於V堆棧的括號，間距220。

90
00:04:32.330 --> 00:04:34.760
那麼當我們點擊這張卡片時，

91
00:04:34.760 --> 00:04:36.230
它將會顯示全屏，

92
00:04:36.230 --> 00:04:39.520
但僅在第一節的條目

93
00:04:39.520 --> 00:04:41.660
和全屏的條目之間。

94
00:04:41.660 --> 00:04:43.330
因為它們之間是匹配的。

95
00:04:43.330 --> 00:04:47.050
對於第一節的條目有一個標識卡

96
00:04:47.050 --> 00:04:50.710
而對於這個全屏查看的條目有著相同的標識。

97
00:04:50.710 --> 00:04:54.390
你可以想象如果我們有，比方說20張卡片，

98
00:04:54.390 --> 00:04:58.180
而這些卡片的每張必須有一個唯一的標識

99
00:04:58.180 --> 00:05:02.410
而該唯一的標識必須與全屏標識相匹配。

100
00:05:02.410 --> 00:05:04.870
那麼當有著多張卡片

101
00:05:04.870 --> 00:05:07.270
使用匹配的對稱會帶來相當的復雜度

102
00:05:07.270 --> 00:05:09.220
而這與對稱的缺陷不匹配。

103
00:05:09.220 --> 00:05:12.190
這只是我們想要設置動畫的方式

104
00:05:12.190 --> 00:05:16.110
而過場動畫要求許多的設置。

105
00:05:16.110 --> 00:05:16.943
但是別擔心，

106
00:05:16.943 --> 00:05:19.270
我們將要嘗試可能的最簡單的途徑

107
00:05:19.270 --> 00:05:22.380
而同時保持所有這些強大的功能。

108
00:05:22.380 --> 00:05:23.880
在我們進入下一節課程前，

109
00:05:23.880 --> 00:05:25.840
讓我們修正背景色

110
00:05:25.840 --> 00:05:29.470
以便讓它不會像這樣重疊。

111
00:05:29.470 --> 00:05:31.280
我們將要捲動視圖，

112
00:05:31.280 --> 00:05:33.670
在其尾部，在過場動畫前，

113
00:05:33.670 --> 00:05:35.760
我們將要設置.background。

114
00:05:35.760 --> 00:05:38.210
我們將要使用我們其中一個色彩集。

115
00:05:38.210 --> 00:05:42.840
那麼顏色，括號，那將會是Background 1。

116
00:05:42.840 --> 00:05:46.160
我們設置Background 1在光照模式時為白色

117
00:05:46.160 --> 00:05:48.380
而在黑暗模式為黑色。

118
00:05:48.380 --> 00:05:50.030
那麼現在當我們全屏時，

119
00:05:50.030 --> 00:05:52.300
你可以看到內容是可以滾動查看的

120
00:05:52.300 --> 00:05:54.270
而其它不再重疊了。

121
00:05:54.270 --> 00:05:57.310
下一步，我們將要讓這些卡片的主屏幕

122
00:05:57.310 --> 00:05:59.180
也成為可以滾動閱讀的。

123
00:05:59.180 --> 00:06:02.040
那麼讓我們按住命令鍵點擊V堆棧

124
00:06:02.040 --> 00:06:04.220
並嵌入到v堆棧里

125
00:06:04.220 --> 00:06:07.133
並用一個滾動瀏覽視圖來替換。

126
00:06:09.080 --> 00:06:10.620
現在內容是可以滾動瀏覽的，

127
00:06:10.620 --> 00:06:13.630
但是你將會註意到由於滾動瀏覽視圖

128
00:06:13.630 --> 00:06:15.510
剪短了內容，

129
00:06:15.510 --> 00:06:19.400
我們必須確保在滾動瀏覽視圖里的內容

130
00:06:19.400 --> 00:06:20.950
占用了全部的寬度。

131
00:06:20.950 --> 00:06:23.770
那麼要解決該問題，我們準備為V堆棧

132
00:06:23.770 --> 00:06:25.053
增加一個修改器，

133
00:06:26.006 --> 00:06:28.940
.frame，括號

134
00:06:28.940 --> 00:06:29.773
MaxWidth:

135
00:06:31.289 --> 00:06:33.180
.infinity

136
00:06:33.180 --> 00:06:34.013
太棒了。

137
00:06:34.013 --> 00:06:37.500
現在我們可以看到我們的兩個屏幕都是可以滾動閱讀的

138
00:06:37.500 --> 00:06:40.360
並且過場動畫完美。

139
00:06:40.360 --> 00:06:41.930
在下一節課中我們準備要玩

140
00:06:41.930 --> 00:06:45.470
一個卡片矩陣，使用一個數據模型。

141
00:06:45.470 --> 00:06:47.620
我們將會把數據傳遞給每一張卡片

142
00:06:47.620 --> 00:06:49.680
這樣其內容都是獨有的。

143
00:06:49.680 --> 00:06:51.490
然後我們準備匹配這些卡片

144
00:06:51.490 --> 00:06:53.720
使用匹配的對稱效果。

145
00:06:53.720 --> 00:06:56.209
希望下一節課再次與你會面。

146
00:06:56.209 --> 00:06:57.978
designcode.io

