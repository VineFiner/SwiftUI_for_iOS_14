1
00:00:05,214 --> 00:00:10,140
SWIFT UI 2 - 将卡与静态数据进行匹配
采用匹配几何效果为多种元素做标签

2
00:00:12,590 --> 00:00:16,230
- [Meng] 你好，欢迎来到我的第10节SwiftUI课程

3
00:00:16,230 --> 00:00:18,820
我们要开始处理静态数据

4
00:00:18,820 --> 00:00:21,310
这意味着这些卡将变得更有趣

5
00:00:21,310 --> 00:00:22,820
我们将会创建更多的卡

6
00:00:22,820 --> 00:00:26,180
我们将为它们增添匹配几何效果

7
00:00:26,180 --> 00:00:29,620
首先，我们将创建一个新的数据模型文件

8
00:00:29,620 --> 00:00:30,883
通过Command + N

9
00:00:31,760 --> 00:00:33,233
选择SwiftUI视图

10
00:00:34,270 --> 00:00:36,270
我们将其命名为 Course

11
00:00:36,270 --> 00:00:39,450
确保同时定位macOS和iOS

12
00:00:39,450 --> 00:00:40,950
这是由于数据应该

13
00:00:40,950 --> 00:00:43,120
在所有平台上都保持一致

14
00:00:43,120 --> 00:00:46,980
我们在创建数据模型时，不需要 UI 元素

15
00:00:46,980 --> 00:00:49,410
我们要输入struct

16
00:00:49,410 --> 00:00:50,243
Course

17
00:00:51,160 --> 00:00:54,970
键入 identifiable ，加花括号

18
00:00:54,970 --> 00:00:56,970
我们将从某个变量ID开始

19
00:00:56,970 --> 00:01:01,970
var id 等于 UUID，加括号

20
00:01:02,620 --> 00:01:05,410
这样将自动生成一个独特的ID

21
00:01:05,410 --> 00:01:07,440
用于每一项元素

22
00:01:07,440 --> 00:01:11,050
我们就可以用它来匹配几何效果

23
00:01:11,050 --> 00:01:13,290
每个卡都将会有一个标题

24
00:01:13,290 --> 00:01:16,670
var title，在String下面

25
00:01:16,670 --> 00:01:21,010
接下来是var subtitle，同样在String下面

26
00:01:21,010 --> 00:01:23,970
键入var image，在String字符串下面

27
00:01:23,970 --> 00:01:27,860
最后是 var color，在Color之下

28
00:01:27,860 --> 00:01:30,060
现在我们将需要一些样本数据

29
00:01:30,060 --> 00:01:34,538
var courses 等于array

30
00:01:34,538 --> 00:01:36,170
加方括号

31
00:01:36,170 --> 00:01:38,030
让我们将其放在单独的一行中

32
00:01:38,030 --> 00:01:42,760
在中间，我们输入Course，加括号

33
00:01:42,760 --> 00:01:45,760
这可以检测到数据模型

34
00:01:45,760 --> 00:01:48,380
我们可以选择一个没有ID的

35
00:01:48,380 --> 00:01:51,060
因为ID是自动生成的

36
00:01:51,060 --> 00:01:52,990
在此双击

37
00:01:52,990 --> 00:01:55,920
你可以根据数据类型填充数据

38
00:01:55,920 --> 00:02:00,660
字符串是引号，对于图像也是如此

39
00:02:00,660 --> 00:02:03,288
至于颜色，我们将输入Color

40
00:02:03,288 --> 00:02:04,121
括号

41
00:02:04,121 --> 00:02:06,310
color lit

42
00:02:06,310 --> 00:02:08,760
我们将使用colorLiteral，以便能够

43
00:02:08,760 --> 00:02:12,110
很容易地改变颜色

44
00:02:12,110 --> 00:02:14,810
在这里我要粘贴大量数据

45
00:02:14,810 --> 00:02:17,030
因为要花很多时间

46
00:02:17,030 --> 00:02:19,190
如果手动输入所有内容的话

47
00:02:19,190 --> 00:02:21,900
所以我要粘贴整个内容

48
00:02:21,900 --> 00:02:25,510
请随意使用本节中的文字内容

49
00:02:25,510 --> 00:02:27,450
或使用你自己的数据

50
00:02:27,450 --> 00:02:30,520
只要符合数据模型要求即可

51
00:02:30,520 --> 00:02:33,300
你就可以看到每张卡都有一个标题

52
00:02:33,300 --> 00:02:38,060
然后是字幕、图像名称以及颜色

53
00:02:38,060 --> 00:02:40,743
让我们保存并返回CoursesView

54
00:02:42,083 --> 00:02:44,500
我们这里有一张卡，然后是第二张卡

55
00:02:44,500 --> 00:02:46,070
它是手动输入的

56
00:02:46,070 --> 00:02:48,203
第二张卡可以被删除

57
00:02:49,150 --> 00:02:52,790
对于第一张卡，我们通过 Command + 单击

58
00:02:52,790 --> 00:02:55,480
然后单击重复

59
00:02:55,480 --> 00:02:58,780
通常它会重复多次

60
00:02:58,780 --> 00:03:00,970
它没有任何数据

61
00:03:00,970 --> 00:03:03,480
相反，我们将使用数据模型

62
00:03:03,480 --> 00:03:06,770
从sample data ，Course

63
00:03:06,770 --> 00:03:10,890
这意味着该项适用于每张卡

64
00:03:10,890 --> 00:03:13,120
现在让我们重新启用它

65
00:03:13,120 --> 00:03:15,180
你可以看到我们遇到了一个问题

66
00:03:15,180 --> 00:03:19,370
因为每张卡都要被匹配为

67
00:03:19,370 --> 00:03:23,370
全屏显示，因为它们都具有相同的ID

68
00:03:23,370 --> 00:03:26,698
因此，我们将替换这个ID

69
00:03:26,698 --> 00:03:30,243
通过手动输入item.id

70
00:03:31,290 --> 00:03:35,130
因为在我们的数据模型中，我们拥有独特的ID

71
00:03:35,130 --> 00:03:38,580
现在的问题是我们如何将此ID

72
00:03:38,580 --> 00:03:40,240
与全屏显示卡进行匹配？

73
00:03:40,240 --> 00:03:41,830
因为如果你单击它

74
00:03:41,830 --> 00:03:44,290
它没有共享元素转换

75
00:03:44,290 --> 00:03:46,790
现在，我们要手动去做

76
00:03:46,790 --> 00:03:49,960
这意味着，我们不会采用它

77
00:03:49,960 --> 00:03:52,540
因为它与item.id不匹配

78
00:03:52,540 --> 00:03:55,500
我们将从阵列课程中选取一个

79
00:03:55,500 --> 00:03:58,160
然后使用索引值

80
00:03:58,160 --> 00:04:01,100
我们要选用第一张卡

81
00:04:01,100 --> 00:04:02,821
输入方括号

82
00:04:02,821 --> 00:04:03,654
零

83
00:04:03,654 --> 00:04:07,440
结尾处为.id

84
00:04:07,440 --> 00:04:10,010
这意味着全屏显示卡

85
00:04:10,010 --> 00:04:12,510
将与第一张卡匹配

86
00:04:12,510 --> 00:04:15,420
因此，只有第一张卡会转换

87
00:04:15,420 --> 00:04:19,680
如果我要设置，假设是2，意味着第三张卡

88
00:04:19,680 --> 00:04:23,030
那么此卡将进行转换

89
00:04:23,030 --> 00:04:24,180
太酷了

90
00:04:24,180 --> 00:04:26,580
现在暂时将其设置为零

91
00:04:26,580 --> 00:04:29,800
然后将数据传递给每张卡

92
00:04:29,800 --> 00:04:34,110
我们通过Command+单击CourseItem，跳到定义

93
00:04:34,110 --> 00:04:36,000
所以我们要确保

94
00:04:36,000 --> 00:04:39,630
在CourseItem部分的数据将是可定制的

95
00:04:39,630 --> 00:04:42,080
在body之前

96
00:04:42,080 --> 00:04:44,479
我们要设置 var course

97
00:04:44,479 --> 00:04:45,971
在course类别下面

98
00:04:45,971 --> 00:04:47,610
这是数据模型

99
00:04:47,610 --> 00:04:50,240
我们将有一些默认值

100
00:04:50,240 --> 00:04:54,214
课程部分使用索引值，加方括号

101
00:04:54,214 --> 00:04:55,250
零

102
00:04:55,250 --> 00:04:58,770
现在我们要将每个硬编码的值

103
00:04:58,770 --> 00:04:59,610
替换为数据

104
00:04:59,610 --> 00:05:04,010
采用course.image，用于图像

105
00:05:04,010 --> 00:05:08,550
然后第一个文本将是course.title

106
00:05:08,550 --> 00:05:12,728
第二个文本是 course.subtitle

107
00:05:12,728 --> 00:05:15,570
背景色使用color.blue

108
00:05:15,570 --> 00:05:19,290
将其替换为course.color

109
00:05:19,290 --> 00:05:20,400
我们在此还可以

110
00:05:20,400 --> 00:05:22,990
让cornerRadius 和阴影

111
00:05:22,990 --> 00:05:24,240
有更多的变化

112
00:05:24,240 --> 00:05:27,400
对于cornerRadius，我将使用光滑的角

113
00:05:27,400 --> 00:05:30,050
你在iOS上看到了很多这样的应用

114
00:05:30,050 --> 00:05:32,980
让我们选择整个.cornerRadius

115
00:05:32,980 --> 00:05:34,713
然后将其替换为.clipShape

116
00:05:37,290 --> 00:05:39,868
在当中，输入RoundedRectangle

117
00:05:39,868 --> 00:05:41,234
括号

118
00:05:41,234 --> 00:05:43,070
选择第一个选项

119
00:05:43,070 --> 00:05:45,500
它会显示 radiusRadius

120
00:05:45,500 --> 00:05:50,460
我们将它设置为22，然后是style.continuous

121
00:05:50,460 --> 00:05:51,293
如果你重新启用它

122
00:05:51,293 --> 00:05:52,750
你会看到其中的数据

123
00:05:52,750 --> 00:05:55,180
已替换为你的数据

124
00:05:55,180 --> 00:05:59,260
cornerRadius变成了平滑的角

125
00:05:59,260 --> 00:06:01,860
最后，我们将自定义阴影

126
00:06:01,860 --> 00:06:04,370
在半径之前

127
00:06:04,370 --> 00:06:07,553
我们要先设置空间，然后设置颜色

128
00:06:07,553 --> 00:06:09,194
冒号

129
00:06:09,194 --> 00:06:11,940
course.color

130
00:06:11,940 --> 00:06:15,516
对于该颜色，我们将使用.opacity

131
00:06:15,516 --> 00:06:16,520
括号

132
00:06:16,520 --> 00:06:17,886
将其设置为0.3

133
00:06:18,780 --> 00:06:22,620
在括号后加一个逗号

134
00:06:22,620 --> 00:06:25,300
对于半径，我将其设置为20

135
00:06:25,300 --> 00:06:29,120
将X位置设为0

136
00:06:29,120 --> 00:06:32,510
将Y位置设为10

137
00:06:32,510 --> 00:06:35,250
太好了，所以现在我有了背景下拉阴影

138
00:06:35,250 --> 00:06:40,250
即使用不透明度为30％的背景色

139
00:06:41,546 --> 00:06:43,550
现在我可以回到CoursesView

140
00:06:43,550 --> 00:06:46,630
然后我要设置CourseItem组件

141
00:06:46,630 --> 00:06:51,630
在括号的中间输入 course:item

142
00:06:52,860 --> 00:06:57,060
这是从ForEach 环路中得到的

143
00:06:57,060 --> 00:06:59,790
使用我的array call courses

144
00:06:59,790 --> 00:07:01,453
对于全屏显示

145
00:07:02,540 --> 00:07:05,707
在表示 CourseItem 的括号内

146
00:07:05,707 --> 00:07:09,920
输入course:courses，后者即课程组

147
00:07:09,920 --> 00:07:11,100
加方括号

148
00:07:11,100 --> 00:07:14,630
我现在仅针对第一张卡

149
00:07:14,630 --> 00:07:18,430
现在，你可以看到数据正在被填充

150
00:07:18,430 --> 00:07:23,430
包括标题，副标题，插图和颜色

151
00:07:23,560 --> 00:07:25,100
最重要的是

152
00:07:25,100 --> 00:07:27,560
转换也将起作用

153
00:07:27,560 --> 00:07:29,540
如果你更改索引值

154
00:07:29,540 --> 00:07:33,410
例如设为3，它指的是第四张卡

155
00:07:33,410 --> 00:07:36,590
一、二、三、四

156
00:07:36,590 --> 00:07:40,410
单击它，以实现完美的转换

157
00:07:40,410 --> 00:07:41,323
对于此卡

158
00:07:43,210 --> 00:07:45,093
现在让我们将其恢复为零

159
00:07:46,490 --> 00:07:47,340
在下节课中

160
00:07:47,340 --> 00:07:50,090
我想讲解如何建立选择状态

161
00:07:50,090 --> 00:07:54,040
这意味着我们将要转换每张卡

162
00:07:54,040 --> 00:07:55,810
使其变成全屏查看

163
00:07:55,810 --> 00:07:58,040
无需手动选择

164
00:07:58,040 --> 00:07:59,660
我们需要转换的卡

165
00:07:59,660 --> 00:08:01,270
我希望你对本节内容感兴趣

166
00:08:01,270 --> 00:08:03,103
我们下节课见

167
00:08:04,467 --> 00:08:05,300
designcode.io

