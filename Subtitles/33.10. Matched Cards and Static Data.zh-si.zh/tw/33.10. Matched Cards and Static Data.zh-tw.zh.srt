1
00:00:05,214 --> 00:00:10,140
SWIFT UI 2 - 將卡與靜態數據進行匹配
採用匹配幾何效果為多種元素做標簽

2
00:00:12,590 --> 00:00:16,230
- [Meng] 你好，歡迎來到我的第10節SwiftUI課程

3
00:00:16,230 --> 00:00:18,820
我們要開始處理靜態數據

4
00:00:18,820 --> 00:00:21,310
這意味著這些卡將變得更有趣

5
00:00:21,310 --> 00:00:22,820
我們將會創建更多的卡

6
00:00:22,820 --> 00:00:26,180
我們將為它們增添匹配幾何效果

7
00:00:26,180 --> 00:00:29,620
首先，我們將創建一個新的數據模型文件

8
00:00:29,620 --> 00:00:30,883
通過Command + N

9
00:00:31,760 --> 00:00:33,233
選擇SwiftUI視圖

10
00:00:34,270 --> 00:00:36,270
我們將其命名為 Course

11
00:00:36,270 --> 00:00:39,450
確保同時定位macOS和iOS

12
00:00:39,450 --> 00:00:40,950
這是由於數據應該

13
00:00:40,950 --> 00:00:43,120
在所有平臺上都保持一致

14
00:00:43,120 --> 00:00:46,980
我們在創建數據模型時，不需要 UI 元素

15
00:00:46,980 --> 00:00:49,410
我們要輸入struct

16
00:00:49,410 --> 00:00:50,243
Course

17
00:00:51,160 --> 00:00:54,970
鍵入 identifiable ，加花括號

18
00:00:54,970 --> 00:00:56,970
我們將從某個變量ID開始

19
00:00:56,970 --> 00:01:01,970
var id 等於 UUID，加括號

20
00:01:02,620 --> 00:01:05,410
這樣將自動生成一個獨特的ID

21
00:01:05,410 --> 00:01:07,440
用於每一項元素

22
00:01:07,440 --> 00:01:11,050
我們就可以用它來匹配幾何效果

23
00:01:11,050 --> 00:01:13,290
每個卡都將會有一個標題

24
00:01:13,290 --> 00:01:16,670
var title，在String下麵

25
00:01:16,670 --> 00:01:21,010
接下來是var subtitle，同樣在String下麵

26
00:01:21,010 --> 00:01:23,970
鍵入var image，在String字元串下麵

27
00:01:23,970 --> 00:01:27,860
最後是 var color，在Color之下

28
00:01:27,860 --> 00:01:30,060
現在我們將需要一些樣本數據

29
00:01:30,060 --> 00:01:34,538
var courses 等於array

30
00:01:34,538 --> 00:01:36,170
加方括號

31
00:01:36,170 --> 00:01:38,030
讓我們將其放在單獨的一行中

32
00:01:38,030 --> 00:01:42,760
在中間，我們輸入Course，加括號

33
00:01:42,760 --> 00:01:45,760
這可以檢測到數據模型

34
00:01:45,760 --> 00:01:48,380
我們可以選擇一個沒有ID的

35
00:01:48,380 --> 00:01:51,060
因為ID是自動生成的

36
00:01:51,060 --> 00:01:52,990
在此雙擊

37
00:01:52,990 --> 00:01:55,920
你可以根據數據類型填充數據

38
00:01:55,920 --> 00:02:00,660
字元串是引號，對於圖像也是如此

39
00:02:00,660 --> 00:02:03,288
至於顏色，我們將輸入Color

40
00:02:03,288 --> 00:02:04,121
括號

41
00:02:04,121 --> 00:02:06,310
color lit

42
00:02:06,310 --> 00:02:08,760
我們將使用colorLiteral，以便能夠

43
00:02:08,760 --> 00:02:12,110
很容易地改變顏色

44
00:02:12,110 --> 00:02:14,810
在這里我要粘貼大量數據

45
00:02:14,810 --> 00:02:17,030
因為要花很多時間

46
00:02:17,030 --> 00:02:19,190
如果手動輸入所有內容的話

47
00:02:19,190 --> 00:02:21,900
所以我要粘貼整個內容

48
00:02:21,900 --> 00:02:25,510
請隨意使用本節中的文字內容

49
00:02:25,510 --> 00:02:27,450
或使用你自己的數據

50
00:02:27,450 --> 00:02:30,520
只要符合數據模型要求即可

51
00:02:30,520 --> 00:02:33,300
你就可以看到每張卡都有一個標題

52
00:02:33,300 --> 00:02:38,060
然後是字幕、圖像名稱以及顏色

53
00:02:38,060 --> 00:02:40,743
讓我們保存並返回CoursesView

54
00:02:42,083 --> 00:02:44,500
我們這里有一張卡，然後是第二張卡

55
00:02:44,500 --> 00:02:46,070
它是手動輸入的

56
00:02:46,070 --> 00:02:48,203
第二張卡可以被刪除

57
00:02:49,150 --> 00:02:52,790
對於第一張卡，我們通過 Command + 單擊

58
00:02:52,790 --> 00:02:55,480
然後單擊重復

59
00:02:55,480 --> 00:02:58,780
通常它會重復多次

60
00:02:58,780 --> 00:03:00,970
它沒有任何數據

61
00:03:00,970 --> 00:03:03,480
相反，我們將使用數據模型

62
00:03:03,480 --> 00:03:06,770
從sample data ，Course

63
00:03:06,770 --> 00:03:10,890
這意味著該項適用於每張卡

64
00:03:10,890 --> 00:03:13,120
現在讓我們重新啟用它

65
00:03:13,120 --> 00:03:15,180
你可以看到我們遇到了一個問題

66
00:03:15,180 --> 00:03:19,370
因為每張卡都要被匹配為

67
00:03:19,370 --> 00:03:23,370
全屏顯示，因為它們都具有相同的ID

68
00:03:23,370 --> 00:03:26,698
因此，我們將替換這個ID

69
00:03:26,698 --> 00:03:30,243
通過手動輸入item.id

70
00:03:31,290 --> 00:03:35,130
因為在我們的數據模型中，我們擁有獨特的ID

71
00:03:35,130 --> 00:03:38,580
現在的問題是我們如何將此ID

72
00:03:38,580 --> 00:03:40,240
與全屏顯示卡進行匹配？

73
00:03:40,240 --> 00:03:41,830
因為如果你單擊它

74
00:03:41,830 --> 00:03:44,290
它沒有共用元素轉換

75
00:03:44,290 --> 00:03:46,790
現在，我們要手動去做

76
00:03:46,790 --> 00:03:49,960
這意味著，我們不會採用它

77
00:03:49,960 --> 00:03:52,540
因為它與item.id不匹配

78
00:03:52,540 --> 00:03:55,500
我們將從陣列課程中選取一個

79
00:03:55,500 --> 00:03:58,160
然後使用索引值

80
00:03:58,160 --> 00:04:01,100
我們要選用第一張卡

81
00:04:01,100 --> 00:04:02,821
輸入方括號

82
00:04:02,821 --> 00:04:03,654
零

83
00:04:03,654 --> 00:04:07,440
結尾處為.id

84
00:04:07,440 --> 00:04:10,010
這意味著全屏顯示卡

85
00:04:10,010 --> 00:04:12,510
將與第一張卡匹配

86
00:04:12,510 --> 00:04:15,420
因此，只有第一張卡會轉換

87
00:04:15,420 --> 00:04:19,680
如果我要設置，假設是2，意味著第三張卡

88
00:04:19,680 --> 00:04:23,030
那麼此卡將進行轉換

89
00:04:23,030 --> 00:04:24,180
太酷了

90
00:04:24,180 --> 00:04:26,580
現在暫時將其設置為零

91
00:04:26,580 --> 00:04:29,800
然後將數據傳遞給每張卡

92
00:04:29,800 --> 00:04:34,110
我們通過Command+單擊CourseItem，跳到定義

93
00:04:34,110 --> 00:04:36,000
所以我們要確保

94
00:04:36,000 --> 00:04:39,630
在CourseItem部分的數據將是可定製的

95
00:04:39,630 --> 00:04:42,080
在body之前

96
00:04:42,080 --> 00:04:44,479
我們要設置 var course

97
00:04:44,479 --> 00:04:45,971
在course類別下麵

98
00:04:45,971 --> 00:04:47,610
這是數據模型

99
00:04:47,610 --> 00:04:50,240
我們將有一些默認值

100
00:04:50,240 --> 00:04:54,214
課程部分使用索引值，加方括號

101
00:04:54,214 --> 00:04:55,250
零

102
00:04:55,250 --> 00:04:58,770
現在我們要將每個硬編碼的值

103
00:04:58,770 --> 00:04:59,610
替換為數據

104
00:04:59,610 --> 00:05:04,010
採用course.image，用於圖像

105
00:05:04,010 --> 00:05:08,550
然後第一個文本將是course.title

106
00:05:08,550 --> 00:05:12,728
第二個文本是 course.subtitle

107
00:05:12,728 --> 00:05:15,570
背景色使用color.blue

108
00:05:15,570 --> 00:05:19,290
將其替換為course.color

109
00:05:19,290 --> 00:05:20,400
我們在此還可以

110
00:05:20,400 --> 00:05:22,990
讓cornerRadius 和陰影

111
00:05:22,990 --> 00:05:24,240
有更多的變化

112
00:05:24,240 --> 00:05:27,400
對於cornerRadius，我將使用光滑的角

113
00:05:27,400 --> 00:05:30,050
你在iOS上看到了很多這樣的應用

114
00:05:30,050 --> 00:05:32,980
讓我們選擇整個.cornerRadius

115
00:05:32,980 --> 00:05:34,713
然後將其替換為.clipShape

116
00:05:37,290 --> 00:05:39,868
在當中，輸入RoundedRectangle

117
00:05:39,868 --> 00:05:41,234
括號

118
00:05:41,234 --> 00:05:43,070
選擇第一個選項

119
00:05:43,070 --> 00:05:45,500
它會顯示 radiusRadius

120
00:05:45,500 --> 00:05:50,460
我們將它設置為22，然後是style.continuous

121
00:05:50,460 --> 00:05:51,293
如果你重新啟用它

122
00:05:51,293 --> 00:05:52,750
你會看到其中的數據

123
00:05:52,750 --> 00:05:55,180
已替換為你的數據

124
00:05:55,180 --> 00:05:59,260
cornerRadius變成了平滑的角

125
00:05:59,260 --> 00:06:01,860
最後，我們將自定義陰影

126
00:06:01,860 --> 00:06:04,370
在半徑之前

127
00:06:04,370 --> 00:06:07,553
我們要先設置空間，然後設置顏色

128
00:06:07,553 --> 00:06:09,194
冒號

129
00:06:09,194 --> 00:06:11,940
course.color

130
00:06:11,940 --> 00:06:15,516
對於該顏色，我們將使用.opacity

131
00:06:15,516 --> 00:06:16,520
括號

132
00:06:16,520 --> 00:06:17,886
將其設置為0.3

133
00:06:18,780 --> 00:06:22,620
在括號後加一個逗號

134
00:06:22,620 --> 00:06:25,300
對於半徑，我將其設置為20

135
00:06:25,300 --> 00:06:29,120
將X位置設為0

136
00:06:29,120 --> 00:06:32,510
將Y位置設為10

137
00:06:32,510 --> 00:06:35,250
太好了，所以現在我有了背景下拉陰影

138
00:06:35,250 --> 00:06:40,250
即使用不透明度為30％的背景色

139
00:06:41,546 --> 00:06:43,550
現在我可以回到CoursesView

140
00:06:43,550 --> 00:06:46,630
然後我要設置CourseItem組件

141
00:06:46,630 --> 00:06:51,630
在括號的中間輸入 course:item

142
00:06:52,860 --> 00:06:57,060
這是從ForEach 環路中得到的

143
00:06:57,060 --> 00:06:59,790
使用我的array call courses

144
00:06:59,790 --> 00:07:01,453
對於全屏顯示

145
00:07:02,540 --> 00:07:05,707
在表示 CourseItem 的括號內

146
00:07:05,707 --> 00:07:09,920
輸入course:courses，後者即課程組

147
00:07:09,920 --> 00:07:11,100
加方括號

148
00:07:11,100 --> 00:07:14,630
我現在僅針對第一張卡

149
00:07:14,630 --> 00:07:18,430
現在，你可以看到數據正在被填充

150
00:07:18,430 --> 00:07:23,430
包括標題，副標題，插圖和顏色

151
00:07:23,560 --> 00:07:25,100
最重要的是

152
00:07:25,100 --> 00:07:27,560
轉換也將起作用

153
00:07:27,560 --> 00:07:29,540
如果你更改索引值

154
00:07:29,540 --> 00:07:33,410
例如設為3，它指的是第四張卡

155
00:07:33,410 --> 00:07:36,590
一、二、三、四

156
00:07:36,590 --> 00:07:40,410
單擊它，以實現完美的轉換

157
00:07:40,410 --> 00:07:41,323
對於此卡

158
00:07:43,210 --> 00:07:45,093
現在讓我們將其恢復為零

159
00:07:46,490 --> 00:07:47,340
在下節課中

160
00:07:47,340 --> 00:07:50,090
我想講解如何建立選擇狀態

161
00:07:50,090 --> 00:07:54,040
這意味著我們將要轉換每張卡

162
00:07:54,040 --> 00:07:55,810
使其變成全屏查看

163
00:07:55,810 --> 00:07:58,040
無需手動選擇

164
00:07:58,040 --> 00:07:59,660
我們需要轉換的卡

165
00:07:59,660 --> 00:08:01,270
我希望你對本節內容感興趣

166
00:08:01,270 --> 00:08:03,103
我們下節課見

167
00:08:04,467 --> 00:08:05,300
designcode.io

