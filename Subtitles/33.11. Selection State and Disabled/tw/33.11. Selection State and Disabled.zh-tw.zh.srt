1
00:00:05,856 --> 00:00:10,856
選擇狀態和禁用
如何用可變的狀態創建獨特的卡片動畫

2
00:00:12,670 --> 00:00:14,830
[講師]大家好 歡迎收看我的

3
00:00:14,830 --> 00:00:16,510
SwiftUI第11課

4
00:00:16,510 --> 00:00:17,510
在這節課上

5
00:00:17,510 --> 00:00:20,470
我們將學習如何將轉換

6
00:00:20,470 --> 00:00:22,890
分別應用於每一張卡

7
00:00:22,890 --> 00:00:26,600
在開始之前 我想先在這里組織一下我的數據模型

8
00:00:26,600 --> 00:00:30,080
之前 我們給我們的數據創建了Course.swift

9
00:00:30,080 --> 00:00:32,390
所以我們要右鍵點擊那個文件

10
00:00:32,390 --> 00:00:35,309
然後選擇"從選擇中建立新組"

11
00:00:35,309 --> 00:00:38,153
我們要把這個命名為Model

12
00:00:39,090 --> 00:00:43,510
我要把它拖到"導航"後面

13
00:00:43,510 --> 00:00:46,423
但千萬不能在導航裡面

14
00:00:47,820 --> 00:00:50,851
之後 我們回到"課程視圖"

15
00:00:50,851 --> 00:00:53,620
那麼 我們要給全屏設置的

16
00:00:53,620 --> 00:00:56,810
不是使用布爾值顯示

17
00:00:56,810 --> 00:01:00,980
只要看看有沒有被選中的項

18
00:01:00,980 --> 00:01:04,010
要做到這一點 我們必須創建一個新的狀態

19
00:01:04,010 --> 00:01:09,010
輸入 state var selectedItem 類型是Course

20
00:01:11,590 --> 00:01:16,020
默認情況下 我們要設置為空 也就是nil

21
00:01:16,020 --> 00:01:18,860
像這樣 如果沒有選中的項

22
00:01:18,860 --> 00:01:21,610
就無法顯示全屏

23
00:01:21,610 --> 00:01:24,010
現在 Swift有一個叫作"可選"的功能

24
00:01:24,010 --> 00:01:26,640
可選的意思是 如果可能

25
00:01:26,640 --> 00:01:28,220
沒有值的話

26
00:01:28,220 --> 00:01:32,220
那麼數據就需要一個問號來表示可選

27
00:01:32,220 --> 00:01:33,440
所以多虧了這個功能

28
00:01:33,440 --> 00:01:36,390
我們可以去if show語句

29
00:01:36,390 --> 00:01:38,320
它現在使用的是布爾值

30
00:01:38,320 --> 00:01:39,920
相反 我們要問

31
00:01:39,920 --> 00:01:44,920
如果所選項不是nil 就說明它不是空的

32
00:01:45,740 --> 00:01:49,080
我們知道 默認情況下 它應該是空的

33
00:01:49,080 --> 00:01:52,700
也就是說 它不會顯示全屏

34
00:01:52,700 --> 00:01:54,750
現在它不會做任何事

35
00:01:54,750 --> 00:01:56,580
因為當我們點擊卡片時

36
00:01:56,580 --> 00:01:59,990
只是在切換顯示狀態

37
00:01:59,990 --> 00:02:04,000
如果我們去到最後的"點擊手勢"

38
00:02:04,000 --> 00:02:06,860
你可以看到我們正在切換顯示狀態

39
00:02:06,860 --> 00:02:08,480
現在 除此之外

40
00:02:08,480 --> 00:02:12,050
我們還應該將所選項改為

41
00:02:12,050 --> 00:02:13,580
被點擊的那個

42
00:02:13,580 --> 00:02:15,920
但現在因為我們不在循環指令內

43
00:02:15,920 --> 00:02:18,540
所以我們不知道哪個被點擊了

44
00:02:18,540 --> 00:02:19,610
那麼 我們在這里要做的

45
00:02:19,610 --> 00:02:23,420
是選中onTapGesture的修飾

46
00:02:23,420 --> 00:02:28,200
選中所有這些修飾 剪切

47
00:02:28,200 --> 00:02:31,600
然後把它放到第一個CourseItem里

48
00:02:31,600 --> 00:02:33,460
就在frame後面

49
00:02:33,460 --> 00:02:35,800
因為有了這個 所以每一張卡片

50
00:02:35,800 --> 00:02:37,990
都會有一個標簽手勢

51
00:02:37,990 --> 00:02:42,360
現在 就在show.toggle 後面

52
00:02:42,360 --> 00:02:47,360
我們要設置所選項等於項

53
00:02:47,470 --> 00:02:49,960
項 表示我們要從Course隊列

54
00:02:49,960 --> 00:02:52,800
得到的具體數據

55
00:02:52,800 --> 00:02:55,060
現在對於所選項

56
00:02:55,060 --> 00:02:58,520
我們要用從所選項中獲得的值

57
00:02:58,520 --> 00:02:59,967
來替換

58
00:02:59,967 --> 00:03:02,040
手動輸入的那個

59
00:03:02,040 --> 00:03:03,283
輸入所選項

60
00:03:04,580 --> 00:03:05,740
這里我們出現了一個錯誤

61
00:03:05,740 --> 00:03:08,400
因為我們要傳遞到組件的值

62
00:03:08,400 --> 00:03:10,950
不能為空

63
00:03:10,950 --> 00:03:13,490
所以 我們需要加一個感嘆號

64
00:03:13,490 --> 00:03:17,490
來表示我們肯定知道所選項

65
00:03:17,490 --> 00:03:19,370
不會是空的 否則

66
00:03:19,370 --> 00:03:23,440
它一開始就不會通過這個條件

67
00:03:23,440 --> 00:03:24,790
然後我們也要這樣

68
00:03:24,790 --> 00:03:27,560
匹配對稱效果ID

69
00:03:27,560 --> 00:03:30,900
輸入所選項 感嘆號

70
00:03:30,900 --> 00:03:31,733
就行了

71
00:03:31,733 --> 00:03:34,570
現在 我們可以點擊這些卡片中的任何一張

72
00:03:34,570 --> 00:03:36,260
來進入全屏模式

73
00:03:36,260 --> 00:03:39,280
但現在我們只有進入全屏的

74
00:03:39,280 --> 00:03:40,890
點擊手勢

75
00:03:40,890 --> 00:03:44,000
我們還需要一個返回的點擊手勢

76
00:03:44,000 --> 00:03:48,040
否則 我們就無法點擊返回卡片了

77
00:03:48,040 --> 00:03:52,107
那麼 我們來選中onTopGesture的所有修飾

78
00:03:53,940 --> 00:03:57,260
然後點擊"Command+C"來復制它

79
00:03:57,260 --> 00:03:59,660
然後我們前往第二個CourseItem

80
00:03:59,660 --> 00:04:01,110
就在frame後面

81
00:04:01,110 --> 00:04:03,880
然後粘貼onTapGesture

82
00:04:03,880 --> 00:04:08,310
對於所選項 我們需要將其恢復為nil

83
00:04:08,310 --> 00:04:10,330
我們來測試一下我們的用戶界面

84
00:04:10,330 --> 00:04:13,550
在這里你可以看到它的效果很好

85
00:04:13,550 --> 00:04:16,600
所選項技術的唯一問題就是

86
00:04:16,600 --> 00:04:19,645
如果你在卡片間切換得太快

87
00:04:19,645 --> 00:04:21,810
動畫效果就會不好

88
00:04:21,810 --> 00:04:24,360
這是因為所選項

89
00:04:24,360 --> 00:04:28,110
在動畫結束前正在變化

90
00:04:28,110 --> 00:04:32,030
所以 雖然這個所選項技術雖然很簡單

91
00:04:32,030 --> 00:04:36,350
但我們還是需要確保在轉出中

92
00:04:36,350 --> 00:04:38,560
我們會無法在完成動畫之前

93
00:04:38,560 --> 00:04:41,920
馬上選擇到下一個項

94
00:04:41,920 --> 00:04:43,360
轉入

95
00:04:43,360 --> 00:04:47,380
是沒問題的 因為它仍然專註於一張卡片

96
00:04:47,380 --> 00:04:50,880
那麼 我們來處理一下轉出

97
00:04:50,880 --> 00:04:54,310
我們要在上面創建一個新狀態 輸入

98
00:04:54,310 --> 00:04:58,617
State var 這將是一個布爾值 輸入isDisabled

99
00:05:00,200 --> 00:05:02,440
默認情況下等於false

100
00:05:02,440 --> 00:05:04,090
那麼 我們要做的是

101
00:05:04,090 --> 00:05:05,870
在動畫正在轉出時

102
00:05:05,870 --> 00:05:09,490
禁用這些卡片

103
00:05:09,490 --> 00:05:12,600
我們在設置狀態後單擊恢復

104
00:05:12,600 --> 00:05:15,240
然後在OntapGesture中

105
00:05:15,240 --> 00:05:18,130
我們要把isDisable設為true

106
00:05:18,130 --> 00:05:21,570
意味著我們可以禁用這些卡片

107
00:05:21,570 --> 00:05:23,313
所以 通過這個狀態

108
00:05:23,313 --> 00:05:26,943
我們可以為CourseItem添加一個新的修飾

109
00:05:26,943 --> 00:05:31,943
就在OnTapGeasure設置為disabled之後

110
00:05:32,610 --> 00:05:33,970
這是一個布爾值

111
00:05:33,970 --> 00:05:36,560
也就是說我們可以使用我們的狀態

112
00:05:36,560 --> 00:05:38,900
輸入isDisabled 行了

113
00:05:38,900 --> 00:05:41,710
那麼應該發生的是 當我們點擊一張卡片時

114
00:05:41,710 --> 00:05:43,143
它會出現動畫

115
00:05:43,143 --> 00:05:45,820
然後就沒有了

116
00:05:45,820 --> 00:05:49,200
因為此時 一切都被禁用了

117
00:05:49,200 --> 00:05:52,710
我們只需要在適當的時候重新啟用它們

118
00:05:52,710 --> 00:05:57,190
那麼 我們來向下滾動並找到onTapGesture

119
00:05:57,190 --> 00:06:01,590
在選定項目後 我們將設置為isDisable

120
00:06:01,590 --> 00:06:03,840
等於false

121
00:06:03,840 --> 00:06:06,340
但你會註意到卡片動得太快

122
00:06:06,340 --> 00:06:08,840
這不能解決我們的問題

123
00:06:08,840 --> 00:06:11,470
現在 我們能做的就是添加延遲

124
00:06:11,470 --> 00:06:16,470
我們設置為dispatchQueue.main.asyncAfter.

125
00:06:19,970 --> 00:06:22,300
現在我們要設定時間

126
00:06:22,300 --> 00:06:27,300
現在是.now 也就是現在加上0.3秒

127
00:06:27,620 --> 00:06:29,570
所以 這個代碼有點復雜

128
00:06:29,570 --> 00:06:33,290
但這說明我們要等0.3秒

129
00:06:33,290 --> 00:06:35,280
才能開始運行代碼

130
00:06:35,280 --> 00:06:39,260
我們轉到下一個值並按Enter鍵

131
00:06:39,260 --> 00:06:43,510
我們可以在這里設置isDisabled等於false

132
00:06:43,510 --> 00:06:47,044
我要把那個剪切粘貼在這里

133
00:06:47,044 --> 00:06:50,690
現在 應該發生的是 當我點擊這里時

134
00:06:50,690 --> 00:06:52,580
卡片是禁用的

135
00:06:52,580 --> 00:06:54,570
當我點擊返回卡片時

136
00:06:54,570 --> 00:06:59,070
它仍是禁用的 但只有0.3秒

137
00:06:59,070 --> 00:07:03,210
同樣 這取決於動畫的時間

138
00:07:03,210 --> 00:07:06,360
我經過大量的測試和點擊後

139
00:07:06,360 --> 00:07:09,690
發現0.5秒效果最好

140
00:07:09,690 --> 00:07:12,593
這樣我們就不會再破壞用戶界面了

141
00:07:14,940 --> 00:07:17,280
好了 這就是我今天想給你們演示的

142
00:07:17,280 --> 00:07:18,160
在下一節課上

143
00:07:18,160 --> 00:07:21,320
我們將研究新的Lazy Grid

144
00:07:21,320 --> 00:07:23,810
我們要讓我們的佈局更酷

145
00:07:23,810 --> 00:07:25,430
更具適應性

146
00:07:25,430 --> 00:07:28,030
同時仍然使用相同的轉換

147
00:07:28,030 --> 00:07:29,090
所以我很想

148
00:07:29,090 --> 00:07:31,540
在下一節課上給你們演示Lazy Grid

149
00:07:31,540 --> 00:07:32,470
到時候見
