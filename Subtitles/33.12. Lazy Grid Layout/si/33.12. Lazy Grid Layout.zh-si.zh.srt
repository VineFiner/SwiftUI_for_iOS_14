1
00:00:08,287 --> 00:00:10,870
惰性网格布局 使用具有自适应，固定和重复列和行的创造iOS 14网格布局

2
00:00:12,570 --> 00:00:14,590
- [明] 您好，欢迎回到我的SwiftUI课程

3
00:00:14,590 --> 00:00:16,350
第12节

4
00:00:16,350 --> 00:00:19,380
今天我们将介绍今年的SwiftUI。

5
00:00:19,380 --> 00:00:20,970
最激动人心的更新之一

6
00:00:20,970 --> 00:00:24,470
SwiftUI的惰性网格非常全面。

7
00:00:24,470 --> 00:00:28,040
它将允许您将布局调整为适合任何设备。

8
00:00:28,040 --> 00:00:29,470
我们有很多选择，

9
00:00:29,470 --> 00:00:32,790
例如自适应，固定，重复的列和行，

10
00:00:32,790 --> 00:00:35,560
今天我们将探索所有这些东西。

11
00:00:35,560 --> 00:00:38,940
因此，最好的学习方法就是示范。

12
00:00:38,940 --> 00:00:43,290
您需要做的就是将V堆栈更改为惰性网格。

13
00:00:43,290 --> 00:00:47,230
因此，让我选择包括括号在内的V堆栈，

14
00:00:47,230 --> 00:00:52,010
然后我们将输入惰性V网格括号。

15
00:00:52,010 --> 00:00:53,810
因此，由于我们使用的是V格，

16
00:00:53,810 --> 00:00:56,550
我们将需要指定列。

17
00:00:56,550 --> 00:01:01,550
列是网格项 括号的数组。

18
00:01:01,940 --> 00:01:04,220
现在，什么都没有改变。

19
00:01:04,220 --> 00:01:08,310
那是因为我们手动设置卡的大小

20
00:01:08,310 --> 00:01:12,310
到335和250的高度。

21
00:01:12,310 --> 00:01:14,133
让我们删除宽度。

22
00:01:15,010 --> 00:01:16,400
然后你会看到

23
00:01:16,400 --> 00:01:18,750
它只会占用

24
00:01:18,750 --> 00:01:20,110
可用的整个宽度

25
00:01:20,110 --> 00:01:23,300
因此，如果您想在行之间添加间距，

26
00:01:23,300 --> 00:01:26,170
我们将在列之后设置一个权重，

27
00:01:26,170 --> 00:01:28,270
在方括号之后

28
00:01:28,270 --> 00:01:33,050
逗号，间距，我们将其设置为16。

29
00:01:33,050 --> 00:01:36,270
那么边界的填充呢？

30
00:01:36,270 --> 00:01:39,510
好吧，我们可以设置惰性v网格

31
00:01:39,510 --> 00:01:42,140
所以双击花括号，

32
00:01:42,140 --> 00:01:44,820
在这里，您会在框架之前找到，

33
00:01:44,820 --> 00:01:48,320
我们将设置填充括号，

34
00:01:48,320 --> 00:01:50,220
我们可以放16。

35
00:01:50,220 --> 00:01:52,620
如果您想将其设置为两列，

36
00:01:52,620 --> 00:01:56,210
在这里，因为我们在数组内部，

37
00:01:56,210 --> 00:01:57,830
我们可以有更多的网格项目，

38
00:01:57,830 --> 00:02:00,650
这样我们就可以复制网格项括号，

39
00:02:00,650 --> 00:02:03,930
添加一个逗号，并添加另一个网格项。

40
00:02:03,930 --> 00:02:07,190
现在，我们有两列，您可以添加更多，

41
00:02:07,190 --> 00:02:11,860
并且只要您的布局可以容纳就可以添加更多。

42
00:02:11,860 --> 00:02:13,650
但这不是最有效的方法。

43
00:02:13,650 --> 00:02:17,920
如果我们可以根据大小设法

44
00:02:17,920 --> 00:02:19,510
使其完全适应呢

45
00:02:19,510 --> 00:02:22,890
又不必重复网格项多次呢？

46
00:02:22,890 --> 00:02:26,110
所以 让我们删除最后三个网格项

47
00:02:26,110 --> 00:02:29,080
只专注于一个。

48
00:02:29,080 --> 00:02:31,590
让我们进入括号内

49
00:02:31,590 --> 00:02:36,590
的括号内，

50
00:02:36,660 --> 00:02:40,060
最小列，

51
00:02:40,060 --> 00:02:42,490
我们将其设置为160。

52
00:02:42,490 --> 00:02:44,970
这样做是要尝试

53
00:02:44,970 --> 00:02:47,730
以适合尽可能多的列

54
00:02:47,730 --> 00:02:52,120
只要列的最小宽度为160。

55
00:02:52,120 --> 00:02:54,690
如果我们要设定200

56
00:02:54,690 --> 00:02:57,390
它只能容纳一列，

57
00:02:57,390 --> 00:03:01,480
但是如果是100，则可以容纳三个。

58
00:03:01,480 --> 00:03:03,340
这对于自适应布局非常有用

59
00:03:03,340 --> 00:03:08,060
因为这取决于屏幕的尺寸，

60
00:03:08,060 --> 00:03:11,030
而且我们不需要手动设置多少列，

61
00:03:11,030 --> 00:03:13,330
它只是要根据我们的要求为我们提供的列数

62
00:03:13,330 --> 00:03:17,430
自动设置。

63
00:03:17,430 --> 00:03:20,430
让我回到160。

64
00:03:20,430 --> 00:03:24,910
然后在第一个括号之后，逗号，

65
00:03:24,910 --> 00:03:29,100
我要设置间距为16

66
00:03:29,100 --> 00:03:32,990
因此，这是列之间的间隙值。

67
00:03:32,990 --> 00:03:37,140
接下来，如果我们将高度设置为200，

68
00:03:37,140 --> 00:03:39,650
让我们看看动画是否仍然有效。

69
00:03:39,650 --> 00:03:41,260
是的，确实如此。

70
00:03:41,260 --> 00:03:45,120
不管有多少列，

71
00:03:45,120 --> 00:03:46,610
一切正常 大小是多少。

72
00:03:46,610 --> 00:03:49,190
为什么不在iPad上测试它呢？

73
00:03:49,190 --> 00:03:54,190
因此，让我们转到设备并在11英寸iPad Pro上进行选择。

74
00:03:54,740 --> 00:03:56,753
让我缩小一点，

75
00:03:57,960 --> 00:03:59,410
并最大化这一点。

76
00:03:59,410 --> 00:04:00,970
现在您可以在iPad上看到这一点，

77
00:04:00,970 --> 00:04:04,050
我们有一个更大的屏幕和四列，

78
00:04:04,050 --> 00:04:05,530
而且我们没有任何改变

79
00:04:05,530 --> 00:04:07,450
因为有了适应性

80
00:04:07,450 --> 00:04:11,460
它将尝试尽可能多地容纳卡片

81
00:04:11,460 --> 00:04:14,850
最小宽度为160。

82
00:04:14,850 --> 00:04:16,780
好吧，让我格式化一下代码

83
00:04:16,780 --> 00:04:20,370
使其更具可读性，因此我们可以探索更多选择。

84
00:04:20,370 --> 00:04:23,080
所以我要把列放在自己的行上

85
00:04:23,080 --> 00:04:24,830
间距相同。

86
00:04:24,830 --> 00:04:28,450
在括号结束之前，

87
00:04:28,450 --> 00:04:30,840
我将其设置为新行。

88
00:04:30,840 --> 00:04:33,070
对于列，这是一个数组，

89
00:04:33,070 --> 00:04:37,060
因此我们实际上也可以将其放在单独的行中。

90
00:04:37,060 --> 00:04:40,010
接下来，如果我们要固定列怎么办？

91
00:04:40,010 --> 00:04:44,530
我们只用固定替换自适应。

92
00:04:44,530 --> 00:04:48,660
这是我们可以设定的位置，例如250

93
00:04:48,660 --> 00:04:51,250
现在您可以看到只有一列

94
00:04:51,250 --> 00:04:52,870
因为它没有适应性。

95
00:04:52,870 --> 00:04:54,330
如果您想拥有更多列，

96
00:04:54,330 --> 00:04:56,180
我们将添加一个逗号。

97
00:04:56,180 --> 00:04:59,833
我们将复制并粘贴更多列。

98
00:05:01,110 --> 00:05:03,930
并且对于每一列，您可以自定义数字。

99
00:05:03,930 --> 00:05:07,060
例如，第二个，第三个和第四个

100
00:05:07,060 --> 00:05:11,030
为160。

101
00:05:11,030 --> 00:05:12,960
所以你真的可以自定义

102
00:05:12,960 --> 00:05:16,210
每列的宽度分别。

103
00:05:16,210 --> 00:05:19,170
此外，您可以在特定列之间

104
00:05:19,170 --> 00:05:21,210
自定义间距

105
00:05:21,210 --> 00:05:24,290
例如，第一个，我想要10，

106
00:05:24,290 --> 00:05:26,380
第二个，我一个0。

107
00:05:26,380 --> 00:05:30,360
现在，您可以看到第一张卡为10

108
00:05:30,360 --> 00:05:32,670
第二张卡为零之后的间隙。

109
00:05:32,670 --> 00:05:35,940
所以，如果您想摆一张桌子，这很好。

110
00:05:35,940 --> 00:05:39,470
或非常自定义的布局，也不必是卡片。

111
00:05:39,470 --> 00:05:41,300
接下来，我想告诉你另一种技巧

112
00:05:41,300 --> 00:05:43,430
我发现也很有用。

113
00:05:43,430 --> 00:05:45,580
所以对于列

114
00:05:45,580 --> 00:05:48,030
我要更换方括号

115
00:05:48,030 --> 00:05:53,030
以及内容的数组括号，请重复输入。

116
00:05:54,590 --> 00:05:58,220
我们可以使用自动完成功能进行重复。

117
00:05:58,220 --> 00:06:01,150
我们将设置点初始化，括号，

118
00:06:01,150 --> 00:06:06,150
在括号内，圆点可弯曲，括号内。

119
00:06:06,510 --> 00:06:08,360
对于计数，这是列数。

120
00:06:08,360 --> 00:06:11,750
例如，我们可以将其设置为两个或三个

121
00:06:11,750 --> 00:06:14,840
并会自动设置这些列。

122
00:06:14,840 --> 00:06:16,330
如果您想设置间距，

123
00:06:16,330 --> 00:06:21,330
在右括号，逗号，空格，16后移到右边。

124
00:06:22,360 --> 00:06:27,133
将固定宽度设置为200也很有用，

125
00:06:28,310 --> 00:06:31,350
你会看到它会居中

126
00:06:31,350 --> 00:06:34,910
在列的灵活宽度内。

127
00:06:34,910 --> 00:06:36,700
好的，我最后要向您展示的

128
00:06:36,700 --> 00:06:39,670
是如何设置水平网格。

129
00:06:39,670 --> 00:06:43,077
因此，我们将设置惰性H网格而不是惰性V网格。

130
00:06:44,020 --> 00:06:46,993
我们将放置行而不是列。

131
00:06:48,330 --> 00:06:50,120
如果您要使用H网格，

132
00:06:50,120 --> 00:06:51,840
您可能应该设置滚动视图

133
00:06:51,840 --> 00:06:54,583
是括号内的点是水平的。

134
00:06:56,440 --> 00:07:00,780
现在，H网格将尝试调整卡的大小

135
00:07:00,780 --> 00:07:03,460
是基于高度而不是宽度。

136
00:07:03,460 --> 00:07:06,613
您可能不想设置固定的高度。

137
00:07:07,710 --> 00:07:11,540
我们还可以设置两行而不是三行，

138
00:07:11,540 --> 00:07:14,260
您现在可以看到布局

139
00:07:14,260 --> 00:07:16,210
是可水平滚动。

140
00:07:16,210 --> 00:07:17,880
另一件事要注意的是

141
00:07:17,880 --> 00:07:19,970
当您进入全屏模式时

142
00:07:19,970 --> 00:07:22,120
您将不得不处理一个安全区域。

143
00:07:23,080 --> 00:07:25,600
因此，您可能需要将滚动视图设置

144
00:07:25,600 --> 00:07:29,980
为点边缘忽略安全区域 标记为全部。

145
00:07:29,980 --> 00:07:33,590
这样，动画就可以正常工作了。

146
00:07:33,590 --> 00:07:36,710
好吧，让我们放置网格项数组

147
00:07:36,710 --> 00:07:38,770
回到适应性。

148
00:07:38,770 --> 00:07:43,183
让我删除数组括号，改为方括号，

149
00:07:44,040 --> 00:07:48,670
网格项，圆括号自适应

150
00:07:48,670 --> 00:07:53,670
括号，最小值，我将其设置为160。

151
00:07:53,710 --> 00:07:55,150
然后在括号后，

152
00:07:55,150 --> 00:07:59,430
将行之间的间距设置为16。

153
00:07:59,430 --> 00:08:01,930
请注意，当您使用H网格时，

154
00:08:01,930 --> 00:08:04,180
是从上到下排序。

155
00:08:04,180 --> 00:08:08,380
当我们使用V网格时，是从左到右。

156
00:08:08,380 --> 00:08:12,030
好的，让我们在iPhone上进行测试。

157
00:08:12,030 --> 00:08:14,110
我是iPhone 11 Pro。

158
00:08:14,110 --> 00:08:17,730
现在您可以看到布局可以水平滚动

159
00:08:17,730 --> 00:08:20,340
并且动画仍然有效。

160
00:08:20,340 --> 00:08:23,060
好吧，让我将其放回V网格

161
00:08:23,060 --> 00:08:25,840
并将其更改回列，

162
00:08:25,840 --> 00:08:28,580
删除水平滚动视图。

163
00:08:28,580 --> 00:08:30,770
只需删除括号，

164
00:08:30,770 --> 00:08:35,010
而且我们也不需要边缘忽略安全区域

165
00:08:35,010 --> 00:08:39,800
现在，我将框架高度设为200。

166
00:08:39,800 --> 00:08:41,890
这就是关于惰性网格的问题。

167
00:08:41,890 --> 00:08:44,920
它是真正的自适应功能，而且功能强大。

168
00:08:44,920 --> 00:08:46,690
我想你会很以创建基于网格的布局

169
00:08:46,690 --> 00:08:49,560
而感到有趣。

170
00:08:49,560 --> 00:08:50,970
所以在下一个章节中，

171
00:08:50,970 --> 00:08:53,900
我想解决这个Z索引问题。

172
00:08:53,900 --> 00:08:55,560
我也想告诉你

173
00:08:55,560 --> 00:08:59,200
如何创建基于容器的过渡

174
00:08:59,200 --> 00:09:02,950
并使用多个匹配的对称效果ID。

175
00:09:02,950 --> 00:09:04,990
而且我认为它看起来会

176
00:09:04,990 --> 00:09:06,330
比我们现在拥有的更酷。

177
00:09:06,330 --> 00:09:08,193
因此，我将在下一章节上见。

