- 惰性网格布局 使用具有自适应，固定和重复列和行的创造iOS 14网格布局

- [明] 您好，欢迎回到我的SwiftUI课程 第12节 今天我们将介绍今年的SwiftUI。 最激动人心的更新之一 SwiftUI的惰性网格非常全面。 它将允许您将布局调整为适合任何设备。 我们有很多选择， 例如自适应，固定，重复的列和行， 今天我们将探索所有这些东西。 因此，最好的学习方法就是示范。 您需要做的就是将V堆栈更改为惰性网格。 因此，让我选择包括括号在内的V堆栈， 然后我们将输入惰性V网格括号。 因此，由于我们使用的是V格， 我们将需要指定列。 列是网格项 括号的数组。 现在，什么都没有改变。 那是因为我们手动设置卡的大小 到335和250的高度。 让我们删除宽度。 然后你会看到 它只会占用 可用的整个宽度 因此，如果您想在行之间添加间距， 我们将在列之后设置一个权重， 在方括号之后 逗号，间距，我们将其设置为16。 那么边界的填充呢？ 好吧，我们可以设置惰性v网格 所以双击花括号， 在这里，您会在框架之前找到， 我们将设置填充括号， 我们可以放16。 如果您想将其设置为两列， 在这里，因为我们在数组内部， 我们可以有更多的网格项目， 这样我们就可以复制网格项括号， 添加一个逗号，并添加另一个网格项。 现在，我们有两列，您可以添加更多， 并且只要您的布局可以容纳就可以添加更多。 但这不是最有效的方法。 如果我们可以根据大小设法 使其完全适应呢 又不必重复网格项多次呢？ 所以 让我们删除最后三个网格项 只专注于一个。 让我们进入括号内 的括号内， 最小列， 我们将其设置为160。 这样做是要尝试 以适合尽可能多的列 只要列的最小宽度为160。 如果我们要设定200 它只能容纳一列， 但是如果是100，则可以容纳三个。 这对于自适应布局非常有用 因为这取决于屏幕的尺寸， 而且我们不需要手动设置多少列， 它只是要根据我们的要求为我们提供的列数 自动设置。 让我回到160。 然后在第一个括号之后，逗号， 我要设置间距为16 因此，这是列之间的间隙值。 接下来，如果我们将高度设置为200， 让我们看看动画是否仍然有效。 是的，确实如此。 不管有多少列， 一切正常 大小是多少。 为什么不在iPad上测试它呢？ 因此，让我们转到设备并在11英寸iPad Pro上进行选择。 让我缩小一点， 并最大化这一点。 现在您可以在iPad上看到这一点， 我们有一个更大的屏幕和四列， 而且我们没有任何改变 因为有了适应性 它将尝试尽可能多地容纳卡片 最小宽度为160。 好吧，让我格式化一下代码 使其更具可读性，因此我们可以探索更多选择。 所以我要把列放在自己的行上 间距相同。 在括号结束之前， 我将其设置为新行。 对于列，这是一个数组， 因此我们实际上也可以将其放在单独的行中。 接下来，如果我们要固定列怎么办？ 我们只用固定替换自适应。 这是我们可以设定的位置，例如250 现在您可以看到只有一列 因为它没有适应性。 如果您想拥有更多列， 我们将添加一个逗号。 我们将复制并粘贴更多列。 并且对于每一列，您可以自定义数字。 例如，第二个，第三个和第四个 为160。 所以你真的可以自定义 每列的宽度分别。 此外，您可以在特定列之间 自定义间距 例如，第一个，我想要10， 第二个，我一个0。 现在，您可以看到第一张卡为10 第二张卡为零之后的间隙。 所以，如果您想摆一张桌子，这很好。 或非常自定义的布局，也不必是卡片。 接下来，我想告诉你另一种技巧 我发现也很有用。 所以对于列 我要更换方括号 以及内容的数组括号，请重复输入。 我们可以使用自动完成功能进行重复。 我们将设置点初始化，括号， 在括号内，圆点可弯曲，括号内。 对于计数，这是列数。 例如，我们可以将其设置为两个或三个 并会自动设置这些列。 如果您想设置间距， 在右括号，逗号，空格，16后移到右边。 将固定宽度设置为200也很有用， 你会看到它会居中 在列的灵活宽度内。 好的，我最后要向您展示的 是如何设置水平网格。 因此，我们将设置惰性H网格而不是惰性V网格。 我们将放置行而不是列。 如果您要使用H网格， 您可能应该设置滚动视图 是括号内的点是水平的。 现在，H网格将尝试调整卡的大小 是基于高度而不是宽度。 您可能不想设置固定的高度。 我们还可以设置两行而不是三行， 您现在可以看到布局 是可水平滚动。 另一件事要注意的是 当您进入全屏模式时 您将不得不处理一个安全区域。 因此，您可能需要将滚动视图设置 为点边缘忽略安全区域 标记为全部。 这样，动画就可以正常工作了。 好吧，让我们放置网格项数组 回到适应性。 让我删除数组括号，改为方括号， 网格项，圆括号自适应 括号，最小值，我将其设置为160。 然后在括号后， 将行之间的间距设置为16。 请注意，当您使用H网格时， 是从上到下排序。 当我们使用V网格时，是从左到右。 好的，让我们在iPhone上进行测试。 我是iPhone 11 Pro。 现在您可以看到布局可以水平滚动 并且动画仍然有效。 好吧，让我将其放回V网格 并将其更改回列， 删除水平滚动视图。 只需删除括号， 而且我们也不需要边缘忽略安全区域 现在，我将框架高度设为200。 这就是关于惰性网格的问题。 它是真正的自适应功能，而且功能强大。 我想你会很以创建基于网格的布局 而感到有趣。 所以在下一个章节中， 我想解决这个Z索引问题。 我也想告诉你 如何创建基于容器的过渡 并使用多个匹配的对称效果ID。 而且我认为它看起来会 比我们现在拥有的更酷。 因此，我将在下一章节上见。