1
00:00:05,338 --> 00:00:06,171
容器與zIndex對齊

2
00:00:12,620 --> 00:00:13,453
- [孟] 嘿，

3
00:00:13,453 --> 00:00:16,530
歡迎來到我的Swift UI課程的第13節。

4
00:00:16,530 --> 00:00:18,760
因此，擁有一個lazyGrid佈局，

5
00:00:18,760 --> 00:00:21,960
肯定會引入一系列問題，例如:

6
00:00:21,960 --> 00:00:25,010
在轉換過程中，所選卡

7
00:00:25,010 --> 00:00:26,400
位於其他卡的下方。

8
00:00:26,400 --> 00:00:27,800
我們想做的另一件事是，

9
00:00:27,800 --> 00:00:32,150
隨著容器尺寸的增大，動畫化整個容器，

10
00:00:32,150 --> 00:00:35,550
顯示內容，並進入全屏模式。

11
00:00:35,550 --> 00:00:37,670
現在，你可以看到，

12
00:00:37,670 --> 00:00:40,023
內容只是作為一個整體出現。

13
00:00:41,000 --> 00:00:42,630
所以這一次我們將使用

14
00:00:42,630 --> 00:00:45,580
兩個matchedGeometryEffect標識。

15
00:00:45,580 --> 00:00:46,413
首先，

16
00:00:46,413 --> 00:00:49,840
我們需要為CourseItem設置一個容器。

17
00:00:49,840 --> 00:00:51,510
所以命令點擊課程項目，

18
00:00:52,420 --> 00:00:55,280
然後點擊嵌入VStack。

19
00:00:55,280 --> 00:00:56,740
對於VStack，

20
00:00:56,740 --> 00:01:01,740
我們將復制相同的matchGeometryEffect修改器，

21
00:01:01,960 --> 00:01:05,110
並將其粘貼在VStack的末尾。

22
00:01:05,110 --> 00:01:06,570
不同的是，

23
00:01:06,570 --> 00:01:09,780
這個容器將有自己的標識。

24
00:01:09,780 --> 00:01:11,920
我們將添加一個唯一的名稱，

25
00:01:11,920 --> 00:01:16,480
包括項目標識，而不是使用項目標識。

26
00:01:16,480 --> 00:01:21,480
因此，讓我們選擇項目點id，並設置雙引號，

27
00:01:22,710 --> 00:01:24,490
然後括號。

28
00:01:24,490 --> 00:01:26,170
在圓括號前，

29
00:01:26,170 --> 00:01:28,900
我們要輸入反斜杠。

30
00:01:28,900 --> 00:01:32,370
這樣我們就可以混合字元串和變量。

31
00:01:32,370 --> 00:01:34,690
所以就在反斜杠之前，

32
00:01:34,690 --> 00:01:37,290
我們要輸入container。

33
00:01:37,290 --> 00:01:39,600
因此，在保留項目標識的同時，

34
00:01:39,600 --> 00:01:41,800
它將允許我們匹配

35
00:01:41,800 --> 00:01:44,320
全屏container。

36
00:01:44,320 --> 00:01:46,450
但是，通過添加這個字元串，

37
00:01:46,450 --> 00:01:48,640
它可以將自己與

38
00:01:48,640 --> 00:01:51,740
另一個matchedGeometryEffect ID區分開。

39
00:01:51,740 --> 00:01:53,800
好了，讓我們也在全屏模式下

40
00:01:53,800 --> 00:01:55,940
添加一個容器。

41
00:01:55,940 --> 00:01:59,200
我將把它包裝在ScrollView中。

42
00:01:59,200 --> 00:02:03,500
因此，命令點擊ScrollView，嵌入到VStack。

43
00:02:03,500 --> 00:02:07,960
這也意味著ScrollView的所有修改器

44
00:02:07,960 --> 00:02:10,430
都可以移動到VStack。

45
00:02:10,430 --> 00:02:14,610
因此，背景、過渡和安全區域修改器

46
00:02:14,610 --> 00:02:17,330
可以從ScrollView中剪切出來，

47
00:02:17,330 --> 00:02:20,490
然後粘貼到VStack上。

48
00:02:20,490 --> 00:02:23,770
現在確保你把它放在正確的位置，

49
00:02:23,770 --> 00:02:25,820
雙擊花括號

50
00:02:25,820 --> 00:02:27,853
知道它的結束位置。

51
00:02:29,420 --> 00:02:31,180
一旦你有了這些，

52
00:02:31,180 --> 00:02:35,290
我們就可以復制matchedGeometryEffect修改器，

53
00:02:35,290 --> 00:02:38,563
然後把它粘貼到點背景後面。

54
00:02:39,770 --> 00:02:41,540
現在我們要做同樣的技術。

55
00:02:41,540 --> 00:02:44,583
所以選擇selectedItem.id，

56
00:02:45,430 --> 00:02:49,550
輸入引號，圓括號，在圓括號前，

57
00:02:49,550 --> 00:02:51,070
反斜杠。

58
00:02:51,070 --> 00:02:53,300
然後我們可以在那之前打container。

59
00:02:53,300 --> 00:02:55,580
所以導致我們的卡

60
00:02:55,580 --> 00:03:00,180
低於其他牌的原因，實際上是一個過渡。

61
00:03:00,180 --> 00:03:02,370
由於我們現在正在製作容器的動畫，

62
00:03:02,370 --> 00:03:05,060
我們不再需要延遲轉換了。

63
00:03:05,060 --> 00:03:09,190
所以我們可以去掉點過渡修改器。

64
00:03:09,190 --> 00:03:10,680
所以如果你測試這個，

65
00:03:10,680 --> 00:03:13,030
你會看到一個美麗的過渡，

66
00:03:13,030 --> 00:03:17,230
內容擴展，然後收縮。

67
00:03:17,230 --> 00:03:20,810
唯一的問題是，當它縮回時，

68
00:03:20,810 --> 00:03:22,970
內容就在下麵。

69
00:03:22,970 --> 00:03:25,200
這不是我們想要的。

70
00:03:25,200 --> 00:03:26,620
為瞭解決這個問題，

71
00:03:26,620 --> 00:03:28,820
我們可以為ScrollView添加一個

72
00:03:28,820 --> 00:03:33,560
低於全屏視圖的zIndex。

73
00:03:33,560 --> 00:03:37,100
讓我們轉到ScrollView的zIndex，

74
00:03:37,100 --> 00:03:40,930
鍵入.zIndex，然後鍵入1。

75
00:03:40,930 --> 00:03:44,060
然後對於全屏模式的VStack，

76
00:03:44,060 --> 00:03:48,420
我們將把點zIndex設置為2，

77
00:03:48,420 --> 00:03:50,750
緊接在其他修改器之後。

78
00:03:50,750 --> 00:03:54,560
所以現在你會看到，當我過渡出來的時候，

79
00:03:54,560 --> 00:03:59,200
內容仍然在其他卡片之上。

80
00:03:59,200 --> 00:04:02,640
我還可以為我的內容

81
00:04:02,640 --> 00:04:05,640
添加一個角半徑，以更適合卡片的角半徑。

82
00:04:05,640 --> 00:04:10,527
所以在背景之後，我將設置.clipShape。

83
00:04:11,840 --> 00:04:16,120
然後輸入RoundedRectangle，圓括號，

84
00:04:16,120 --> 00:04:20,800
圓角半徑為22，樣式為連續。

85
00:04:20,800 --> 00:04:23,350
現在我有了一個非常好的過渡，

86
00:04:23,350 --> 00:04:26,430
它對所有的卡片都非常有效。

87
00:04:26,430 --> 00:04:30,020
順便說一下，你可以通過第一個onTapGesture

88
00:04:30,020 --> 00:04:33,130
來做春季動畫。

89
00:04:33,130 --> 00:04:37,640
在這里，如果你刪除.spring並再次輸入，

90
00:04:37,640 --> 00:04:42,060
你會發現auto-completion還有更多的值。

91
00:04:42,060 --> 00:04:46,387
因此，我們可以將響應設置為0.4，dampingFraction設置為0.8，

92
00:04:49,020 --> 00:04:50,580
還有blendDuration

93
00:04:50,580 --> 00:04:52,170
我們可以把它設為零。

94
00:04:52,170 --> 00:04:55,470
現在你會發現它快了一點。

95
00:04:55,470 --> 00:05:00,470
因此，您可以將響應設置得更低，以使其更快。

96
00:05:01,010 --> 00:05:02,210
對於damping，

97
00:05:02,210 --> 00:05:05,490
如果你把數值設得更低，比如0.5，

98
00:05:05,490 --> 00:05:08,190
你會看到它會反彈得更多。

99
00:05:10,170 --> 00:05:12,130
你絕對可以多試試這些值。

100
00:05:12,130 --> 00:05:14,633
現在，我將把響應設置為0.5。

101
00:05:15,720 --> 00:05:19,370
對於damping，我會設置為0.7，好嗎？

102
00:05:19,370 --> 00:05:21,300
所以這看起來很不錯。

103
00:05:21,300 --> 00:05:24,190
我現在需要做的是添加一個關閉按鈕，

104
00:05:24,190 --> 00:05:26,550
而不是點擊卡片來關閉。

105
00:05:26,550 --> 00:05:29,290
因為我們會經常重復使用這個關閉按鈕。

106
00:05:29,290 --> 00:05:31,470
我將創建一個新的Swift文件，

107
00:05:31,470 --> 00:05:36,398
輸入command N，然後進入SwiftUI視圖。

108
00:05:36,398 --> 00:05:40,960
closeButton，瞄準iOS和Mac，然後創建。

109
00:05:40,960 --> 00:05:42,930
讓我們繼續。

110
00:05:42,930 --> 00:05:47,930
然後，我們將替換系統名稱，用Image、

111
00:05:48,440 --> 00:05:51,080
括號來替換文本。

112
00:05:51,080 --> 00:05:56,040
輸入SF符號，引號，"聖誕"。

113
00:05:56,040 --> 00:06:00,100
我將使用.font.system

114
00:06:01,270 --> 00:06:03,210
來設置自定義大小。

115
00:06:03,210 --> 00:06:07,000
我將使用尺寸、重量和設計。

116
00:06:07,000 --> 00:06:11,770
對於尺寸輸入17 重量.bold。

117
00:06:11,770 --> 00:06:14,940
設計，我可以刪除它，因為我不需要它。

118
00:06:14,940 --> 00:06:17,100
接下來，我們將設置背景顏色。

119
00:06:17,100 --> 00:06:22,100
輸入background ，

120
00:06:22,480 --> 00:06:24,503
0.6。

121
00:06:25,940 --> 00:06:28,430
所以讓我們把圖標變成白色。

122
00:06:28,430 --> 00:06:29,660
所以在背景之前，

123
00:06:29,660 --> 00:06:34,020
我們將輸入.foregroundColor為.white。

124
00:06:34,020 --> 00:06:36,673
在那之後，我們將設置.padding，

125
00:06:38,420 --> 00:06:40,993
.all，並將其設置為10。

126
00:06:41,850 --> 00:06:43,240
我發現有用的一點是，

127
00:06:43,240 --> 00:06:44,930
你可以選擇圖像，

128
00:06:44,930 --> 00:06:48,840
你可以大致看到元素的大小。

129
00:06:48,840 --> 00:06:50,480
對於closeButton，

130
00:06:50,480 --> 00:06:54,600
我認為32到36是一個很好的尺寸。

131
00:06:54,600 --> 00:06:57,960
接下來，我們將使用.clipShape，

132
00:06:57,960 --> 00:07:00,780
使它成為一個圓，好嗎？

133
00:07:00,780 --> 00:07:03,800
現在我們有了closeButton組件，

134
00:07:03,800 --> 00:07:05,930
我們可以返回到課程視圖，

135
00:07:05,930 --> 00:07:09,660
我們將在全屏模式下實現它。

136
00:07:09,660 --> 00:07:12,340
讓我們命令點擊VStack，

137
00:07:12,340 --> 00:07:14,750
並嵌入一個VStack。

138
00:07:14,750 --> 00:07:18,000
然後我們將把VStack變成ZStack，

139
00:07:18,000 --> 00:07:19,950
這樣我們就可以把

140
00:07:19,950 --> 00:07:21,700
關閉按鈕放在全屏的頂部。

141
00:07:21,700 --> 00:07:24,910
現在我們有了VStack，這是一個全屏卡。

142
00:07:24,910 --> 00:07:27,590
在zIndex之後，

143
00:07:27,590 --> 00:07:32,590
我們將輸入closeButton，括號。

144
00:07:33,100 --> 00:07:36,230
然後我們將把onTapGesture

145
00:07:36,230 --> 00:07:37,230
從CourseItem中移走。

146
00:07:38,110 --> 00:07:42,930
所以選擇那個修改器並粘貼到我們的關閉按鈕。

147
00:07:42,930 --> 00:07:43,763
很好。

148
00:07:43,763 --> 00:07:44,650
如果我們點擊一張卡片，

149
00:07:44,650 --> 00:07:46,920
你會看到我們有一個zIndex問題。

150
00:07:46,920 --> 00:07:49,960
我們將不得不把zIndex

151
00:07:49,960 --> 00:07:52,723
移動到父容器，也就是現在的ZStack。

152
00:07:53,990 --> 00:07:55,970
那麼，讓我們測試一下動畫。

153
00:07:55,970 --> 00:07:58,010
它工作得很好，

154
00:07:58,010 --> 00:08:02,370
只是現在關閉按鈕在中間。

155
00:08:02,370 --> 00:08:05,670
所以你能做的是，在這里，

156
00:08:05,670 --> 00:08:09,020
你能在ZStack中對齊元素，

157
00:08:09,020 --> 00:08:12,690
在那個框架中你想要的任何角落。

158
00:08:12,690 --> 00:08:16,610
所以讓我們去ZStack，放上括號。

159
00:08:16,610 --> 00:08:21,343
Alignment，冒號 .topTrailing。

160
00:08:22,740 --> 00:08:23,950
太棒了。

161
00:08:23,950 --> 00:08:26,600
現在你可以看到關閉按鈕在右上角。

162
00:08:26,600 --> 00:08:28,540
我們可以在關閉按鈕的右邊

163
00:08:28,540 --> 00:08:30,743
添加一點填充。

164
00:08:31,700 --> 00:08:33,610
所以，讓我們去closeButton，

165
00:08:33,610 --> 00:08:37,900
添加.padding.trailing，

166
00:08:37,900 --> 00:08:40,390
我們要設置它為16。

167
00:08:40,390 --> 00:08:41,280
太好了。

168
00:08:41,280 --> 00:08:43,940
現在你可以看到我們美麗的動畫，

169
00:08:43,940 --> 00:08:45,980
適用於所有的卡片。

170
00:08:45,980 --> 00:08:48,900
最重要的是，它可以適應任何你想要的佈局，

171
00:08:48,900 --> 00:08:50,610
使用lazyGrid。

172
00:08:50,610 --> 00:08:54,740
因此，我們的課程視圖文件開始變得相當重。

173
00:08:54,740 --> 00:08:58,210
我們應該將全屏視圖

174
00:08:58,210 --> 00:09:00,220
分離到它自己的Swift文件中。

175
00:09:00,220 --> 00:09:02,940
這樣，管理數據和

176
00:09:02,940 --> 00:09:05,070
重用視圖就更容易了。

177
00:09:05,070 --> 00:09:08,230
但是我們需要學習如何傳遞nameSpace

178
00:09:08,230 --> 00:09:09,480
和CourseData。

179
00:09:09,480 --> 00:09:10,690
因此，在下一節課中，

180
00:09:10,690 --> 00:09:12,960
我們將學習如何管理它，

181
00:09:12,960 --> 00:09:14,750
並使其發揮作用。

182
00:09:14,750 --> 00:09:16,573
所以下節課再見。

