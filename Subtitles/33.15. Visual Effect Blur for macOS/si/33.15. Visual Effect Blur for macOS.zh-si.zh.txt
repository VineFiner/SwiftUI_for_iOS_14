- SWIFTUI 2 macOS的视觉效果模糊

- [孟] 嗨 欢迎来到Swift UI课程 第15节 到目前为止 我们已经在两个屏幕之间创造了 一个非常酷的过渡 所有这些在预览中都很有用 但当你在iPhone11上运行该应用程序时 和iPad pro 11英寸一样 你会注意到默认情况下 有一个没有标题的导航栏 所以才会有这么大的差距 最重要的是 作为一个规则 我们不应该有超过712的内容 这是苹果公司为他们的模式设定的标准 所以我们在这里能做的 将容器的最大宽度设置为712 然后在后面添加背景模糊 要使iOS和Mac iOS的背景模糊工作 我们需要两份文件 我们去看项目文件 和macOS文件夹中 我们有这些文件要导入 对于iOS 我们将拖放 VisualEffectBlur到IOS 这里 我们要检查iOS 确保在需要时复制项目并创建组 然后完成 让我们对macOS做同样的操作 所以拖放VisualEffectBlur.Swift 然后把它丢给Macos 这次我们要检查目标是否有macos 同样 如果需要 复制项目并创建组 现在 目标很重要 如果你去找检查员 您将在第一个选项卡中看到这里 该文件可用于哪个目标 并注意到文件的名称相同 但是文件的内容对于Mac和iOS是不同的 因此 当您为每个平台构建应用程序时 项目将确切地知道要使用哪个文件 取决于目标 现在 我想提一下这个代码 因为VisualEffectBlur是由苹果公司制作的 您可以在Fruta应用程序中找到代码 他们所分享的 而且他们的许可证允许任何人使用他们的代码 回到Xcode 我们将预览11英寸的iPad 这里可以看到容器的宽度 比712多 所以我们要限制它 在CoursesView.Swift中 我们要向下滚动 我们会找到z堆栈 对于全屏模式 在zIndex之后 我们要把frame 括号 maxwidth:712 如果你这么做 你会看到你容器 现在被限制为这个宽度 但我们想做的是添加另一个背景 这次使用VisualEffectBlur 首先 我们要创建另一个框架 所以frame maxwidth:infinity 这将使用所有可用空间 然后我们会添加一个背景修饰符 那么背景 现在我们可以使用VisualEffectBlur VisualEffectBlur 括号 就这样了 现在您可以测试 您可以看到我们刚刚添加了 背景模糊 如果要填满整个屏幕 包括安全区 我们可以在括号后面加上 EdgesigningSafearea 全部都加上 所以这也会填满安全区域 现在 请注意 您可以自定义样式 但这种定制只适用于iOS系统 所以如果您想自定义VisualEffectBlur 除了导航栏之外 我们需要设置平台条件 我们还需要在这里整理我们的文件 所以让我们设置迷你组件 在这里 就在最后一个花括号之前 我将添加一些视图类型的var fullContent 然后我会从if selectedItem中剪掉所有的东西 及其内容 双击这个 你会发现这就是密码 我要把它粘贴到完整的内容里 对于fullContent 我们需要设置ViewBuilder 接下来 让我们对内容进行同样的操作 所以就在完整内容之前 让我们设置一些视图类型的var内容 花括号 然后我再往上滚动一点 要查找ScrollView和内容 加上zIndex修饰符 选择所有这些 切 粘贴到内容 然后我们可以从z堆栈的主体中 引用它们 所以内容 然后在内容之后 就是fullcontent 现在我们可以向下滚动找到背景修改器 有视觉效果模糊的 剪掉它 我们会在完整的内容之后贴上它 所以现在让我们设置一个平台条件 就在内容之前 磅如果os iOS 然后在fullContent pound else之后 在那之后 恩迪夫 现在我们可以复制内容和完整内容 包括背景修饰符 而这就是我们可以为iOS定制模糊样式的地方 所以对于模糊样式 你可以设置模糊样式 对于价值 我们有很多选择 但自动完成可能无法正常工作 在这一点上 所以我们能做的就是命令+单击VisualEffectBlur 跳转到定义 这将打开Swift文件 你会发现我们有一个默认的样式 那是系统材料 这是标准的模糊强度 而且它还能自动适应暗模式 您还可以选中其他选项 通过选择systemMaterial 删除它 再次按点 在这里你可以找到很多选择 所以我们有黑暗 额外的光 光 突出等等 现在 如果你使用系统的 他们会适应黑暗模式和光明模式 给你一个概念 我们有系统 材料 厚的 薄的 超薄的 越厚 就越容易阅读 并查看内容 越薄 你就越能看到背景 现在我们什么都不会改变 所以我要把系统材料放回去 但我只是想告诉你选择 因为这里的自动完成可能无法正常工作 但除此之外 如果有效的话 你可以选择这些选项中的任何一个 比如 让我们试试超薄材质 这就是背景 更明显 如果将其设置为systemThickMaterial 你会看到背景几乎看不见 模糊样式只在iOS上可用 这就是为什么我们要一直 用括号表示Mac 让我回到SystemMaterial 现在我们要处理导航栏 首先 你可以设置一个标题 在z堆栈之后 让我们设置导航栏标题 设置为课程 所以如果你运行这个应用程序 它会是这样的 问题是导航栏会在上面 就像如果我们有一个标签栏 它也会在内容的顶部 这可能并不理想 我们能做的就是隐藏导航栏 但这只适用于iOS 所以我们必须为iOS的内容做这件事 NavigationBarHidden 将其设置为true 通过这样做 我们解决了间距的问题 对于"关闭"按钮 还包括位于顶部的导航栏的标题 现在让我们在Mac上运行这个 在Mac上 你可以看到一切都运行得很好 包括背景模糊 容器的最大宽度 甚至动画 但我们确实对安全区域有问题 我们可以禁用它 要做到这一点 我们要进入课程细节 这就是我们要用同样的方式组织的地方 所以让我们创建一些视图类型的var内容 花括号 剪切并粘贴VStack 包括除了安全区修改器以外的所有内容 所以让我把它粘贴到内容 从主体上引用这个 之后 我们可以设置平台条件 使用pound if os iOS pound else pound endiff 对于Mac 我们只设置内容 这就解决了导航栏的问题 隐藏卡片的一部分 但是现在我们有一些间距问题与关闭按钮 而且 我们要确保圆角 对Mac来说也很有意义 所以在Mac上 拐角半径需要适合 窗口的角半径 所以这需要大约10 而不是22 首先 我们来固定拐角半径 让我们转到课程视图 我们会找到关闭按钮 这里有完整的内容 至于填充物 而不是仅仅设置尾随 我们要去掉拖尾 在括号里加上16 关于拐角半径 我们要去文件夹呼叫项目 课程项目 然后在var课程之后 如果操作系统 操作系统 CGFloat类型的var角半径等于22 在那之后 庞德·埃尔斯 庞德·恩迪夫 让我们复制var角半径 至于Mac 我们要把它调到10 然后使用该值 我们要把22换成夹子形状 让我们把拐角半径 那好多了 现在我们要做的是处理容器的 拐角半径 让我们为平台条件复制这段代码 包括拐角半径 让我们进入课程细节 在namespace后面粘贴 这次是Mac 我要把它设为零 然后使用拐角半径值 我要替换剪贴板的角半径 拐角半径 那好多了 我们也可以移除拐角半径 当它处于全屏状态时 所以在"课程细节"中 对于"课程项目" 我们要加逗号 角半径 把它设为零 所以现在 在所有平台上进行测试 你可以看到它看起来真的很不错 iPad和iPhone也是如此 在下一节课上 我想告诉你如何使用"尺寸"类 要检测像iPad这样的大屏幕 和像iPhone那样更小的屏幕 以便我们可以使用选项卡栏来代替 我们下期见