WEBVTT

1
00:00:06.283 --> 00:00:11.209
SWIFTUI 2 macOS的视觉效果模糊

2
00:00:12.610 --> 00:00:16.370
<v 孟>嗨 欢迎来到Swift UI课程 第15节</v>

3
00:00:16.370 --> 00:00:19.800
到目前为止 我们已经在两个屏幕之间创造了

4
00:00:19.800 --> 00:00:21.680
一个非常酷的过渡

5
00:00:21.680 --> 00:00:24.460
所有这些在预览中都很有用

6
00:00:24.460 --> 00:00:27.570
但当你在iPhone11上运行该应用程序时

7
00:00:27.570 --> 00:00:32.570
和iPad pro 11英寸一样 你会注意到默认情况下

8
00:00:32.690 --> 00:00:37.690
有一个没有标题的导航栏

9
00:00:37.780 --> 00:00:40.800
所以才会有这么大的差距

10
00:00:40.800 --> 00:00:42.670
最重要的是 作为一个规则

11
00:00:42.670 --> 00:00:46.950
我们不应该有超过712的内容

12
00:00:46.950 --> 00:00:50.650
这是苹果公司为他们的模式设定的标准

13
00:00:50.650 --> 00:00:52.040
所以我们在这里能做的

14
00:00:52.040 --> 00:00:56.910
将容器的最大宽度设置为712

15
00:00:56.910 --> 00:01:00.020
然后在后面添加背景模糊

16
00:01:00.020 --> 00:01:03.200
要使iOS和Mac iOS的背景模糊工作

17
00:01:03.200 --> 00:01:04.880
我们需要两份文件

18
00:01:04.880 --> 00:01:07.420
我们去看项目文件

19
00:01:07.420 --> 00:01:11.360
和macOS文件夹中

20
00:01:11.360 --> 00:01:14.570
我们有这些文件要导入

21
00:01:14.570 --> 00:01:16.900
对于iOS 我们将拖放

22
00:01:16.900 --> 00:01:19.553
VisualEffectBlur到IOS

23
00:01:20.720 --> 00:01:22.953
这里 我们要检查iOS

24
00:01:23.990 --> 00:01:27.690
确保在需要时复制项目并创建组

25
00:01:27.690 --> 00:01:29.080
然后完成

26
00:01:29.080 --> 00:01:31.690
让我们对macOS做同样的操作

27
00:01:31.690 --> 00:01:34.560
所以拖放VisualEffectBlur.Swift

28
00:01:34.560 --> 00:01:36.053
然后把它丢给Macos

29
00:01:37.810 --> 00:01:41.560
这次我们要检查目标是否有macos

30
00:01:41.560 --> 00:01:44.463
同样 如果需要 复制项目并创建组

31
00:01:45.380 --> 00:01:48.190
现在 目标很重要

32
00:01:48.190 --> 00:01:50.520
如果你去找检查员

33
00:01:50.520 --> 00:01:53.340
您将在第一个选项卡中看到这里

34
00:01:53.340 --> 00:01:56.620
该文件可用于哪个目标

35
00:01:56.620 --> 00:01:59.900
并注意到文件的名称相同

36
00:01:59.900 --> 00:02:04.900
但是文件的内容对于Mac和iOS是不同的

37
00:02:04.970 --> 00:02:07.670
因此 当您为每个平台构建应用程序时

38
00:02:07.670 --> 00:02:10.690
项目将确切地知道要使用哪个文件

39
00:02:10.690 --> 00:02:12.900
取决于目标

40
00:02:12.900 --> 00:02:14.990
现在 我想提一下这个代码

41
00:02:14.990 --> 00:02:18.000
因为VisualEffectBlur是由苹果公司制作的

42
00:02:18.000 --> 00:02:20.570
您可以在Fruta应用程序中找到代码

43
00:02:20.570 --> 00:02:21.780
他们所分享的

44
00:02:21.780 --> 00:02:26.230
而且他们的许可证允许任何人使用他们的代码

45
00:02:26.230 --> 00:02:27.750
回到Xcode

46
00:02:27.750 --> 00:02:31.000
我们将预览11英寸的iPad

47
00:02:31.000 --> 00:02:34.310
这里可以看到容器的宽度

48
00:02:34.310 --> 00:02:38.040
比712多 所以我们要限制它

49
00:02:38.040 --> 00:02:41.260
在CoursesView.Swift中 我们要向下滚动

50
00:02:41.260 --> 00:02:43.140
我们会找到z堆栈

51
00:02:43.140 --> 00:02:44.650
对于全屏模式

52
00:02:44.650 --> 00:02:46.600
在zIndex之后

53
00:02:46.600 --> 00:02:50.973
我们要把frame 括号 maxwidth:712

54
00:02:52.840 --> 00:02:55.780
如果你这么做 你会看到你容器

55
00:02:55.780 --> 00:02:58.200
现在被限制为这个宽度

56
00:02:58.200 --> 00:03:01.100
但我们想做的是添加另一个背景

57
00:03:01.100 --> 00:03:04.230
这次使用VisualEffectBlur

58
00:03:04.230 --> 00:03:06.520
首先 我们要创建另一个框架

59
00:03:06.520 --> 00:03:10.973
所以frame maxwidth:infinity

60
00:03:11.920 --> 00:03:14.850
这将使用所有可用空间

61
00:03:14.850 --> 00:03:17.910
然后我们会添加一个背景修饰符

62
00:03:17.910 --> 00:03:19.383
那么背景

63
00:03:20.220 --> 00:03:23.283
现在我们可以使用VisualEffectBlur

64
00:03:23.283 --> 00:03:27.130
VisualEffectBlur 括号

65
00:03:27.130 --> 00:03:27.990
就这样了

66
00:03:27.990 --> 00:03:32.090
现在您可以测试 您可以看到我们刚刚添加了

67
00:03:32.090 --> 00:03:34.100
背景模糊

68
00:03:34.100 --> 00:03:35.800
如果要填满整个屏幕

69
00:03:35.800 --> 00:03:37.360
包括安全区

70
00:03:37.360 --> 00:03:40.237
我们可以在括号后面加上

71
00:03:40.237 --> 00:03:44.860
EdgesigningSafearea 全部都加上

72
00:03:44.860 --> 00:03:47.363
所以这也会填满安全区域

73
00:03:48.730 --> 00:03:51.650
现在 请注意 您可以自定义样式

74
00:03:51.650 --> 00:03:56.650
但这种定制只适用于iOS系统

75
00:03:56.730 --> 00:03:59.210
所以如果您想自定义VisualEffectBlur

76
00:03:59.210 --> 00:04:01.630
除了导航栏之外

77
00:04:01.630 --> 00:04:04.260
我们需要设置平台条件

78
00:04:04.260 --> 00:04:08.130
我们还需要在这里整理我们的文件

79
00:04:08.130 --> 00:04:10.660
所以让我们设置迷你组件

80
00:04:10.660 --> 00:04:15.210
在这里 就在最后一个花括号之前

81
00:04:15.210 --> 00:04:20.210
我将添加一些视图类型的var fullContent

82
00:04:23.050 --> 00:04:27.990
然后我会从if selectedItem中剪掉所有的东西

83
00:04:27.990 --> 00:04:29.430
及其内容

84
00:04:29.430 --> 00:04:31.290
双击这个

85
00:04:31.290 --> 00:04:35.010
你会发现这就是密码

86
00:04:35.010 --> 00:04:37.783
我要把它粘贴到完整的内容里

87
00:04:38.690 --> 00:04:41.773
对于fullContent 我们需要设置ViewBuilder

88
00:04:43.130 --> 00:04:45.540
接下来 让我们对内容进行同样的操作

89
00:04:45.540 --> 00:04:48.320
所以就在完整内容之前

90
00:04:48.320 --> 00:04:53.320
让我们设置一些视图类型的var内容 花括号

91
00:04:54.340 --> 00:04:56.710
然后我再往上滚动一点

92
00:04:56.710 --> 00:05:00.390
要查找ScrollView和内容

93
00:05:00.390 --> 00:05:02.393
加上zIndex修饰符

94
00:05:03.770 --> 00:05:05.763
选择所有这些 切

95
00:05:07.170 --> 00:05:08.973
粘贴到内容

96
00:05:10.010 --> 00:05:12.780
然后我们可以从z堆栈的主体中

97
00:05:12.780 --> 00:05:14.230
引用它们

98
00:05:14.230 --> 00:05:18.970
所以内容 然后在内容之后 就是fullcontent

99
00:05:18.970 --> 00:05:22.430
现在我们可以向下滚动找到背景修改器

100
00:05:22.430 --> 00:05:26.560
有视觉效果模糊的 剪掉它

101
00:05:26.560 --> 00:05:30.313
我们会在完整的内容之后贴上它

102
00:05:31.210 --> 00:05:33.420
所以现在让我们设置一个平台条件

103
00:05:33.420 --> 00:05:37.383
就在内容之前 磅如果os iOS

104
00:05:38.980 --> 00:05:43.670
然后在fullContent pound else之后

105
00:05:43.670 --> 00:05:45.367
在那之后 恩迪夫

106
00:05:46.690 --> 00:05:50.290
现在我们可以复制内容和完整内容

107
00:05:50.290 --> 00:05:52.520
包括背景修饰符

108
00:05:52.520 --> 00:05:57.520
而这就是我们可以为iOS定制模糊样式的地方

109
00:05:57.520 --> 00:06:01.470
所以对于模糊样式 你可以设置模糊样式

110
00:06:01.470 --> 00:06:05.570
对于价值 我们有很多选择

111
00:06:05.570 --> 00:06:07.960
但自动完成可能无法正常工作

112
00:06:07.960 --> 00:06:09.080
在这一点上

113
00:06:09.080 --> 00:06:12.313
所以我们能做的就是命令+单击VisualEffectBlur

114
00:06:13.430 --> 00:06:17.930
跳转到定义 这将打开Swift文件

115
00:06:17.930 --> 00:06:20.900
你会发现我们有一个默认的样式

116
00:06:20.900 --> 00:06:23.090
那是系统材料

117
00:06:23.090 --> 00:06:25.380
这是标准的模糊强度

118
00:06:25.380 --> 00:06:28.270
而且它还能自动适应暗模式

119
00:06:28.270 --> 00:06:30.650
您还可以选中其他选项

120
00:06:30.650 --> 00:06:35.630
通过选择systemMaterial 删除它 再次按点

121
00:06:35.630 --> 00:06:38.170
在这里你可以找到很多选择

122
00:06:38.170 --> 00:06:42.230
所以我们有黑暗 额外的光 光 突出等等

123
00:06:42.230 --> 00:06:44.490
现在 如果你使用系统的

124
00:06:44.490 --> 00:06:47.970
他们会适应黑暗模式和光明模式

125
00:06:47.970 --> 00:06:51.980
给你一个概念 我们有系统 材料

126
00:06:51.980 --> 00:06:55.320
厚的 薄的 超薄的

127
00:06:55.320 --> 00:06:59.260
越厚 就越容易阅读

128
00:06:59.260 --> 00:07:01.190
并查看内容

129
00:07:01.190 --> 00:07:02.470
越薄

130
00:07:02.470 --> 00:07:04.690
你就越能看到背景

131
00:07:04.690 --> 00:07:06.340
现在我们什么都不会改变

132
00:07:06.340 --> 00:07:08.290
所以我要把系统材料放回去

133
00:07:08.290 --> 00:07:10.870
但我只是想告诉你选择

134
00:07:10.870 --> 00:07:14.570
因为这里的自动完成可能无法正常工作

135
00:07:14.570 --> 00:07:16.370
但除此之外 如果有效的话

136
00:07:16.370 --> 00:07:20.140
你可以选择这些选项中的任何一个

137
00:07:20.140 --> 00:07:23.980
比如 让我们试试超薄材质

138
00:07:23.980 --> 00:07:26.670
这就是背景

139
00:07:26.670 --> 00:07:28.520
更明显

140
00:07:28.520 --> 00:07:30.453
如果将其设置为systemThickMaterial

141
00:07:34.210 --> 00:07:37.723
你会看到背景几乎看不见

142
00:07:40.200 --> 00:07:43.770
模糊样式只在iOS上可用

143
00:07:43.770 --> 00:07:46.260
这就是为什么我们要一直

144
00:07:46.260 --> 00:07:48.203
用括号表示Mac

145
00:07:49.090 --> 00:07:51.653
让我回到SystemMaterial

146
00:07:53.010 --> 00:07:55.600
现在我们要处理导航栏

147
00:07:55.600 --> 00:07:57.870
首先 你可以设置一个标题

148
00:07:57.870 --> 00:08:02.870
在z堆栈之后 让我们设置导航栏标题

149
00:08:03.120 --> 00:08:04.920
设置为课程

150
00:08:04.920 --> 00:08:07.550
所以如果你运行这个应用程序 它会是这样的

151
00:08:07.550 --> 00:08:11.160
问题是导航栏会在上面

152
00:08:11.160 --> 00:08:13.020
就像如果我们有一个标签栏

153
00:08:13.020 --> 00:08:15.530
它也会在内容的顶部

154
00:08:15.530 --> 00:08:17.850
这可能并不理想

155
00:08:17.850 --> 00:08:21.200
我们能做的就是隐藏导航栏

156
00:08:21.200 --> 00:08:23.540
但这只适用于iOS

157
00:08:23.540 --> 00:08:26.933
所以我们必须为iOS的内容做这件事

158
00:08:27.778 --> 00:08:32.778
NavigationBarHidden 将其设置为true

159
00:08:33.350 --> 00:08:36.400
通过这样做 我们解决了间距的问题

160
00:08:36.400 --> 00:08:37.570
对于"关闭"按钮

161
00:08:37.570 --> 00:08:41.423
还包括位于顶部的导航栏的标题

162
00:08:42.450 --> 00:08:44.683
现在让我们在Mac上运行这个

163
00:08:45.800 --> 00:08:48.500
在Mac上 你可以看到一切都运行得很好

164
00:08:48.500 --> 00:08:50.210
包括背景模糊

165
00:08:50.210 --> 00:08:53.840
容器的最大宽度 甚至动画

166
00:08:53.840 --> 00:08:56.490
但我们确实对安全区域有问题

167
00:08:56.490 --> 00:08:57.810
我们可以禁用它

168
00:08:57.810 --> 00:09:00.560
要做到这一点 我们要进入课程细节

169
00:09:00.560 --> 00:09:04.370
这就是我们要用同样的方式组织的地方

170
00:09:04.370 --> 00:09:09.370
所以让我们创建一些视图类型的var内容 花括号

171
00:09:11.840 --> 00:09:13.830
剪切并粘贴VStack

172
00:09:13.830 --> 00:09:18.830
包括除了安全区修改器以外的所有内容

173
00:09:19.010 --> 00:09:21.600
所以让我把它粘贴到内容

174
00:09:21.600 --> 00:09:24.300
从主体上引用这个

175
00:09:24.300 --> 00:09:26.650
之后 我们可以设置平台条件

176
00:09:26.650 --> 00:09:31.650
使用pound if os iOS pound else pound endiff

177
00:09:35.420 --> 00:09:38.960
对于Mac 我们只设置内容

178
00:09:38.960 --> 00:09:41.330
这就解决了导航栏的问题

179
00:09:41.330 --> 00:09:43.770
隐藏卡片的一部分

180
00:09:43.770 --> 00:09:47.600
但是现在我们有一些间距问题与关闭按钮

181
00:09:47.600 --> 00:09:51.150
而且 我们要确保圆角

182
00:09:51.150 --> 00:09:53.690
对Mac来说也很有意义

183
00:09:53.690 --> 00:09:57.350
所以在Mac上 拐角半径需要适合

184
00:09:57.350 --> 00:09:59.400
窗口的角半径

185
00:09:59.400 --> 00:10:02.750
所以这需要大约10 而不是22

186
00:10:02.750 --> 00:10:05.030
首先 我们来固定拐角半径

187
00:10:05.030 --> 00:10:06.690
让我们转到课程视图

188
00:10:06.690 --> 00:10:08.793
我们会找到关闭按钮

189
00:10:09.720 --> 00:10:11.930
这里有完整的内容

190
00:10:11.930 --> 00:10:13.300
至于填充物

191
00:10:13.300 --> 00:10:15.580
而不是仅仅设置尾随

192
00:10:15.580 --> 00:10:17.810
我们要去掉拖尾

193
00:10:17.810 --> 00:10:20.970
在括号里加上16

194
00:10:20.970 --> 00:10:22.460
关于拐角半径

195
00:10:22.460 --> 00:10:25.773
我们要去文件夹呼叫项目 课程项目

196
00:10:26.860 --> 00:10:29.210
然后在var课程之后

197
00:10:29.210 --> 00:10:34.123
如果操作系统 操作系统

198
00:10:35.040 --> 00:10:40.040
CGFloat类型的var角半径等于22

199
00:10:43.130 --> 00:10:47.373
在那之后 庞德·埃尔斯 庞德·恩迪夫

200
00:10:49.210 --> 00:10:52.570
让我们复制var角半径

201
00:10:52.570 --> 00:10:55.790
至于Mac 我们要把它调到10

202
00:10:55.790 --> 00:10:57.300
然后使用该值

203
00:10:57.300 --> 00:11:01.850
我们要把22换成夹子形状

204
00:11:01.850 --> 00:11:04.800
让我们把拐角半径

205
00:11:04.800 --> 00:11:06.100
那好多了

206
00:11:06.100 --> 00:11:08.760
现在我们要做的是处理容器的

207
00:11:08.760 --> 00:11:10.440
拐角半径

208
00:11:10.440 --> 00:11:13.370
让我们为平台条件复制这段代码

209
00:11:13.370 --> 00:11:15.260
包括拐角半径

210
00:11:15.260 --> 00:11:17.680
让我们进入课程细节

211
00:11:17.680 --> 00:11:21.210
在namespace后面粘贴

212
00:11:21.210 --> 00:11:25.350
这次是Mac 我要把它设为零

213
00:11:25.350 --> 00:11:27.790
然后使用拐角半径值

214
00:11:27.790 --> 00:11:30.703
我要替换剪贴板的角半径

215
00:11:31.610 --> 00:11:32.843
拐角半径

216
00:11:34.400 --> 00:11:35.690
那好多了

217
00:11:35.690 --> 00:11:39.140
我们也可以移除拐角半径

218
00:11:39.140 --> 00:11:40.920
当它处于全屏状态时

219
00:11:40.920 --> 00:11:44.610
所以在"课程细节"中 对于"课程项目"

220
00:11:44.610 --> 00:11:49.610
我们要加逗号 角半径 把它设为零

221
00:11:50.060 --> 00:11:52.540
所以现在 在所有平台上进行测试

222
00:11:52.540 --> 00:11:55.350
你可以看到它看起来真的很不错

223
00:11:55.350 --> 00:11:58.810
iPad和iPhone也是如此

224
00:11:58.810 --> 00:11:59.680
在下一节课上

225
00:11:59.680 --> 00:12:01.560
我想告诉你如何使用"尺寸"类

226
00:12:01.560 --> 00:12:05.390
要检测像iPad这样的大屏幕

227
00:12:05.390 --> 00:12:07.760
和像iPhone那样更小的屏幕

228
00:12:07.760 --> 00:12:10.750
以便我们可以使用选项卡栏来代替

229
00:12:10.750 --> 00:12:12.673
我们下期见

