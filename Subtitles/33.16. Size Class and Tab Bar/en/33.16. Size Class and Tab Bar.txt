- [Meng] Hello there, welcome to section 16 of my SwiftUI course. Today we'll learn how to detect the size class so that we can use a sidebar for the iPad and the tab bar for the iPhone. If you're not aware of what the size class is you can go to the human interface guidelines by Apple to visual design, adaptivity and layout and here you will find which device in portrait or landscape mode goes to which size class, it is most common to detect the width size class, and there are two of them. First, the regular second the compact. Now every iPad either in landscape or portrait mode will be regular for both width and height. Every iPhone in portrait mode will be compact for width. And regular for height. But in landscape mode, it's compact for both width and height. The only exception where in landscape the width is regular is for the iPhone in max plus or XR resolutions. But if we focus on the width, you're gonna find that the iPad will be regular, and the iPhone will be compact, except when you use the iPhone in landscape mode, but only for the larger iPhones. So back to our code, we're gonna go to navigation content view. Now notice that in iOS for both iPhone and iPad, we're just using the sidebar. What we like to do is for the compact size class to use a tab bar instead. In order to do that, we're going to have to declare an environment variable. So let's set commercially environment parentheses, backward slash dot horizontal size class var horizontal size class. Now size class will only work for iOS. So we're gonna have to make sure that we don't run this code on a Mac. So let's set the condition, pound if OS, iOS and then pound end if. Then in the body, we're gonna set a condition if horizontal size class equal equal dot compact, curly braces will include the tab bar, which we haven't created yet. And then else will include the sidebar. Next, let's go ahead and create that top bar. So Command N swift UI view tab bar. And here, we're going to include that only for iOS to create a task bar, it's fairly simple. First, we're going to replace the text by tab, view, curly braces. Then you can see the tab bar here, we're just gonna add each tab for each view. So in this case, we're gonna start with the courses view parentheses, then use the modifier dot tap item. And then for the content, we can set an icon. Let's type image parentheses system name. And then the name of the SS symbol, it's going to be book dot closed. For the text, it automatically detects the navigation title. But otherwise, if you wanna custom text, then we can add a text. So text parentheses, courses. Now we don't have a navigation view because this was set in the sidebar. So we're gonna have to set it here as well. We'll have to wrap the courses view inside a navigation view. So navigation view, curly braces, and I will put courses view inside it. So now the modifier is to navigation view instead of the courses view. Now you don't see the navigation view here because we set it to hidden. But we can reuse this code, including the navigation view and the tab item modifier for the other tabs. For the second one, we're gonna use let's say course list, set the icon to list.bullet.rectangle. And we're gonna name this one, tutorials. So if you play the preview, and you tap on the second tab, it's going to show you the course list view. And this time since the navbar is not set to hidden, you see it so now I'm just gonna repeat this code and add more tabs. Feel free to copy and paste the code from the text content, so we have TV for live streams, mailed out stack for certificates, magnifying glass for search. All of the tabs are using the course list as a placeholder until we have those screens. All right, since we're not using a navigation bar, in the courses view, we're gonna have to add a custom large title, and then we can add more content underneath. Let's go to courses view. Let's scroll down a little bit to find the content, then the scroll view and before the lazy v grid, we're going to set text courses. Then set a font modifier .large title, then .bold. Then instead of using an h tag with a spacer, we can also use a technique .frame with a max width to .infinity and comma alignment .leading, we should add some padding. So, .padding 16. Then just like the large title, we have a bit more padding from the top. So, .padding parentheses .top 54. Now we have an issue with a spacing between the large title and the items. So to fix this, we're going to have to wrap the content inside a v stack. So Command click on the text embedded v stack. And we'll have to put the lazy grid as well including its modifiers inside that v stack. For the v stack, we're going to set parentheses spacing to zero. So this solves our padding issue. Now the padding here is for all sides, we can specify to just leading. Perfect now we can add some content underneath this grid of items. Let's start with course row, parentheses. Then we're going to loop it. So Command click, select repeat. Then we'll set the array to course sections, and then pass the item. So item, item. Now if we scroll down, you can see a list of course row if you test on the iPad, so we're gonna select the iPad 11 inch, we can definitely use grid to have multiple columns of those lists items. Let's Command click on for each embedded v stack. Replace v stack by lazy v grid parentheses columns colon, square brackets, grid item parentheses, .adaptive parenthesis, minimum to 240. Great this looks much better and we have a better use of the space available to us. Let's add a little bit of padding. So .padding parethesis. Then we can add a title for this list. So right before the lazy grid, we're gonna set text parentheses latest sections. Then we're gonna set dot font weight to semi bold. Let's also add .frame, parenthesis, max width .infinity, comma, alignment .leading. And after the frame, we're gonna set .padding parentheses. Now let's not forget to go back to content view. And for the size class compact, we're going to set tab bar parenthesis. So if you run your app on all three platforms, you can see that the title here is roughly aligned to the learn on the left side. And the iPhone has the tab bar. And the Mac is using the sidebar as well with the extra content that we just added. In the next session, I wanna show you how to set two types of navigation. One is using the navigation link, and the second one is to use the modal. So I'll see you in the next session.