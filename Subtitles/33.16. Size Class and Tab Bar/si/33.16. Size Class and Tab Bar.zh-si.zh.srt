1
00:00:05,574 --> 00:00:10,574
尺寸类别与标签栏
iPhone的标签栏设置与iPad的侧边栏设置

2
00:00:12,630 --> 00:00:14,950
- [讲师] 大家好 欢迎收看我的

3
00:00:14,950 --> 00:00:16,690
SwiftUI课程第16课

4
00:00:16,690 --> 00:00:19,080
今天我们将学习如何检测尺寸类别

5
00:00:19,080 --> 00:00:22,170
以便我们使用iPad的侧边栏

6
00:00:22,170 --> 00:00:24,260
以及iPhone的标签栏

7
00:00:24,260 --> 00:00:26,740
如果你不确定尺寸类别

8
00:00:26,740 --> 00:00:30,070
可以参考Apple的人机界面指南中的

9
00:00:30,070 --> 00:00:33,300
视觉设计 适应性和布局

10
00:00:33,300 --> 00:00:35,250
在这里 你可以找到哪个设备

11
00:00:35,250 --> 00:00:39,360
在纵向模式或横向模式下适用于哪个尺寸类别

12
00:00:39,360 --> 00:00:43,750
最常见的是检测宽度尺寸类别

13
00:00:43,750 --> 00:00:45,480
一共有两个类别

14
00:00:45,480 --> 00:00:49,110
一是常规版 二是缩小版

15
00:00:49,110 --> 00:00:51,680
现在 无论iPad是横向模式

16
00:00:51,680 --> 00:00:55,930
还是纵向模式 宽度和高度都是常规版

17
00:00:55,930 --> 00:01:00,600
纵向模式的iPhone的宽度都是缩小版

18
00:01:00,600 --> 00:01:02,500
高度是常规版

19
00:01:02,500 --> 00:01:04,050
但在横向模式下

20
00:01:04,050 --> 00:01:06,880
它的宽度和高度都是缩小版

21
00:01:06,880 --> 00:01:11,880
横向模式是常规宽度的唯一例外是

22
00:01:12,010 --> 00:01:15,300
iPhone max plus

23
00:01:15,300 --> 00:01:17,770
或XR的分辨率

24
00:01:17,770 --> 00:01:19,530
但如果以宽度为主

25
00:01:19,530 --> 00:01:22,930
就会发现iPad是常规尺寸

26
00:01:22,930 --> 00:01:25,400
而iPhone是缩小尺寸

27
00:01:25,400 --> 00:01:29,000
除非你在横向模式下使用iPhone

28
00:01:29,000 --> 00:01:31,590
但只适用于较大的iPhone

29
00:01:31,590 --> 00:01:33,080
那么 回到我们的代码

30
00:01:33,080 --> 00:01:36,580
我们将转到导航内容视图

31
00:01:36,580 --> 00:01:40,320
现在请注意 在iPhone和iPad的iOS中

32
00:01:40,320 --> 00:01:42,350
我们都只在使用侧边栏

33
00:01:42,350 --> 00:01:46,130
我们要给缩小版做的是

34
00:01:46,130 --> 00:01:48,270
改为使用标签栏

35
00:01:48,270 --> 00:01:50,920
为此 我们必须声明

36
00:01:50,920 --> 00:01:52,480
一个环境变量

37
00:01:52,480 --> 00:01:57,480
那么我们设置为@ 环境 双圆括号

38
00:01:57,790 --> 00:02:00,760
反斜杠 点 横向

39
00:02:01,600 --> 00:02:02,810
尺寸类别

40
00:02:04,220 --> 00:02:07,030
变量 横向

41
00:02:07,030 --> 00:02:08,103
尺寸类别

42
00:02:08,950 --> 00:02:12,600
现在尺寸类别只适用于iOS

43
00:02:12,600 --> 00:02:13,920
所以我们要确保

44
00:02:13,920 --> 00:02:16,010
我们不在Mac上运行这个代码

45
00:02:16,010 --> 00:02:20,600
那么我们把条件设为 井号 条件 OS iOS

46
00:02:22,320 --> 00:02:25,080
然后是 井号 结束条件

47
00:02:25,080 --> 00:02:26,300
然后在主体中

48
00:02:26,300 --> 00:02:30,410
我们要设置一个条件 即 条件 横向尺寸类别

49
00:02:30,410 --> 00:02:34,050
等于 等于 点 缩小

50
00:02:34,050 --> 00:02:36,640
双花括号 其中包括标签栏

51
00:02:36,640 --> 00:02:38,410
但我们还未创建

52
00:02:38,410 --> 00:02:42,293
然后输入 其它 里面包括侧边栏

53
00:02:43,640 --> 00:02:46,650
接下来 我们来创建顶端栏

54
00:02:46,650 --> 00:02:49,490
点击Command+N 选择SwiftUI视图

55
00:02:51,270 --> 00:02:53,520
输入标签栏

56
00:02:53,520 --> 00:02:56,120
在这里 我们将只在iOS中

57
00:02:56,120 --> 00:02:57,370
包含这个

58
00:02:59,380 --> 00:03:02,410
创建任务栏还是相当简单的

59
00:03:02,410 --> 00:03:04,810
首先 我们要把文本替换为

60
00:03:04,810 --> 00:03:07,760
标签视图

61
00:03:07,760 --> 00:03:09,110
双花括号

62
00:03:09,110 --> 00:03:11,420
然后就可以在这里看到标签栏

63
00:03:11,420 --> 00:03:14,940
我们将为每个视图添加每个标签

64
00:03:14,940 --> 00:03:17,830
在这个例子中 我们先设置课程视图

65
00:03:18,670 --> 00:03:19,583
双圆括号

66
00:03:20,550 --> 00:03:24,453
然后在修饰符中输入点 标签项

67
00:03:25,470 --> 00:03:28,010
然后内容可以设置一个图标

68
00:03:28,010 --> 00:03:32,440
我们输入 图像 双圆括号 系统名称

69
00:03:32,440 --> 00:03:34,560
然后输入SS符号的名称

70
00:03:34,560 --> 00:03:37,870
也就是 书 点 关闭

71
00:03:37,870 --> 00:03:38,880
至于文本

72
00:03:38,880 --> 00:03:42,880
它会自动检测导航标题

73
00:03:42,880 --> 00:03:45,460
但如果你想自定义文本

74
00:03:45,460 --> 00:03:48,040
则可以添加文本

75
00:03:48,040 --> 00:03:51,960
输入 文本 双圆括号 课程

76
00:03:51,960 --> 00:03:55,000
现在我们没有导航视图 是因为

77
00:03:55,000 --> 00:03:57,500
这是在侧边栏中设置的

78
00:03:57,500 --> 00:03:59,590
所以我们也要在这里进行设置

79
00:03:59,590 --> 00:04:01,520
我们要把课程视图包含到

80
00:04:01,520 --> 00:04:03,680
导航视图中

81
00:04:03,680 --> 00:04:05,423
输入导航视图

82
00:04:06,540 --> 00:04:07,940
双花括号

83
00:04:07,940 --> 00:04:11,260
然后把课程视图放到这里

84
00:04:11,260 --> 00:04:15,330
那么现在修饰符由导航视图

85
00:04:15,330 --> 00:04:16,950
代替了课程视图

86
00:04:16,950 --> 00:04:18,840
现在你在这里看不到导航视图

87
00:04:18,840 --> 00:04:21,540
因为我们把它设置为隐藏了

88
00:04:21,540 --> 00:04:23,830
但我们可以重用这个代码

89
00:04:23,830 --> 00:04:25,170
将导航视图

90
00:04:25,170 --> 00:04:28,633
和标签项的修饰符用于其它标签

91
00:04:29,980 --> 00:04:30,970
对于第二个

92
00:04:30,970 --> 00:04:34,240
我们要使用 课程列表

93
00:04:34,240 --> 00:04:39,160
将图标设置为 列表 点 标题符号 点 矩形

94
00:04:39,160 --> 00:04:42,530
我们把这个命名为 教程

95
00:04:42,530 --> 00:04:45,130
所以如果你播放预览

96
00:04:45,130 --> 00:04:47,470
点击第二个标签

97
00:04:47,470 --> 00:04:50,350
它将显示课程列表视图

98
00:04:50,350 --> 00:04:53,360
这次因为导航栏没有设为隐藏

99
00:04:53,360 --> 00:04:54,520
所以你能看到

100
00:04:54,520 --> 00:04:58,300
现在我要重复这段代码并添加更多的标签

101
00:04:58,300 --> 00:05:01,740
请放心地复制并粘贴文本内容中的代码

102
00:05:01,740 --> 00:05:05,780
我们有 电视 用于 直播流媒体

103
00:05:05,780 --> 00:05:08,300
有 邮件栈 用于 证书

104
00:05:08,300 --> 00:05:10,860
放大镜 用 搜索

105
00:05:10,860 --> 00:05:13,370
所有标签都将使用课程列表

106
00:05:13,370 --> 00:05:16,530
作为占位符 直到我们有了那些屏幕

107
00:05:16,530 --> 00:05:20,180
好了 既然我们不打算在课程视图中

108
00:05:20,180 --> 00:05:21,780
使用导航栏

109
00:05:21,780 --> 00:05:25,110
那么我们就要添加一个自定义的大标题

110
00:05:25,110 --> 00:05:27,890
这样我们就可以在下面添加更多的内容

111
00:05:27,890 --> 00:05:30,010
我们转到课程视图

112
00:05:30,010 --> 00:05:32,090
向下滚动一点

113
00:05:32,090 --> 00:05:34,190
找到滚动视图中的

114
00:05:34,190 --> 00:05:37,880
内容 在使用LazyVGrid之前

115
00:05:37,880 --> 00:05:39,780
我们要设置为 文本

116
00:05:40,840 --> 00:05:42,520
课程

117
00:05:42,520 --> 00:05:46,813
然后设置字体的修饰符 点 大标题

118
00:05:47,830 --> 00:05:50,130
然后输入 点 粗体

119
00:05:50,130 --> 00:05:53,050
除了使用h标签和留白外

120
00:05:53,050 --> 00:05:56,500
我们也可以使用一种技巧 即 点 框架

121
00:05:56,500 --> 00:05:58,550
和 最大宽度

122
00:05:59,490 --> 00:06:02,170
到 点 无穷大

123
00:06:02,170 --> 00:06:04,580
逗号 对齐

124
00:06:05,873 --> 00:06:07,393
点 引导

125
00:06:08,500 --> 00:06:09,760
我们应该加一些填充

126
00:06:09,760 --> 00:06:11,367
输入

127
00:06:11,367 --> 00:06:12,200
点 填充

128
00:06:13,230 --> 00:06:14,740
16

129
00:06:14,740 --> 00:06:16,320
然后 就像大标题一样

130
00:06:16,320 --> 00:06:18,890
我们的顶部有了更多的填充

131
00:06:18,890 --> 00:06:20,223
输入

132
00:06:20,223 --> 00:06:21,370
点 填充

133
00:06:22,450 --> 00:06:24,530
双圆括号 点 顶部

134
00:06:24,530 --> 00:06:25,860
54

135
00:06:25,860 --> 00:06:27,980
现在在大标题和项之间

136
00:06:27,980 --> 00:06:31,900
有一个间距问题

137
00:06:31,900 --> 00:06:36,010
要解决这个问题 就要把内容放进

138
00:06:36,010 --> 00:06:37,050
v堆栈中

139
00:06:37,050 --> 00:06:41,020
按住Command点击文本 嵌入v堆栈

140
00:06:41,020 --> 00:06:43,700
还要把LazyVGrid也放进去

141
00:06:43,700 --> 00:06:45,630
包括它的修饰符

142
00:06:47,020 --> 00:06:49,163
也要放进那个v堆栈里

143
00:06:54,200 --> 00:06:55,410
对于v堆栈

144
00:06:55,410 --> 00:06:59,453
我们将设为 双圆括号 留白 到 零

145
00:07:00,340 --> 00:07:02,890
这就解决了填充问题

146
00:07:02,890 --> 00:07:05,730
现在这里的填充是用于各侧的

147
00:07:05,730 --> 00:07:08,083
我们可以指定只用于 引导

148
00:07:09,210 --> 00:07:13,230
很好 现在可以在项的网格下面

149
00:07:13,230 --> 00:07:14,563
添加一些内容

150
00:07:15,420 --> 00:07:19,340
先输入 课程行 双圆括号

151
00:07:19,340 --> 00:07:21,280
然后设置为循环

152
00:07:21,280 --> 00:07:24,023
按住Command点击 选择 重复

153
00:07:25,050 --> 00:07:28,363
然后我们将队列设置为 课程部分

154
00:07:29,860 --> 00:07:31,360
然后传递项

155
00:07:31,360 --> 00:07:32,333
输入 项

156
00:07:33,490 --> 00:07:34,600
到 项

157
00:07:34,600 --> 00:07:38,820
现在 如果向下滚动 就可以看到一个课程行列表

158
00:07:38,820 --> 00:07:40,550
如果在iPad上测试

159
00:07:40,550 --> 00:07:44,010
就要选择11英寸的iPad

160
00:07:44,010 --> 00:07:47,730
当然可以使用网格来让这些列表项目

161
00:07:47,730 --> 00:07:49,530
生成多列

162
00:07:49,530 --> 00:07:53,860
按住Command点击每个嵌入的v堆栈

163
00:07:53,860 --> 00:07:55,330
将v堆栈替换为

164
00:07:55,330 --> 00:07:57,070
Lazy

165
00:07:57,070 --> 00:07:57,903
VGrid

166
00:07:58,840 --> 00:08:00,720
双圆括号 列

167
00:08:02,320 --> 00:08:04,710
冒号 方括号

168
00:08:04,710 --> 00:08:06,960
网格项

169
00:08:06,960 --> 00:08:07,893
双圆括号

170
00:08:08,984 --> 00:08:12,230
点 适应性 双圆括号

171
00:08:12,230 --> 00:08:13,063
最小值

172
00:08:14,360 --> 00:08:15,860
为240

173
00:08:15,860 --> 00:08:17,850
很好 这看起来好多了

174
00:08:17,850 --> 00:08:21,460
而且可以更好地利用现有的空间了

175
00:08:21,460 --> 00:08:22,910
我们来添加一点填充

176
00:08:22,910 --> 00:08:25,050
输入 点 填充 双圆括号

177
00:08:25,950 --> 00:08:28,630
然后我们可以给这个列表添加一个标题

178
00:08:28,630 --> 00:08:30,970
在使用LazyVGrid前

179
00:08:30,970 --> 00:08:35,833
先设置为 文本 双圆括号 最新部分

180
00:08:37,080 --> 00:08:41,800
然后设置为 点 字体粗细 为半粗体

181
00:08:41,800 --> 00:08:42,647
还要加上

182
00:08:42,647 --> 00:08:44,907
点 框架 双圆括号

183
00:08:45,840 --> 00:08:49,080
最大宽度 点 无穷大

184
00:08:49,080 --> 00:08:52,753
逗号 对齐 点 引导

185
00:08:53,910 --> 00:08:57,970
框架后面 设置为 点 填充 双圆括号

186
00:08:57,970 --> 00:09:01,090
不要忘了回到内容视图

187
00:09:01,090 --> 00:09:03,950
缩小版尺寸

188
00:09:03,950 --> 00:09:07,180
要设置为 标签栏 双圆括号

189
00:09:07,180 --> 00:09:09,890
如果在这三个平台上运行应用程序

190
00:09:09,890 --> 00:09:13,730
可以看到 这里的标题大致对齐到

191
00:09:13,730 --> 00:09:16,170
左边的"学习"一栏

192
00:09:16,170 --> 00:09:19,393
iPhone有标签栏

193
00:09:20,730 --> 00:09:23,580
Mac也使用侧边栏

194
00:09:23,580 --> 00:09:26,050
以及我们刚刚添加的额外内容

195
00:09:26,050 --> 00:09:26,950
在下一节课上

196
00:09:26,950 --> 00:09:30,130
我将讲解如何设置两种类型的导航

197
00:09:30,130 --> 00:09:32,680
一种是使用导航链接

198
00:09:32,680 --> 00:09:35,430
第二种是使用模态

199
00:09:35,430 --> 00:09:37,313
我们下节课见

