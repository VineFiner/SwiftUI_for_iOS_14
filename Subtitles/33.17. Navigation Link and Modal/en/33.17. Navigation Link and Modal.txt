- [Meng] Hi there, welcome to my SwiftUI course, section 17, today, we're gonna learn how to set deeper navigation inside our app. So right now, if we tap on any of these sessions, it doesn't do anything. We have a custom transition, but we would like to have the ability to navigate to each of these sections by either using a modal or the default slide navigation. So let's scroll down a little bit to find the content that is right here. Right after latest sections, you're gonna find the LazyVGrid, and we're going to Command click on the course row to embed in VStack and change VStack to navigation link. Let's add parentheses and then destination for which we're going to set course detail parentheses. So the course detail requires a namespace. And in our courses view, we have the namespace, which is already attach to this transition. So we'll have to create another one to satisfy this requirement. So let's type namespace, var namespace2. Then let's go back to navigation link. And this is where we're going to input namespace to namespace2, great. If you resume your preview and you scroll down a little bit, you're gonna find that these are great out. And that's because for the preview to run navigation link, it needs the navigation view. But in this case, it is available from either the sidebar or the tab bar. And we didn't include that here in the courses view because we didn't want to repeat the navigation view. So we'll have to test that in the device directly. So when you run the app, it includes a tab bar, which has the navigation view, and therefore the navigation link will work as well. So when we tap, it's going to do this default transition where you can swipe and go back. Now the navigation link, just like a button is going to try to tint your content. So you're gonna have to set a color for the text, but also if it's an image which we already did, set it to rendering mode original. So back in courses view, let's command click on course row, jump to definition, and then for the title, we're gonna set dot foreground color, set it to dot primary. Now this is the color already set by default, if you haven't set anything, but also if you use the navigation link, it takes priority, which means you're gonna have to set the primary color. In other words, this is a system color and in light mode it's black, in dark mode it's white. For the secondary color, it has different tones of gray for light and dark modes. Now for the modal presentation, we're gonna go to course detail. Let's resume our preview. Then we'll select the course row. Then we'll add a new modifier called dot sheet. Now in the second option you're gonna find is presented content. So is presented is a boolean and content is the destination. So let's set the boolean after endif. Let's type state var show modal is equal to false by default. Then going back to the sheet modifier, we're gonna set is presented to show modal, and don't forget the dollar sign in front of it. This means that it's a binding. Now for the content we can write it this way, or we can just remove the comma with the content and curly braces and put the curly braces after the parenthesis. And here we're gonna set the destination to course list. Next, we're gonna have to set the action. Right after dot sheet, we're gonna set dot on tap gesture. Again, we can make this cleaner by deleting the parentheses and then curly braces. We're going to set show modal is equal to true. Now, if you resume your preview and click on play, since the modal doesn't require a navigation view, you're gonna be able to test it right here by tapping on each of the course row. And this is the default behavior, you can scroll, but also you can swipe from the top to dismiss it. Please keep in mind that it looks a little bit different on the device. If you go to the full screen mode and tap on the course row, it's gonna show the modal with a black background underneath. Another thing to keep note is that if you're using the modal, you're gonna have to keep an eye on the corner radius. To solve that we can set the iOS corner radius to 10 instead of 22, so this will solve our issue. Next I wanna show you how to dismiss the modal using a close button, but first we're gonna create a new view. Let's press command + N to create a new SwiftUI file, select SwiftUI view. We'll name this course section detail, targeting iOS and macOS. Let me show the preview. Then I'm gonna start right away with a close button. So close button parentheses. I'll put this to the top right. So Command, click on it, embed it in VStack, set to ZStack instead, then parentheses after, alignment to top trailing. Now it's not gonna do anything because the ZStack size is this much. So just like VStack, the alignment applies to the items in relation to each other. Now I'm going to add some content before the close button. Let's start with the course item, parentheses. Now, because the course item is taking the full screen, the close button is aligning against that space. For the course item, I'm gonna set a frame with a height of 300. I'm also going to set a corner radius to zero. Then I'll put this course item inside a Vstack first, then change that VStack to scroll view. After that I'm going to put a bunch of texts. So let's start with text Command, click on the text, embed in Vstack. For the text, I'm just gonna copy and paste from my text content. You can get this from the design code page, and at the end of the VStack, after the curly braces, I'm going to add a modifier or padding parentheses. And then for the VStack, I'm going to add parenthesis, alignment to dot leading comma, spacing to 30. Let's scroll down a little bit. We're gonna find the close button and let's add a bit of padding. So padding parentheses. For closing the modal, we're gonna have to set an environment variable. So right before body, we're gonna set at environment, parentheses backwards slash dot presentation mode, then var presentation mode. Going back to the bottom, right after close button, we're going to set on tap gesture. And again, we can clean this by just keeping the curly braces and set presentation mode dot wrapped value dot dismiss. Great. Now we can go back to course detail. And this is where instead of calling course lists, we're going to use course section detail. Now, if you test this on the device, you're gonna see that we're gonna go to the modal. Everything works perfectly, and the dismiss button works as well, awesome. There are just two things you need to be aware of for the Mac. So going back to courses view, we're gonna find the navigation link. If you test this on the Mac, so let me select this and run. Navigation link is a little bit buggy on the beta and it has its own styling. So instead of using navigation link, I would definitely use a transition that we learned earlier with a preset or a custom one using matchedGeometryEffect. For now, we're gonna set a condition so pound if OS iOS, then after that else, and endif. For the Mac, we're simply not gonna use navigation link. So just copy and paste course row. Next issue is the modal. So when you go to full screen mode and you tap one of the rows, the width of the modal is going to use all available space. So you're gonna have to limit the width and height. Let's go back to course section detail, scroll to the very top. We're gonna change body to content. And before content, we're going to create var body of type some view, curly braces, because body is the first thing it's going to load. Inside the curly braces, we're gonna put content and also we're gonna set the platform conditions. So before content, pound if OS iOS else, endif. For the Mac, we're gonna set content with a frame modifier, parentheses with 800, height 600. Awesome, so now we can go to the modal and it's going to be 800 by 600. In the next session, I wanna show you how to set the nav bar and the tab bar to be underneath this full screen animation. As a result, we won't have to set a custom large title here, and we can use that nav bar. Likewise for the iPhone, the content is going to be above the tab bar, which is a lot nicer. So I'll see you in the next session.