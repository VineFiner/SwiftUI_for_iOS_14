- SwiftUI 2 导航链接和模态 通过导航链接和模态呈现内容，关闭行为

- 大家好，欢迎来到我的SwiftUI课程第17节课 今天，我们将学习如何在应用设置更高级的导航 现在，如果点击任何这些会话 并不会执行任何操作 我们有自定义过渡 但我们想通过使用模态或 默认滑动导航来导航至这些会话 稍微向下滑动，找到与这相符的内容 在Latest sections后 你会找到LazyVGrid 按Command键并点击course row 选择Embed in VStack，将Vstack改成NavigationLink 添加括号，输入destination 我们将设置CourseDetail CourseDetail需要一个命名空间 在CourseView，有命名空间 它附加于这个过渡 为满足这一要求 我们需要创建另一个命名空间 输入namespace，var namespace2 然后，返回到导航链接 在这里，输入namespace: namespace2 很好 恢复预览，稍微向下滚动 你将发现这些都变灰了 因为需要导航视图 预览才可运行导航链接 在这个情况，它可用于边栏或选项卡栏 我们不将它添加至课程视图中 是因为我们不想要重复导航视图 我们必须直接在设备测试它 当你运行应用时，它包含带有导航视图的选项卡栏 因此，导航链接也能运行 点击时，会执行默认过渡 可以滑动和返回 导航链接，就像一个能为你的内容着色的按钮 因此，你将为文本设置颜色 如果是我们已经做了的图像 则将它设为renderingMode 回到课程视图，现在按住Command键点按CourseRow 跳至Definition，对于Title 我们把.ForegroundColor设为.primary 如果你未进行设置 这是默认设置的颜色 如果你使用导航链接 得自行设置主要颜色 换言之，这是系统颜色 LightMode是黑色，DarkMode是白色 对于次要颜色，LightMode和DarkMode 都是不同色调的灰色 对于模态演示 我们将前往CourseDetail 让我们恢复预览 然后，选择CourseRow 添加一个称为.sheet的新修饰符 在第二个选项，你将找到Presented.Content 因此，isPresented是布尔值，Content是目标 现在在endif后设置布尔值 输入State var ShowModal = false 这是默认情况 然后，回到Sheet修饰符 我们将把Is Presented设为showModal 别忘了在它前方要加$符号 这意味着它是绑定的 对于Content，我们能这样写 或者我们能移除逗号、内容和大括号 并将大括号放在括号后方 我们将目标设为CourseList 接下来，我们将设置动作 在.sheet后设置.onTopGesture 再次，我们能删除挂号 让它看起来更简洁，添加大挂号 将ShowModal设为=true 现在，如果你恢复预览，点击播放 由于模态不需要导航视图 点击每个课程行 即可测试它 这是默认行为，你能滚动 或从顶端向下滑动，以关闭它 请注意，它在设备中看起来稍有不同 如果你进入全屏模式，点击课程行 它将显示模态，下方背景为黑色 另一件需要注意的事是 如果你使用模态 必须要留意圆角半径 要解决这一问题，我们能将iOS圆角半径 设为10，而不是22 接下来，我要向你展示如何使用 关闭按钮关闭这个模态 首先，我们将创建一个新视图 按Command + N，创建一个新的SwiftUI文件 选择SwiftUI视图 我们将把它命名为CourseSectionDetail 目标为iOS和mac操作系统 让我展示预览 首先，我将创建关闭按钮 CloseButton 我将把它放在右上角 按Command点击它，选择Embed in Vstack 将它设为ZStack 然后添加挂号，Alignment:.topTrailing 这不会执行任何操作 因为Zstack的大小是如此大 就如Vstack一样，对齐适用于 相互关联的项 现在，我将在CloseButton前添加一些内容 先输入CourseItem 由于CourseItem会占据全屏 关闭按钮会对齐这个空间 对于CourseItem，我将设置一个高度为300的框架 我会将圆角半径设为0 然后，我先将这个CourseItem放入Vstack 接下来，将VStack改为ScrollView 然后，我将输入一段文本 先输入Text，按Command点击Text 选择Embed in Vstack 对于文本，我将复制粘贴我的文本内容 你可以从设计代码页获得这段文本 我将在Vstack的最后，大挂号之后 添加一个修饰符，padding 对于VStack，我将添加挂号 Alignment:.leading, 将spacing设为30 稍微往下滑动 找到CloseButtton 添加padding padding 要关闭模态，我们将设置环境变量 在body前，我们将输入@Environment挂号 \.presentationMode 然后，输入var presentationMode 返回至底部，在CloseButton下方 我们将设置onTapGesture 再次，我们能删除它 仅保留大挂号 输入presentationMode.wrappedValue.dismiss 很好，现在我们能回到CourseDetail 我们不会称之为CourseList 而会使用CourseSectionDetail 现在，如果你在设备测试它 就能看见其效果，我们将前往模态 一切都能顺利操作 关闭按钮也能运作，很棒 对于Mac，有两点你需要注意 返回到CourseView 我们将找到NavigationLink 如果你在Mac测试这 让我选择这，然后运行 对于测试版，导航链接有小缺陷 它有自己的样式 与其使用导航链接 我会使用我们之前学到的过渡预设 或自定义过渡，方法是添加matchedGeometryEffect 现在，我们将设置一个条件，输入#if os 然后输入else，还有endif 对于Mac，我们不会使用导航链接 复制粘贴CourseRow，下一个问题是模态 当你进入全屏模式时 点击其中一行 模态宽度将使用所有可用的空间 因此，你得限制宽度和高度 让我们回到CourseSectionDetail 滚动到最顶端 我们将把body改为content 在content前，我们将创建var body 或输入some View大挂号 因为首先加载的是body 在大挂号里，我们将输入content 我们也将设置平台条件 在content之前，输入#if OS else endif 对于Mac，我们将输入content，添加frame修饰符 很棒，现在我们将前往模态 它的宽度和高度将是800x600 在下一节课 我将向你展示如何在这个全屏动画下方 设置导航栏和选项卡栏 这样我们不必在这里设置自定义大标题 我们能使用导航栏 对于iPhone也是这样 内容将在选项卡栏上方 这样看起来更美观 下节课见