1
00:00:05,350 --> 00:00:10,175
SwiftUI 2 導航鏈接和模態 通過導航鏈接和模態呈現內容，關閉行為

2
00:00:12,570 --> 00:00:16,325
- 大家好，歡迎來到我的SwiftUI課程第17節課

3
00:00:16,325 --> 00:00:20,583
今天，我們將學習如何在應用設置更高級的導航

4
00:00:20,583 --> 00:00:23,133
現在，如果點擊任何這些會話

5
00:00:23,133 --> 00:00:24,360
並不會執行任何操作

6
00:00:24,360 --> 00:00:26,623
我們有自定義過渡

7
00:00:26,623 --> 00:00:30,859
但我們想通過使用模態或

8
00:00:30,859 --> 00:00:35,846
默認滑動導航來導航至這些會話

9
00:00:36,870 --> 00:00:41,375
稍微向下滑動，找到與這相符的內容

10
00:00:43,180 --> 00:00:45,210
在Latest sections後

11
00:00:45,210 --> 00:00:47,490
你會找到LazyVGrid

12
00:00:47,490 --> 00:00:50,640
按Command鍵並點擊course row

13
00:00:50,640 --> 00:00:55,640
選擇Embed in VStack，將Vstack改成NavigationLink

14
00:00:57,470 --> 00:01:01,740
添加括號，輸入destination

15
00:01:01,740 --> 00:01:06,390
我們將設置CourseDetail

16
00:01:06,390 --> 00:01:10,210
CourseDetail需要一個命名空間

17
00:01:10,210 --> 00:01:14,830
在CourseView，有命名空間

18
00:01:14,830 --> 00:01:17,740
它附加於這個過渡

19
00:01:17,740 --> 00:01:19,800
為滿足這一要求

20
00:01:19,800 --> 00:01:22,380
我們需要創建另一個命名空間

21
00:01:22,380 --> 00:01:26,950
輸入namespace，var namespace2

22
00:01:28,430 --> 00:01:32,520
然後，返回到導航鏈接

23
00:01:32,520 --> 00:01:37,496
在這里，輸入namespace: namespace2

24
00:01:37,496 --> 00:01:40,710
很好

25
00:01:40,710 --> 00:01:43,570
恢復預覽，稍微向下滾動

26
00:01:43,570 --> 00:01:45,745
你將發現這些都變灰了

27
00:01:45,745 --> 00:01:48,100
因為需要導航視圖

28
00:01:48,100 --> 00:01:52,070
預覽才可運行導航鏈接

29
00:01:52,070 --> 00:01:57,070
在這個情況，它可用於邊欄或選項卡欄

30
00:01:57,100 --> 00:01:59,630
我們不將它添加至課程視圖中

31
00:01:59,630 --> 00:02:02,870
是因為我們不想要重復導航視圖

32
00:02:02,870 --> 00:02:06,600
我們必須直接在設備測試它

33
00:02:06,600 --> 00:02:11,150
當你運行應用時，它包含帶有導航視圖的選項卡欄

34
00:02:11,150 --> 00:02:14,520
因此，導航鏈接也能運行

35
00:02:14,520 --> 00:02:18,220
點擊時，會執行默認過渡

36
00:02:18,220 --> 00:02:20,770
可以滑動和返回

37
00:02:20,770 --> 00:02:25,415
導航鏈接，就像一個能為你的內容著色的按鈕

38
00:02:25,415 --> 00:02:28,440
因此，你將為文本設置顏色

39
00:02:28,440 --> 00:02:31,090
如果是我們已經做了的圖像

40
00:02:31,090 --> 00:02:33,770
則將它設為renderingMode

41
00:02:33,770 --> 00:02:38,170
回到課程視圖，現在按住Command鍵點按CourseRow

42
00:02:38,170 --> 00:02:41,880
跳至Definition，對於Title

43
00:02:41,880 --> 00:02:46,880
我們把.ForegroundColor設為.primary

44
00:02:47,870 --> 00:02:50,860
如果你未進行設置

45
00:02:50,860 --> 00:02:53,010
這是默認設置的顏色

46
00:02:53,010 --> 00:02:57,360
如果你使用導航鏈接

47
00:02:57,360 --> 00:03:00,510
得自行設置主要顏色

48
00:03:00,510 --> 00:03:03,030
換言之，這是系統顏色

49
00:03:03,030 --> 00:03:07,160
LightMode是黑色，DarkMode是白色

50
00:03:07,160 --> 00:03:10,240
對於次要顏色，LightMode和DarkMode

51
00:03:10,240 --> 00:03:12,360
都是不同色調的灰色

52
00:03:12,360 --> 00:03:14,210
對於模態演示

53
00:03:14,210 --> 00:03:16,900
我們將前往CourseDetail

54
00:03:16,900 --> 00:03:18,923
讓我們恢復預覽

55
00:03:20,420 --> 00:03:23,500
然後，選擇CourseRow

56
00:03:23,500 --> 00:03:27,560
添加一個稱為.sheet的新修飾符

57
00:03:27,560 --> 00:03:32,560
在第二個選項，你將找到Presented.Content

58
00:03:32,950 --> 00:03:37,700
因此，isPresented是布爾值，Content是目標

59
00:03:37,700 --> 00:03:41,120
現在在endif後設置布爾值

60
00:03:41,120 --> 00:03:45,735
輸入State var ShowModal = false

61
00:03:45,735 --> 00:03:48,250
這是默認情況

62
00:03:48,250 --> 00:03:50,860
然後，回到Sheet修飾符

63
00:03:50,860 --> 00:03:54,880
我們將把Is Presented設為showModal

64
00:03:54,880 --> 00:03:58,120
別忘了在它前方要加$符號

65
00:03:58,120 --> 00:04:00,720
這意味著它是綁定的

66
00:04:00,720 --> 00:04:02,840
對於Content，我們能這樣寫

67
00:04:02,840 --> 00:04:06,610
或者我們能移除逗號、內容和大括號

68
00:04:06,610 --> 00:04:10,800
並將大括號放在括號後方

69
00:04:11,670 --> 00:04:15,140
我們將目標設為CourseList

70
00:04:15,140 --> 00:04:17,630
接下來，我們將設置動作

71
00:04:17,630 --> 00:04:22,363
在.sheet後設置.onTopGesture

72
00:04:23,410 --> 00:04:25,342
再次，我們能刪除掛號

73
00:04:25,342 --> 00:04:29,090
讓它看起來更簡潔，添加大掛號

74
00:04:29,090 --> 00:04:34,090
將ShowModal設為=true

75
00:04:34,570 --> 00:04:37,780
現在，如果你恢復預覽，點擊播放

76
00:04:37,780 --> 00:04:41,180
由於模態不需要導航視圖

77
00:04:41,180 --> 00:04:44,000
點擊每個課程行

78
00:04:44,000 --> 00:04:45,960
即可測試它

79
00:04:45,960 --> 00:04:49,660
這是默認行為，你能滾動

80
00:04:49,660 --> 00:04:53,700
或從頂端向下滑動，以關閉它

81
00:04:53,700 --> 00:04:57,790
請註意，它在設備中看起來稍有不同

82
00:04:57,790 --> 00:05:01,930
如果你進入全屏模式，點擊課程行

83
00:05:01,930 --> 00:05:05,480
它將顯示模態，下方背景為黑色

84
00:05:05,480 --> 00:05:06,942
另一件需要註意的事是

85
00:05:06,942 --> 00:05:08,860
如果你使用模態

86
00:05:08,860 --> 00:05:11,850
必須要留意圓角半徑

87
00:05:11,850 --> 00:05:16,518
要解決這一問題，我們能將iOS圓角半徑

88
00:05:16,518 --> 00:05:19,883
設為10，而不是22

89
00:05:22,080 --> 00:05:24,420
接下來，我要向你展示如何使用

90
00:05:24,420 --> 00:05:26,000
關閉按鈕關閉這個模態

91
00:05:26,000 --> 00:05:28,070
首先，我們將創建一個新視圖

92
00:05:28,070 --> 00:05:31,690
按Command + N，創建一個新的SwiftUI文件

93
00:05:31,690 --> 00:05:33,540
選擇SwiftUI視圖

94
00:05:33,540 --> 00:05:37,760
我們將把它命名為CourseSectionDetail

95
00:05:37,760 --> 00:05:40,163
目標為iOS和mac操作系統

96
00:05:41,970 --> 00:05:44,350
讓我展示預覽

97
00:05:44,350 --> 00:05:47,080
首先，我將創建關閉按鈕

98
00:05:47,080 --> 00:05:49,780
CloseButton

99
00:05:49,780 --> 00:05:52,050
我將把它放在右上角

100
00:05:52,050 --> 00:05:55,400
按Command點擊它，選擇Embed in Vstack

101
00:05:55,400 --> 00:05:57,623
將它設為ZStack

102
00:05:58,740 --> 00:06:03,740
然後添加掛號，Alignment:.topTrailing

103
00:06:06,330 --> 00:06:08,837
這不會執行任何操作

104
00:06:08,837 --> 00:06:11,000
因為Zstack的大小是如此大

105
00:06:11,000 --> 00:06:15,040
就如Vstack一樣，對齊適用於

106
00:06:15,040 --> 00:06:16,960
相互關聯的項

107
00:06:16,960 --> 00:06:21,040
現在，我將在CloseButton前添加一些內容

108
00:06:21,040 --> 00:06:25,500
先輸入CourseItem

109
00:06:25,500 --> 00:06:28,690
由於CourseItem會占據全屏

110
00:06:28,690 --> 00:06:32,270
關閉按鈕會對齊這個空間

111
00:06:32,270 --> 00:06:37,270
對於CourseItem，我將設置一個高度為300的框架

112
00:06:37,560 --> 00:06:42,560
我會將圓角半徑設為0

113
00:06:42,640 --> 00:06:46,830
然後，我先將這個CourseItem放入Vstack

114
00:06:46,830 --> 00:06:49,563
接下來，將VStack改為ScrollView

115
00:06:50,680 --> 00:06:53,190
然後，我將輸入一段文本

116
00:06:53,190 --> 00:06:58,190
先輸入Text，按Command點擊Text

117
00:06:58,740 --> 00:07:00,050
選擇Embed in Vstack

118
00:07:00,050 --> 00:07:04,980
對於文本，我將復制粘貼我的文本內容

119
00:07:04,980 --> 00:07:07,890
你可以從設計代碼頁獲得這段文本

120
00:07:07,890 --> 00:07:12,460
我將在Vstack的最後，大掛號之後

121
00:07:12,460 --> 00:07:16,520
添加一個修飾符，padding

122
00:07:16,520 --> 00:07:21,520
對於VStack，我將添加掛號

123
00:07:21,600 --> 00:07:26,600
Alignment:.leading, 將spacing設為30

124
00:07:28,930 --> 00:07:30,680
稍微往下滑動

125
00:07:30,680 --> 00:07:32,170
找到CloseButtton

126
00:07:32,170 --> 00:07:34,030
添加padding

127
00:07:34,030 --> 00:07:36,320
padding

128
00:07:36,320 --> 00:07:40,770
要關閉模態，我們將設置環境變量

129
00:07:40,770 --> 00:07:45,310
在body前，我們將輸入@Environment掛號

130
00:07:45,310 --> 00:07:49,903
\.presentationMode

131
00:07:52,240 --> 00:07:56,240
然後，輸入var presentationMode

132
00:07:56,240 --> 00:08:00,490
返回至底部，在CloseButton下方

133
00:08:00,490 --> 00:08:03,200
我們將設置onTapGesture

134
00:08:03,200 --> 00:08:05,768
再次，我們能刪除它

135
00:08:05,768 --> 00:08:08,592
僅保留大掛號

136
00:08:08,592 --> 00:08:13,592
輸入presentationMode.wrappedValue.dismiss

137
00:08:14,350 --> 00:08:17,460
很好，現在我們能回到CourseDetail

138
00:08:17,460 --> 00:08:20,870
我們不會稱之為CourseList

139
00:08:20,870 --> 00:08:24,630
而會使用CourseSectionDetail

140
00:08:24,630 --> 00:08:27,210
現在，如果你在設備測試它

141
00:08:27,210 --> 00:08:30,040
就能看見其效果，我們將前往模態

142
00:08:30,040 --> 00:08:31,390
一切都能順利操作

143
00:08:31,390 --> 00:08:34,700
關閉按鈕也能運作，很棒

144
00:08:34,700 --> 00:08:38,430
對於Mac，有兩點你需要註意

145
00:08:38,430 --> 00:08:40,330
返回到CourseView

146
00:08:40,330 --> 00:08:42,540
我們將找到NavigationLink

147
00:08:42,540 --> 00:08:44,810
如果你在Mac測試這

148
00:08:44,810 --> 00:08:47,210
讓我選擇這，然後運行

149
00:08:47,210 --> 00:08:50,570
對於測試版，導航鏈接有小缺陷

150
00:08:50,570 --> 00:08:52,550
它有自己的樣式

151
00:08:52,550 --> 00:08:54,440
與其使用導航鏈接

152
00:08:54,440 --> 00:08:57,880
我會使用我們之前學到的過渡預設

153
00:08:57,880 --> 00:09:01,820
或自定義過渡，方法是添加matchedGeometryEffect

154
00:09:01,820 --> 00:09:06,637
現在，我們將設置一個條件，輸入#if os

155
00:09:08,420 --> 00:09:12,923
然後輸入else，還有endif

156
00:09:13,920 --> 00:09:17,490
對於Mac，我們不會使用導航鏈接

157
00:09:17,490 --> 00:09:21,640
復制粘貼CourseRow，下一個問題是模態

158
00:09:21,640 --> 00:09:23,380
當你進入全屏模式時

159
00:09:23,380 --> 00:09:25,330
點擊其中一行

160
00:09:25,330 --> 00:09:29,020
模態寬度將使用所有可用的空間

161
00:09:29,020 --> 00:09:31,950
因此，你得限制寬度和高度

162
00:09:31,950 --> 00:09:35,030
讓我們回到CourseSectionDetail

163
00:09:35,030 --> 00:09:37,450
滾動到最頂端

164
00:09:37,450 --> 00:09:40,440
我們將把body改為content

165
00:09:40,440 --> 00:09:44,720
在content前，我們將創建var body

166
00:09:44,720 --> 00:09:47,770
或輸入some View大掛號

167
00:09:47,770 --> 00:09:50,700
因為首先加載的是body

168
00:09:50,700 --> 00:09:53,450
在大掛號里，我們將輸入content

169
00:09:53,450 --> 00:09:56,350
我們也將設置平臺條件

170
00:09:56,350 --> 00:10:01,350
在content之前，輸入#if OS

171
00:10:01,876 --> 00:10:04,467
else endif

172
00:10:05,600 --> 00:10:10,553
對於Mac，我們將輸入content，添加frame修飾符

173
00:10:15,850 --> 00:10:18,630
很棒，現在我們將前往模態

174
00:10:18,630 --> 00:10:21,453
它的寬度和高度將是800x600

175
00:10:22,830 --> 00:10:23,810
在下一節課

176
00:10:23,810 --> 00:10:27,580
我將向你展示如何在這個全屏動畫下方

177
00:10:27,580 --> 00:10:31,558
設置導航欄和選項卡欄

178
00:10:31,558 --> 00:10:36,450
這樣我們不必在這里設置自定義大標題

179
00:10:36,450 --> 00:10:39,300
我們能使用導航欄

180
00:10:39,300 --> 00:10:41,460
對於iPhone也是這樣

181
00:10:41,460 --> 00:10:44,360
內容將在選項卡欄上方

182
00:10:44,360 --> 00:10:46,410
這樣看起來更美觀

183
00:10:46,410 --> 00:10:48,580
下節課見
