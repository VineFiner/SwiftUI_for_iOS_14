- [Meng] Hi, and welcome to session 18 of my swiftUI course. So today we're gonna learn how to animate this view above the sidebar, and also the tab bar. As a result is going to be also above the navbar, which means that we won't have to create a custom title anymore. And we will be able to use this sidebar toggle, which is on the navbar. Now back to Xcode, we're gonna go to navigation and we're gonna go to content view. So right now if you're on the iPhone, it's gonna use the top bar otherwise on the iPad, the sidebar. What we're going to do is to put both of them to reference courses view. As a result, courses view will be managing the sidebar and a tab bar. So let's go to courses view. Now here we're going to create a separate instance of the sidebar and the top bar, and it needs to reference the content part of the courses view. First of all, we're going to click the top menu to find the full content. And here, let's double click the curly braces to find the end, and right after that, let's type var tab bar camel case of type some view, curly braces, then we're gonna go to the top bar dot Swift, and we're going to copy everything, including the tab view. So copy, go back to courses view and paste that inside the curly braces. Now for the first item, instead of courses view, we're going to reference content, great. Let's do the same for this sidebar. So double click on the curly braces and right after that type var sidebar of type some view curly braces, then we're gonna go to the sidebar, and for the content, we're going to copy the list, including the list style modifier, then go back to courses view, paste that inside the sidebar. So just like the structure in the sidebar, where we have the navigation view, as well as the content, we're going to do the same in courses view. So come on and click on List, embed in v stack, change v stack two navigation view. Then after the list style modifier, we're gonna put content. Now we're also missing two modifiers for the title as well as the toolbar. So we're gonna go back to the sidebar, and here in the body, right after content, we're gonna copy, navigation title and toolbar. And then go back to courses view, we're gonna put that after list style, so that's it. And the reason why the sidebar is a little bit more complicated is because of the platform condition. Now the sidebar and the tab bar has to be here because we are referencing the content. Once we have this setup, we can go back to the very top. And this is where we're managing every view. So right now it's simply calling the content directly and we're hiding the navigation bar. Instead of doing that, we can reference the tab bar directly. Now what is interesting here is that the Z stack is stacking the tab bar underneath the full content, which means that the full content is going to animate above, so, if we resume the preview, you will see that when I tap on any cart, the tab bar is underneath now. And because of that, we can use the navbar and we can also remove the custom large title. So in content, let's remove the text element. And right after scroll view, we can put the navigation title. So after z index dot navigation title, set it to courses. And because of that, when I scroll, you can see this navbar and the animation is going to be on top without a problem. So what's left to do at this point is to make it work with a sidebar for the iPad. In order to detect the largest screen on the iPad, we're gonna have to set the environment, so at environment, parentheses, backward slash dot, horizontal size class, var horizontal size class. Let's set the platform condition so that this code only runs on iOS, type pound, if OS, iOS then after that, and if. Next let's go to body where we reference tab bar, we're gonna set if horizontal size class, equal equal compact, curly braces, then we can put the tab bar. Else, we can reference the sidebar, awesome. So now we can test this on the iPad 11 inch. And voila, we have exactly the same UI as before, except now we're using the navbar, but also, the animated fullscreen is above the sidebar, and the tab bar as well. Another big advantage is that now that we're using the nav bar, the sidebar toggle is now always present. One last thing we need to do is to test for the Mac. So let's select the Mac and try to build it Command + B. Now it's giving us an error. So let's look at it and here it says that the navigation bar trailing option for the toolbar is not available for the Mac. So even though we're not using the sidebar from the courses view for the Mac, it is still running the code. And that's because in content view for the Mac, it's going to sidebar first, and then from sidebar, it's running courses view, which happens to have this code. So in this case, we can just set a platform condition, pound if OS, iOS and then at the end of navigation view, and if. Let's not forget to add view builder for sidebar. Great, now we can run the code. And the Mac App is working perfectly just like before, but this time without the custom large title. In the next session, I wanna show you how to add reusable components and modifiers to the library so that you can easily insert them from the menu. So I'll see you in the next session.